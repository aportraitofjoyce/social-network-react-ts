{"version":3,"sources":["components/UI/Loader/Loader.tsx","redux/reducers/profile-reducer.ts","api/profile-api.ts","redux/reducers/users-reducer.ts","api/users-api.ts","api/follow-api.ts","redux/reducers/dialogs-reducer.ts","components/UI/Form/FormCheckbox/FormCheckbox.tsx","pages/Login/Login.module.css","pages/ErrorPage/Error404.module.css","api/axios-instance.ts","redux/reducers/app-reducer.ts","redux/store.ts","components/Sidebar/Sidebar.tsx","components/Icons/LogoIcon.tsx","components/Header/Header.tsx","components/UI/ScrollTop/ScrollTop.tsx","app/App.tsx","components/UI/MUI/theme.ts","index.tsx","routes/routes.ts","pages/Login/LoginForm/LoginForm.tsx","pages/Login/Login.tsx","pages/ErrorPage/Error404.tsx","types/api-types.ts","hooks/hooks.ts","redux/reducers/auth-reducer.ts","api/security-api.ts","api/auth-api.ts","components/UI/Form/Form.module.css","components/UI/Form/FormInput/FormInput.tsx"],"names":["Loader","memo","sx","color","zIndex","theme","drawer","open","PROFILE_ACTIONS_TYPES","profileAPI","id","axiosInstance","get","then","response","data","status","put","avatarFile","formData","FormData","append","description","initialState","userProfile","userStatus","profileReducer","state","action","type","SET_USER_PROFILE","payload","SET_USER_STATUS","SET_USER_AVATAR","photos","userAvatar","setUserStatus","getUserProfile","dispatch","a","getUserStatus","updateUserStatus","resultCode","ResultCodes","Success","updateUserAvatar","alert","messages","updateUserDescription","userDescription","getState","auth","USERS_ACTIONS_TYPES","usersAPI","page","pageSize","term","followers","followAPI","post","delete","usersData","totalUsersCount","currentPage","isLoading","followLoader","search","usersReducer","FOLLOW","map","user","followed","SET_USERS","users","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","total","TOGGLE_LOADER","TOGGLE_FOLLOW_LOADER","filter","u","SET_SEARCH_PARAMS","follow","setUsers","setCurrentPage","setTotalUsersCount","toggleLoader","toggleFollowLoader","setSearchParams","requestUsers","items","totalCount","changeCurrentPage","followUser","DIALOGS_ACTIONS_TYPES","dialogsReducer","SET_MESSAGES","message","messageID","v1","index","array","length","setMessages","FormCheckbox","label","props","useField","field","meta","className","s","formFieldCheckbox","control","touched","error","errorMessage","module","exports","axios","create","baseURL","withCredentials","headers","APP_ACTIONS_TYPES","isInitialized","setAppInitialized","SET_APP_INITIALIZED","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","profile","dialogs","authReducer","app","store","createStore","applyMiddleware","thunk","Sidebar","dataForSidebar","name","link","PATH","PROFILE","DIALOGS","USERS","aria-label","List","style","padding","item","ListItem","disablePadding","component","Link","to","textDecoration","ListItemButton","ListItemText","primary","LogoIcon","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","Header","useAppSelector","useDispatch","logoutHandler","useCallback","logout","AppBar","position","Toolbar","IconButton","href","ROOT","size","edge","mr","Typography","variant","flexGrow","isAuth","Box","display","alignItems","gap","login","Avatar","alt","src","Button","onClick","ml","LOGIN","ScrollTop","children","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","event","anchor","target","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","bottom","right","App","useEffect","checkAuth","CssBaseline","Container","maxWidth","marginTop","marginBottom","Grid","container","spacing","xs","fallback","publicRoutes","path","exact","from","EMPTY","ERROR","Fab","defaultTheme","createTheme","palette","mode","main","ReactDOM","render","StrictMode","ThemeProvider","getElementById","LoginForm","captchaURL","onSubmit","email","password","rememberMe","setStatus","captcha","initialValues","validationSchema","Yup","required","max","values","resetForm","FormInput","fontSize","fontWeight","Login","rel","Error404","Profile","lazy","Dialogs","Users","PROFILE_WITH_ID","ResultCodeForCaptcha","useSelector","AUTH_ACTIONS_TYPES","securityAPI","url","authAPI","SET_USER_DATA","LOGOUT","SET_CAPTCHA","setAuthUserData","Captcha","getCaptchaURL","formField"],"mappings":"0IAAA,sEAGaA,EAAaC,gBAAK,WAC3B,OACI,cAAC,IAAD,CAAUC,GAAI,CAACC,MAAO,OAAQC,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,OAAS,IAAIC,MAAI,EAA/E,SACI,cAAC,IAAD,CAAkBJ,MAAM,kB,iPCF/BK,E,yCCAQC,EACO,SAACC,GAAD,OAAuBC,IAClCC,IADkC,kBACFF,IAChCG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAHtBN,EAKM,SAACC,GAAD,OAAuBC,IACjCC,IADiC,yBACHF,IAC9BG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAPtBN,EASS,SAACO,GAAD,OAAoBL,IACjCM,IADiC,iBACK,CAACD,WACvCH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAXtBN,EAaS,SAACS,GACf,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GAElBP,IACFM,IADE,gBACsEE,GACxEN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAnB1BN,EAsBc,SAACa,GAAD,OAAkCX,IACpDM,IADoD,UACrBK,GAC/BT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,kBDxB9BP,K,oCAAAA,E,kCAAAA,E,mCAAAA,M,KA0CL,IAAMe,EAA4B,CAC9BC,YAAa,KACbC,WAAY,IAGHC,EAAiB,WAAgE,IAA/DC,EAA8D,uDAAtDJ,EAAcK,EAAwC,uCACzF,OAAQA,EAAOC,MACX,KAAKrB,EAAsBsB,iBACvB,OAAO,2BAAIH,GAAX,IAAkBH,YAAaI,EAAOG,QAAQP,cAElD,KAAKhB,EAAsBwB,gBACvB,OAAO,2BAAIL,GAAX,IAAkBF,WAAYG,EAAOG,QAAQN,aAEjD,KAAKjB,EAAsByB,gBACvB,OAAO,2BAAIN,GAAX,IAAkBH,YAAY,2BAAKG,EAAMH,aAAZ,IAAyBU,OAAQN,EAAOG,QAAQI,eAEjF,QACI,OAAOR,IASNS,EAAgB,SAACX,GAAD,MAAyB,CAClDI,KAAMrB,EAAsBwB,gBAC5BD,QAAS,CAACN,gBAQDY,EAAiB,SAAC3B,GAAD,8CAAkC,WAAM4B,GAAN,eAAAC,EAAA,sEACrC9B,EAA0BC,GADW,OACtDI,EADsD,OAE5DwB,GAjB2Bd,EAiBHV,EAjBqC,CAC7De,KAAMrB,EAAsBsB,iBAC5BC,QAAS,CAACP,kBAakD,iCAflC,IAACA,IAeiC,OAAlC,uDAKjBgB,EAAgB,SAAC9B,GAAD,8CAAkC,WAAM4B,GAAN,eAAAC,EAAA,sEACpC9B,EAAyBC,GADW,OACrDI,EADqD,OAE3DwB,EAASF,EAActB,IAFoC,2CAAlC,uDAKhB2B,EAAmB,SAAChB,GAAD,8CAAmC,WAAMa,GAAN,SAAAC,EAAA,sEACxC9B,EAA4BgB,GADY,cAEtDiB,aAAeC,IAAYC,SAAWN,EAASF,EAAcX,IAFP,2CAAnC,uDAKnBoB,EAAmB,SAAC3B,GAAD,8CAAiC,WAAMoB,GAAN,eAAAC,EAAA,sEACtC9B,EAA4BS,GADU,QACvDJ,EADuD,QAEpD4B,aAAeC,IAAYC,SAAWN,GAtBrBH,EAsB4CrB,EAASC,KAAKmB,OAtBnB,CACjEL,KAAMrB,EAAsByB,gBAC5BF,QAAS,CAACI,kBAoBsFW,MAAM,+CACtGhC,EAAS4B,aAAeC,IAAYC,SAAWE,MAAMhC,EAASiC,UAHD,iCApBpC,IAACZ,IAoBmC,OAAjC,uDAMnBa,EAAwB,SAACC,GAAD,8CACjC,WAAOX,EAAUY,GAAjB,eAAAX,EAAA,sEAC2B9B,EAAiCwC,GAD5D,iBAEiBP,aAAeC,IAAYC,QAF5C,uBAGclC,EAAKwC,IAAWC,KAAKzC,GAHnC,SAIc4B,EAASD,EAAe3B,IAJtC,2CADiC,0D,6KEnGhC0C,E,iDCKQC,EACK,SAACC,EAAcC,EAAkBC,EAAcC,GAA/C,OAA6E9C,IACtFC,IAAuB,sBAAe2C,EAAf,iBAAgCD,EAAhC,iBAA6CE,IAAwB,OAAdC,EAAqB,GAArB,kBAAqCA,KACnH5C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCTtB2C,EACD,SAAChD,GAAD,OAAgBC,IACnBgD,KADmB,iBACYjD,IAC/BG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAHtB2C,EAKC,SAAChD,GAAD,OAAgBC,IACrBiD,OADqB,iBACYlD,IACjCG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,SFN9BqC,K,gBAAAA,E,sBAAAA,E,oCAAAA,E,8CAAAA,E,8BAAAA,E,4CAAAA,E,uCAAAA,M,KA6CL,IAAM7B,EAA0B,CAC5BsC,UAAW,GACXN,SAAU,GACVO,gBAAiB,EACjBC,YAAa,EACbC,WAAW,EACXC,aAAc,GACdC,OAAQ,CACJV,KAAM,GACNC,UAAW,OAINU,EAAe,WAA4D,IAA3DxC,EAA0D,uDAAlDJ,EAAcK,EAAoC,uCACnF,OAAQA,EAAOC,MACX,KAAKuB,EAAoBgB,OACrB,OAAO,2BACAzC,GADP,IAEIkC,UAAWlC,EAAMkC,UAAUQ,KAAI,SAACC,GAAD,OAAUA,EAAK5D,KAAOkB,EAAOG,QAAQrB,GAA3B,2BAC/B4D,GAD+B,IACzBC,UAAWD,EAAKC,WAC1BD,OAGd,KAAKlB,EAAoBoB,UACrB,OAAO,2BAAI7C,GAAX,IAAkBkC,UAAU,YAAKjC,EAAOG,QAAQ0C,SAEpD,KAAKrB,EAAoBsB,iBACrB,OAAO,2BAAI/C,GAAX,IAAkBoC,YAAanC,EAAOG,QAAQuB,OAElD,KAAKF,EAAoBuB,sBACrB,OAAO,2BAAIhD,GAAX,IAAkBmC,gBAAiBlC,EAAOG,QAAQ6C,QAEtD,KAAKxB,EAAoByB,cACrB,OAAO,2BAAIlD,GAAX,IAAkBqC,UAAWpC,EAAOG,QAAQf,SAEhD,KAAKoC,EAAoB0B,qBACrB,OAAO,2BACAnD,GADP,IAEIsC,aAAcrC,EAAOG,QAAQf,OAAf,sBACJW,EAAMsC,cADF,CACgBrC,EAAOG,QAAQrB,KACvCiB,EAAMsC,aAAac,QAAO,SAAAC,GAAC,OAAIA,IAAMpD,EAAOG,QAAQrB,QAGlE,KAAK0C,EAAoB6B,kBACrB,OAAO,2BACAtD,GADP,IAEIuC,OAAO,eAAKtC,EAAOG,WAG3B,QACI,OAAOJ,IAINuD,EAAS,SAACxE,GAAD,MAAiB,CACnCmB,KAAMuB,EAAoBgB,OAC1BrC,QAAS,CAACrB,QAGDyE,EAAW,SAACV,GAAD,MAAwB,CAC5C5C,KAAMuB,EAAoBoB,UAC1BzC,QAAS,CAAC0C,WAGDW,EAAiB,SAAC9B,GAAD,MAAmB,CAC7CzB,KAAMuB,EAAoBsB,iBAC1B3C,QAAS,CAACuB,UAGD+B,EAAqB,SAACT,GAAD,MAAoB,CAClD/C,KAAMuB,EAAoBuB,sBAC1B5C,QAAS,CAAC6C,WAGDU,EAAe,SAACtE,GAAD,MAAsB,CAC9Ca,KAAMuB,EAAoByB,cAC1B9C,QAAS,CAACf,YAGDuE,EAAqB,SAACvE,EAAiBN,GAAlB,MAAkC,CAChEmB,KAAMuB,EAAoB0B,qBAC1B/C,QAAS,CAACf,SAAQN,QAGT8E,EAAkB,SAAChC,EAAcC,GAAf,MAA8C,CACzE5B,KAAMuB,EAAoB6B,kBAC1BlD,QAAS,CAACyB,OAAMC,eAGPgC,EAAe,SAACnC,EAAcC,GAAf,IAAiCC,EAAjC,uDAAgD,GAAIC,EAApD,uDAAgF,KAAhF,8CAAoG,WAAMnB,GAAN,eAAAC,EAAA,sEAExHD,EAASgD,GAAa,IAFkG,SAGjGjC,EAAsBC,EAAMC,EAAUC,EAAMC,GAHqD,OAGlH3C,EAHkH,OAIxHwB,EAAS6C,EAASrE,EAAS4E,QAC3BpD,EAAS+C,EAAmBvE,EAAS6E,aACrCrD,EAAS8C,EAAe9B,IACxBhB,EAASkD,EAAgBhC,EAAMC,IAC/BnB,EAASgD,GAAa,IARkG,kDAUxHxC,MAAM,EAAD,IAVmH,0DAApG,uDAcf8C,EAAoB,SAACtC,EAAcC,EAAkBC,EAAcC,GAA/C,8CAAwF,WAAMnB,GAAN,SAAAC,EAAA,sDACrHD,EAAS8C,EAAe9B,IACxBhB,EAASmD,EAAanC,EAAMC,EAAUC,EAAMC,IAFyE,2CAAxF,uDAKpBoC,EAAa,SAACnF,EAAY6D,GAAb,8CAA8C,WAAMjC,GAAN,SAAAC,EAAA,yDACpED,EAASiD,GAAmB,EAAM7E,IAE7B6D,EAH+D,gCAI1Db,EAAiBhD,GAJyC,OAKhE4B,EAAS4C,EAAOxE,IAChB4B,EAASiD,GAAmB,EAAO7E,IAN6B,WAShE6D,EATgE,iCAU1Db,EAAmBhD,GAVuC,OAWhE4B,EAAS4C,EAAOxE,IAChB4B,EAASiD,GAAmB,EAAO7E,IAZ6B,4CAA9C,wD,+HG3JdoF,E,mCAAAA,K,6BAAAA,M,KAkBZ,IAAMvE,EAA4B,CAC9BwB,SAAU,IAGDgD,EAAiB,WAAgE,IAA/DpE,EAA8D,uDAAtDJ,EAAcK,EAAwC,uCACzF,OAAQA,EAAOC,MACX,KAAKiE,EAAsBE,aACvB,OAAO,2BACArE,GADP,IAEIoB,SAAS,GAAD,mBACDpB,EAAMoB,UADL,YAEDnB,EAAOG,QAAQgB,SACbsB,KAAI,SAAA4B,GAAO,kCAASA,GAAT,IAAkBC,UAAWC,mBACxCpB,QAAO,SAACkB,EAASG,EAAOC,GAAjB,OAA2BD,GAASC,EAAMC,OAAS,UAI3E,QACI,OAAO3E,IAIN4E,EAAc,SAACxD,GAAD,MAAkC,CACzDlB,KAAMiE,EAAsBE,aAC5BjE,QAAS,CAACgB,e,yJClCDyD,EAAsCvG,gBAAK,YAAwB,IAAtBwG,EAAqB,EAArBA,MAAUC,EAAW,2BACrDC,YAAS,2BAAID,GAAL,IAAY7E,KAAM,cAD2B,mBACpE+E,EADoE,KAC7DC,EAD6D,KAG3E,OACI,sBAAKC,UAAWC,IAAEC,kBAAlB,UACI,cAAC,IAAD,CAAkBC,QAAS,cAAC,IAAD,2BAAcL,GAAWF,IAAUD,MAAOA,IACpEI,EAAKK,SAAWL,EAAKM,OAAS,qBAAKL,UAAWC,IAAEK,aAAlB,SAAiCP,EAAKM,e,oBCfjFE,EAAOC,QAAU,CAAC,UAAY,2B,oBCA9BD,EAAOC,QAAU,CAAC,UAAY,8B,gCCD9B,+CAEa3G,EAFb,OAE6B4G,EAAMC,OAAO,CACtCC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CAAC,UAAW,2C,4CCFpBC,E,sHAAAA,K,+CAAAA,M,KAML,IAAMrG,EAAe,CACjBsG,eAAe,GAYNC,EAAoB,SAAC9G,GAAD,MAAsB,CACnDa,KAAM+F,EAAkBG,oBAAqBhG,QAAS,CAACf,Y,2BCfrDgH,EAAoBC,OAAeC,sCAAwCC,IAEpEC,EAAcC,YACvB,CACIC,QAAS5G,IACT6G,QAASxC,IACTtB,MAAON,IACPhB,KAAMqF,IACNC,IDHkB,WAAoE,IAAnE9G,EAAkE,uDAA1DJ,EAAcK,EAA4C,uCACzF,OAAQA,EAAOC,MACX,KAAK+F,EAAkBG,oBACnB,OAAO,2BAAIpG,GAAX,IAAkBkG,cAAejG,EAAOG,QAAQf,SACpD,QACI,OAAOW,MCEN+G,EAAQC,YAAYP,EAAaJ,EAAiBY,YAAgBC,O,2DCVlEC,EAAc7I,gBAAK,WAC5B,IAAM8I,EAAgC,CAClC,CAACC,KAAM,UAAWC,KAAMC,IAAKC,SAC7B,CAACH,KAAM,UAAWC,KAAMC,IAAKE,SAC7B,CAACJ,KAAM,QAASC,KAAMC,IAAKG,QAG/B,OACI,gCACI,qBAAKC,aAAW,cAAhB,SACI,cAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,QAAS,GAAvB,SACKV,EAAe1E,KAAI,SAAAqF,GAAI,OACpB,cAACC,EAAA,EAAD,CAAUC,gBAAc,EAAiBC,UAAWC,IAAMC,GAAIL,EAAKT,KACzDO,MAAO,CAACQ,eAAgB,OAAQ7J,MAAO,SADjD,SAEI,cAAC8J,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAcC,QAAST,EAAKV,UAHNU,EAAKV,kB,8DCpB9CoB,EAAe,WACxB,OACI,sBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OACnFC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAC3E/D,UAAU,0BAFf,UAGI,wBAAQgE,GAAG,KAAKC,GAAG,IAAIC,EAAE,MACzB,wBAAQF,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACzB,wBAAQF,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMC,GAAG,OAAOC,GAAG,QAAQC,GAAG,QAAQC,GAAG,UACzC,sBAAMH,GAAG,QAAQC,GAAG,OAAOC,GAAG,OAAOC,GAAG,c,8DCFvCC,EAAapL,gBAAK,WAC3B,IAAMkD,EAAOmI,aAAe,SAAA3J,GAAK,OAAIA,EAAMwB,QACrCb,EAAWiJ,cACXC,EAAgBC,uBAAY,kBAAMnJ,EAASoJ,iBAAW,CAACpJ,IAE7D,OACI,cAACqJ,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,KAAM7C,IAAK8C,KACXC,KAAK,QACLC,KAAK,QACL/L,MAAM,UACNmJ,aAAW,OACXpJ,GAAI,CAACiM,GAAI,GALrB,SAMI,cAAC,EAAD,MAGJ,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKxC,UAAU,MAAM3J,GAAI,CAACoM,SAAU,GAAxD,4BAICnJ,EAAKoJ,OACA,eAACC,EAAA,EAAD,CAAKtM,GAAI,CAACuM,QAAS,OAAQC,WAAY,SAAUC,IAAK,GAAtD,UACE,+BAAOxJ,EAAKyJ,QACZ,cAACC,EAAA,EAAD,CAAQC,IAAK,GACLC,IAAK,sJACb,cAACC,EAAA,EAAD,CAAQC,QAASzB,EAAea,QAAS,YAAanM,GAAI,CAACgN,GAAI,GAA/D,uBAEF,cAAC,IAAD,CAAMnD,GAAIb,IAAKiE,MAAf,gC,kBClCTC,EAAgB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACrBC,EAAUC,YAAiB,CAC7BC,mBAAmB,EACnBC,UAAW,MAaf,OACI,cAACC,EAAA,EAAD,CAAMC,GAAIL,EAAV,SACI,cAACd,EAAA,EAAD,CAAKS,QAZO,SAACW,GACjB,IAAMC,GAAWD,EAAME,OAA0BC,eAAiBC,UAAUC,cAAc,uBACtFJ,GACAA,EAAOK,eAAe,CAClBC,SAAU,SACVC,MAAO,YAQNC,KAAK,eACLnO,GAAI,CAAC0L,SAAU,QAAS0C,OAAQ,GAAIC,MAAO,IAFhD,SAGKlB,OCXJmB,EAAU,WACnB,IAAMlM,EAAWiJ,cACX1D,EAAgByD,aAAe,SAAA3J,GAAK,OAAIA,EAAM8G,IAAIZ,iBAMxD,OAJA4G,qBAAU,WACNnM,ENQsB,uCAAiB,WAAMA,GAAN,SAAAC,EAAA,6DAC3CD,EAASwF,GAAkB,IADgB,SAErCxF,EAASoM,eAF4B,OAG3CpM,EAASwF,GAAkB,IAHgB,2CAAjB,yDMPvB,CAACxF,IAECuF,EAGD,qCACI,cAAC8G,EAAA,EAAD,IACA,cAACnC,EAAA,EAAD,CAAK9L,GAAG,uBACR,cAAC2K,EAAD,IAEA,cAACuD,EAAA,EAAD,CAAWC,SAAS,KAAKrF,MAAO,CAACsF,UAAW,GAAIC,aAAc,IAA9D,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMtF,MAAI,EAACyF,GAAI,EAAf,SACI,cAACrG,EAAD,MAGJ,cAACkG,EAAA,EAAD,CAAMtF,MAAI,EAACyF,GAAI,GAAf,SACI,cAAC,WAAD,CAAUC,SAAU,cAACpP,EAAA,EAAD,IAApB,SACI,eAAC,IAAD,WACKqP,IAAahL,KAAI,SAAA2G,GAAC,OAAI,cAAC,IAAD,CAAoBsE,KAAMtE,EAAEsE,KACrBzF,UAAWmB,EAAEnB,UAAW0F,MAAOvE,EAAEuE,OAD5BvE,EAAEsE,SAErC,cAAC,IAAD,CAAUE,KAAMtG,IAAKuG,MAAO1F,GAAIb,IAAKwG,oBAOzD,cAAC,EAAD,UACI,cAACC,EAAA,EAAD,CAAKxP,MAAM,UAAUmJ,aAAW,qBAAhC,qBA3Be,cAACtJ,EAAA,EAAD,K,SCblB4P,GANYC,YAAY,CACjCC,QAAS,CACLC,KAAM,UAIcF,YAAY,CACpCC,QAAS,CACLC,KAAM,QACN5F,QAAS,CACL6F,KAAM,e,UCFlBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUzH,MAAOA,EAAjB,SACI,cAAC0H,GAAA,EAAD,CAAe/P,MAAOuP,EAAtB,SACI,cAAC,EAAD,YAIK5B,SAASqC,eAAe,SAGjDpI,OAAOS,MAAQA,G,wGCdHQ,E,kGCECoH,EAAgBrQ,gBAAK,WAC9B,IAAMqC,EAAWiJ,cACXgF,EAAajF,aAAe,SAAA3J,GAAK,OAAIA,EAAMwB,KAAKoN,cAEhDC,EAAW/E,uBAAY,SAACgF,EACAC,EACAC,EACAC,EACAC,GAC1BvO,EAASsK,YAAM6D,EAAOC,EAAUC,EAAYC,EAAWC,MACxD,CAACvO,IAEJ,OACI,cAAC,IAAD,CACIwO,cAAe,CACXL,MAAO,GACPC,SAAU,GACVC,YAAY,EACZE,QAAS,IAGbE,iBAAkBC,IAAW,CACzBP,MAAOO,MACFP,MAAM,yBACNQ,SAAS,YACdP,SAAUM,MACLE,IAAI,GAAI,iCACRD,SAAS,cAKlBT,SAAU,SAACW,EAAD,GAAoC,EAA1BC,UAA2B,IAAhBR,EAAe,EAAfA,UAE3BJ,EAASW,EAAOV,MAAOU,EAAOT,SAAUS,EAAOR,WAAYC,EAAWO,EAAON,UArBrF,SAwBK,gBAAE7P,EAAF,EAAEA,OAAF,OAAc,eAAC,IAAD,CAAM8F,UAAW,sBAAjB,UACX,cAACuK,EAAA,EAAD,CAAW5K,MAAM,QAAQuC,KAAK,QAAQnH,KAAM,UAE5C,cAACwP,EAAA,EAAD,CAAW5K,MAAM,WAAWuC,KAAK,WAAWnH,KAAK,aAEjD,cAAC2E,EAAA,EAAD,CAAcwC,KAAK,aAAavC,MAAO,gBAEvC,sBAAM+C,MAAO,CAAC8H,SAAU,GAAIC,WAAY,QAAxC,SAAkDvQ,IAEjDuP,GACb,gCACC,qBAAKxD,IAAKwD,EAAYzD,IAAKyD,IAC3B,cAACc,EAAA,EAAD,CAAW5K,MAAM,UAAUuC,KAAK,UAAUnH,KAAK,YAGpC,cAACmL,EAAA,EAAD,CAAQnL,KAAK,SAASwK,QAAS,YAA/B,6B,QCvDHmF,EAAYvR,gBAAK,WAG1B,OAFeqL,aAAe,SAAA3J,GAAK,OAAIA,EAAMwB,KAAKoJ,UAE/B,cAAC,IAAD,CAAUxC,GAAIb,EAAKC,UAGlC,sBAAKrC,UAAWC,IAAEkI,UAAlB,UACI,4CACA,cAACqB,EAAD,IACA,8BACI,4DAA8B,mBAAGvE,KAAM,wCACN0F,IAAK,aACL3D,OAAQ,SAFX,uBAIlC,gCACI,2DACA,2DACA,mD,kBCrBH4D,EAAezR,gBAAK,WAC7B,OACI,sBAAK6G,UAAWC,IAAEkI,UAAlB,UACI,iDACA,qBACIlC,IAAI,qGACJD,IAAI,yBHLd6E,EAAUC,gBAAK,kBAAM,iCACrBC,EAAUD,gBAAK,kBAAM,iCACrBE,EAAQF,gBAAK,kBAAM,wD,SAEb1I,K,SAAAA,E,SAAAA,E,mBAAAA,E,oCAAAA,E,mBAAAA,E,eAAAA,E,eAAAA,E,cAAAA,M,KAiBL,IAAMmG,EAAyB,CAClC,CAACC,KAAMpG,EAAK8C,KAAMnC,UAAW8H,EAASpC,OAAO,GAC7C,CAACD,KAAMpG,EAAK6I,gBAAiBlI,UAAW8H,GACxC,CAACrC,KAAMpG,EAAKE,QAASS,UAAWgI,GAChC,CAACvC,KAAMpG,EAAKG,MAAOQ,UAAWiI,GAC9B,CAACxC,KAAMpG,EAAKiE,MAAOtD,UAAW2H,GAC9B,CAAClC,KAAMpG,EAAKwG,MAAO7F,UAAW6H,K,gCIzB3B,IAAK/O,EAKAqP,EALZ,oE,SAAYrP,O,qBAAAA,I,kBAAAA,M,cAKAqP,O,uBAAAA,M,sCCXZ,sCAGa1G,EAHb,MAG+D2G,G,4KCE1DC,E,yCCHQC,EACM,kBAAMxR,IAChBC,IAAqB,4BACrBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKqR,QCQ3BC,EACE,kBAAM1R,IACZC,IAA+C,WAC/CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAHtBsR,EAKF,SAAC5B,EAAeC,EAAkBC,EAAqBE,GAAvD,OAA2ElQ,IAC7EgD,KAAgF,aAAc,CAC3F8M,QACAC,WACAC,aACAE,YAEHhQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAZtBsR,EAcD,kBAAM1R,IACTiD,OAAuB,cACvB/C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,kBFxB9BmR,K,mCAAAA,E,qBAAAA,E,gCAAAA,M,KAmBL,IAAM3Q,EAAyB,CAC3Bb,GAAI,KACJkM,MAAO,KACP6D,MAAO,KACPlE,QAAQ,EACRgE,WAAY,IAGH/H,EAAc,WAA0D,IAAzD7G,EAAwD,uDAAhDJ,EAAcK,EAAkC,uCAChF,OAAQA,EAAOC,MACX,KAAKqQ,EAAmBI,cACpB,OAAO,uCAAI3Q,GAAUC,EAAOG,SAA5B,IAAqCwK,QAAQ,IAEjD,KAAK2F,EAAmBK,OACpB,OAAO,2BAAI5Q,GAAX,IAAkB4K,QAAQ,IAE9B,KAAK2F,EAAmBM,YACpB,OAAO,2BAAI7Q,GAAX,IAAkB4O,WAAY3O,EAAOG,QAAQ8O,UAEjD,QACI,OAAOlP,IAIN8Q,EAAkB,SAAC/R,EAAYkM,EAAe6D,GAA5B,MAA+C,CAC1E5O,KAAMqQ,EAAmBI,cACzBvQ,QAAS,CAACrB,KAAIkM,QAAO6D,WAYZ/B,EAAY,yDAAiB,WAAMpM,GAAN,uBAAAC,EAAA,sEACf8P,IADe,OAChCvR,EADgC,SAEXA,EAASC,KAA7BL,EAF+B,EAE/BA,GAAIkM,EAF2B,EAE3BA,MAAO6D,EAFoB,EAEpBA,MAClB3P,EAAS4B,aAAeC,IAAYC,SAAWN,EAASmQ,EAAgB/R,EAAIkM,EAAO6D,IAH7C,2CAAjB,uDAMZ7D,EAAQ,SAAC6D,EAAeC,EAAkBC,EAAqBC,EAAuCC,GAA9F,8CAA6H,WAAMvO,GAAN,eAAAC,EAAA,sEACvH8P,EAAc5B,EAAOC,EAAUC,EAAYE,GAD4E,WACxI/P,EADwI,QAEjI4B,aAAeC,IAAYC,QAFsG,gCAGpIN,EAASoM,KAH2H,iCAInI5N,EAAS4B,aAAesP,IAAqBU,QAJsF,wBAK1I9B,EAAU9P,EAASiC,UALuH,UAMpIT,EAASqQ,KAN2H,gCAQ1I/B,EAAU9P,EAASiC,UARuH,4CAA7H,uDAYR2I,EAAS,yDAAiB,WAAMpJ,GAAN,SAAAC,EAAA,+EAEzB8P,IAFyB,OAG/B/P,EA9BmC,CACvCT,KAAMqQ,EAAmBK,SA0BU,+CAK/BzP,MAAM,EAAD,IAL0B,wDAAjB,uDAST6P,EAAgB,yDAAiB,WAAMrQ,GAAN,eAAAC,EAAA,sEACnB4P,IADmB,OACpCrR,EADoC,OAE1CwB,GAlCuBuO,EAkCH/P,EAlCwB,CAC5Ce,KAAMqQ,EAAmBM,YACzBzQ,QAAS,CAAC8O,cA8BgC,iCAhCpB,IAACA,IAgCmB,OAAjB,wD,mBGxF7BxJ,EAAOC,QAAU,CAAC,UAAY,wBAAwB,kBAAoB,gCAAgC,aAAe,2BAA2B,YAAc,4B,sICWrJ+J,EAAgCpR,gBAAK,YAAiB,IAAZyG,EAAW,sBACxCC,YAASD,GAD+B,mBACvDE,EADuD,KAChDC,EADgD,KAG9D,OACI,sBAAKC,UAAWC,IAAE6L,UAAlB,UACI,cAAC,IAAD,uCAAehM,GAAWF,GAA1B,IAAiC2F,QAAQ,WAAWlF,QAASN,EAAKM,SACjEN,EAAKK,SAAWL,EAAKM,OAAS,qBAAKL,UAAWC,IAAEK,aAAlB,SAAiCP,EAAKM,gB","file":"static/js/main.47a82d0a.chunk.js","sourcesContent":["import React, {FC, memo} from 'react'\r\nimport {Backdrop, CircularProgress} from '@mui/material'\r\n\r\nexport const Loader: FC = memo(() => {\r\n    return (\r\n        <Backdrop sx={{color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1}} open>\r\n            <CircularProgress color='inherit'/>\r\n        </Backdrop>\r\n    )\r\n})","import {ThunkType} from '../store'\r\nimport {profileAPI} from '../../api/profile-api'\r\nimport {ResultCodes} from '../../types/api-types'\r\n\r\nenum PROFILE_ACTIONS_TYPES {\r\n    SET_USER_PROFILE = 'SET_USER_PROFILE',\r\n    SET_USER_STATUS = 'SET_USER_STATUS',\r\n    SET_USER_AVATAR = 'SET_USER_AVATAR',\r\n}\r\n\r\nexport type ProfileActions =\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setUserStatus>\r\n    | ReturnType<typeof setUserAvatar>\r\n\r\nexport type ProfileType = {\r\n    userProfile: UserProfileType | null\r\n    userStatus: string\r\n}\r\n\r\nexport type UserProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    aboutMe: string\r\n    contacts: UserProfileContactsType\r\n    photos: UserProfilePhotosType\r\n}\r\n\r\nexport type UserProfilePhotosType = {\r\n    large: string | null\r\n    small: string | null\r\n}\r\n\r\nexport type UserProfileContactsType = {\r\n    github: string,\r\n    vk: string,\r\n    facebook: string,\r\n    instagram: string,\r\n    twitter: string,\r\n    website: string,\r\n    youtube: string,\r\n    mainLink: string\r\n}\r\n\r\nconst initialState: ProfileType = {\r\n    userProfile: null,\r\n    userStatus: '',\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ProfileActions): ProfileType => {\r\n    switch (action.type) {\r\n        case PROFILE_ACTIONS_TYPES.SET_USER_PROFILE:\r\n            return {...state, userProfile: action.payload.userProfile,}\r\n\r\n        case PROFILE_ACTIONS_TYPES.SET_USER_STATUS:\r\n            return {...state, userStatus: action.payload.userStatus}\r\n\r\n        case PROFILE_ACTIONS_TYPES.SET_USER_AVATAR:\r\n            return {...state, userProfile: {...state.userProfile, photos: action.payload.userAvatar}} as ProfileType\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (userProfile: UserProfileType) => ({\r\n    type: PROFILE_ACTIONS_TYPES.SET_USER_PROFILE,\r\n    payload: {userProfile}\r\n} as const)\r\n\r\nexport const setUserStatus = (userStatus: string) => ({\r\n    type: PROFILE_ACTIONS_TYPES.SET_USER_STATUS,\r\n    payload: {userStatus}\r\n} as const)\r\n\r\nexport const setUserAvatar = (userAvatar: UserProfilePhotosType) => ({\r\n    type: PROFILE_ACTIONS_TYPES.SET_USER_AVATAR,\r\n    payload: {userAvatar}\r\n} as const)\r\n\r\nexport const getUserProfile = (id: number | null): ThunkType => async dispatch => {\r\n    const response = await profileAPI.getUserProfile(id)\r\n    dispatch(setUserProfile(response))\r\n}\r\n\r\nexport const getUserStatus = (id: number | null): ThunkType => async dispatch => {\r\n    const response = await profileAPI.getUserStatus(id)\r\n    dispatch(setUserStatus(response))\r\n}\r\n\r\nexport const updateUserStatus = (userStatus: string): ThunkType => async dispatch => {\r\n    const response = await profileAPI.updateUserStatus(userStatus)\r\n    response.resultCode === ResultCodes.Success && dispatch(setUserStatus(userStatus))\r\n}\r\n\r\nexport const updateUserAvatar = (avatarFile: File): ThunkType => async dispatch => {\r\n    const response = await profileAPI.updateUserAvatar(avatarFile)\r\n    response.resultCode === ResultCodes.Success && dispatch(setUserAvatar(response.data.photos)) && alert('Успешно!')\r\n    response.resultCode !== ResultCodes.Success && alert(response.messages)\r\n}\r\n\r\nexport const updateUserDescription = (userDescription: UserProfileType): ThunkType =>\r\n    async (dispatch, getState) => {\r\n        const response = await profileAPI.updateUserDescription(userDescription)\r\n        if (response.resultCode === ResultCodes.Success) {\r\n            const id = getState().auth.id\r\n            await dispatch(getUserProfile(id))\r\n        }\r\n    }","import {axiosInstance} from './axios-instance'\r\nimport {ServerResponse} from '../types/api-types'\r\nimport {UserProfilePhotosType, UserProfileType} from '../redux/reducers/profile-reducer'\r\n\r\nexport const profileAPI = {\r\n    getUserProfile: (id: number | null) => axiosInstance\r\n        .get<UserProfileType>(`profile/${id}`)\r\n        .then(response => response.data),\r\n\r\n    getUserStatus: (id: number | null) => axiosInstance\r\n        .get<string>(`profile/status/${id}`)\r\n        .then(response => response.data),\r\n\r\n    updateUserStatus: (status: string) => axiosInstance\r\n        .put<ServerResponse>(`profile/status`, {status})\r\n        .then(response => response.data),\r\n\r\n    updateUserAvatar: (avatarFile: File) => {\r\n        const formData = new FormData()\r\n        formData.append('image', avatarFile)\r\n\r\n        return axiosInstance\r\n            .put<ServerResponse<{ photos: UserProfilePhotosType }>>(`profile/photo`, formData)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    updateUserDescription: (description: UserProfileType) => axiosInstance\r\n        .put<ServerResponse>(`profile`, description)\r\n        .then(response => response.data)\r\n}","import {ThunkType} from '../store'\r\nimport {usersAPI} from '../../api/users-api'\r\nimport {followAPI} from '../../api/follow-api'\r\n\r\nenum USERS_ACTIONS_TYPES {\r\n    FOLLOW = 'FOLLOW',\r\n    SET_USERS = 'SET_USERS',\r\n    SET_CURRENT_PAGE = 'SET_CURRENT_PAGE',\r\n    SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT',\r\n    TOGGLE_LOADER = 'TOGGLE_LOADER',\r\n    TOGGLE_FOLLOW_LOADER = 'TOGGLE_FOLLOW_LOADER',\r\n    SET_SEARCH_PARAMS = 'SET_SEARCH_PARAMS'\r\n}\r\n\r\nexport type UsersActions =\r\n    | ReturnType<typeof follow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleLoader>\r\n    | ReturnType<typeof toggleFollowLoader>\r\n    | ReturnType<typeof setSearchParams>\r\n\r\nexport type UsersType = {\r\n    usersData: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isLoading: boolean\r\n    followLoader: number[]\r\n    search: SearchParamsType\r\n}\r\n\r\nexport type SearchParamsType = {\r\n    term: string\r\n    followers: boolean | null\r\n}\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nconst initialState: UsersType = {\r\n    usersData: [],\r\n    pageSize: 25,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    followLoader: [],\r\n    search: {\r\n        term: '',\r\n        followers: null\r\n    }\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action: UsersActions): UsersType => {\r\n    switch (action.type) {\r\n        case USERS_ACTIONS_TYPES.FOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map((user) => user.id === action.payload.id\r\n                    ? {...user, followed: !user.followed}\r\n                    : user),\r\n            }\r\n\r\n        case USERS_ACTIONS_TYPES.SET_USERS:\r\n            return {...state, usersData: [...action.payload.users]}\r\n\r\n        case USERS_ACTIONS_TYPES.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.payload.page}\r\n\r\n        case USERS_ACTIONS_TYPES.SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.payload.total}\r\n\r\n        case USERS_ACTIONS_TYPES.TOGGLE_LOADER:\r\n            return {...state, isLoading: action.payload.status}\r\n\r\n        case USERS_ACTIONS_TYPES.TOGGLE_FOLLOW_LOADER:\r\n            return {\r\n                ...state,\r\n                followLoader: action.payload.status\r\n                    ? [...state.followLoader, action.payload.id]\r\n                    : state.followLoader.filter(u => u !== action.payload.id)\r\n            }\r\n\r\n        case USERS_ACTIONS_TYPES.SET_SEARCH_PARAMS:\r\n            return {\r\n                ...state,\r\n                search: {...action.payload}\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const follow = (id: number) => ({\r\n    type: USERS_ACTIONS_TYPES.FOLLOW,\r\n    payload: {id}\r\n} as const)\r\n\r\nexport const setUsers = (users: UserType[]) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_USERS,\r\n    payload: {users}\r\n} as const)\r\n\r\nexport const setCurrentPage = (page: number) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_CURRENT_PAGE,\r\n    payload: {page}\r\n} as const)\r\n\r\nexport const setTotalUsersCount = (total: number) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_TOTAL_USERS_COUNT,\r\n    payload: {total}\r\n} as const)\r\n\r\nexport const toggleLoader = (status: boolean) => ({\r\n    type: USERS_ACTIONS_TYPES.TOGGLE_LOADER,\r\n    payload: {status}\r\n} as const)\r\n\r\nexport const toggleFollowLoader = (status: boolean, id: number) => ({\r\n    type: USERS_ACTIONS_TYPES.TOGGLE_FOLLOW_LOADER,\r\n    payload: {status, id}\r\n} as const)\r\n\r\nexport const setSearchParams = (term: string, followers: boolean | null) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_SEARCH_PARAMS,\r\n    payload: {term, followers}\r\n} as const)\r\n\r\nexport const requestUsers = (page: number, pageSize: number, term: string = '', followers: boolean | null = null): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(toggleLoader(true))\r\n        const response = await usersAPI.requestUsers(page, pageSize, term, followers)\r\n        dispatch(setUsers(response.items))\r\n        dispatch(setTotalUsersCount(response.totalCount))\r\n        dispatch(setCurrentPage(page))\r\n        dispatch(setSearchParams(term, followers))\r\n        dispatch(toggleLoader(false))\r\n    } catch (e) {\r\n        alert(e)\r\n    }\r\n}\r\n\r\nexport const changeCurrentPage = (page: number, pageSize: number, term: string, followers: boolean | null): ThunkType => async dispatch => {\r\n    dispatch(setCurrentPage(page))\r\n    dispatch(requestUsers(page, pageSize, term, followers))\r\n}\r\n\r\nexport const followUser = (id: number, followed: boolean): ThunkType => async dispatch => {\r\n    dispatch(toggleFollowLoader(true, id))\r\n\r\n    if (!followed) {\r\n        await followAPI.follow(id)\r\n        dispatch(follow(id))\r\n        dispatch(toggleFollowLoader(false, id))\r\n    }\r\n\r\n    if (followed) {\r\n        await followAPI.unfollow(id)\r\n        dispatch(follow(id))\r\n        dispatch(toggleFollowLoader(false, id))\r\n    }\r\n}","import {axiosInstance} from './axios-instance'\r\nimport {UserType} from '../redux/reducers/users-reducer'\r\n\r\ntype UsersResponseType = {\r\n    totalCount: number\r\n    error: string\r\n    items: UserType[]\r\n}\r\n\r\nexport const usersAPI = {\r\n    requestUsers: (page: number, pageSize: number, term: string, followers: boolean | null) => axiosInstance\r\n        .get<UsersResponseType>(`users?count=${pageSize}&page=${page}&term=${term}` + (followers === null ? '' : `&friend=${followers}`))\r\n        .then(response => response.data)\r\n}","import {axiosInstance} from './axios-instance'\r\nimport {ServerResponse} from '../types/api-types'\r\n\r\nexport const followAPI = {\r\n    follow: (id: number) => axiosInstance\r\n        .post<ServerResponse>(`follow/${id}`)\r\n        .then(response => response.data),\r\n\r\n    unfollow: (id: number) => axiosInstance\r\n        .delete<ServerResponse>(`follow/${id}`)\r\n        .then(response => response.data)\r\n}","import {v1} from 'uuid'\r\n\r\nexport enum DIALOGS_ACTIONS_TYPES {\r\n    SET_MESSAGES = 'SET_MESSAGES',\r\n}\r\n\r\nexport type DialogsActions = ReturnType<typeof setMessages>\r\n\r\nexport type DialogsType = {\r\n    messages: ChatMessageType[]\r\n}\r\n\r\nexport type ChatMessageType = {\r\n    message: string,\r\n    photo: string,\r\n    userId: number,\r\n    userName: string\r\n    messageID: string\r\n}\r\n\r\nconst initialState: DialogsType = {\r\n    messages: []\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action: DialogsActions): DialogsType => {\r\n    switch (action.type) {\r\n        case DIALOGS_ACTIONS_TYPES.SET_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    ...action.payload.messages\r\n                        .map(message => ({...message, messageID: v1()}))\r\n                        .filter((message, index, array) => index >= array.length - 25)\r\n                ]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setMessages = (messages: ChatMessageType[]) => ({\r\n    type: DIALOGS_ACTIONS_TYPES.SET_MESSAGES,\r\n    payload: {messages}\r\n} as const)","import React, {FC, memo} from 'react'\r\nimport {useField} from 'formik'\r\nimport s from '../Form.module.css'\r\nimport {Checkbox, FormControlLabel} from '@mui/material'\r\n\r\ntype FormCheckboxProps = {\r\n    name: string\r\n    label?: string\r\n}\r\n\r\nexport const FormCheckbox: FC<FormCheckboxProps> = memo(({label, ...props}) => {\r\n    const [field, meta] = useField({...props, type: 'checkbox'})\r\n\r\n    return (\r\n        <div className={s.formFieldCheckbox}>\r\n            <FormControlLabel control={<Checkbox {...field} {...props}/>} label={label}/>\r\n            {meta.touched && meta.error && <div className={s.errorMessage}>{meta.error}</div>}\r\n        </div>\r\n    )\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__yHLKI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error404_container__2V9wI\"};","import axios from 'axios'\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '6f228861-1f0c-43fb-a420-fcf28121de49'},\r\n})","import {ThunkType} from '../store'\r\nimport {checkAuth} from './auth-reducer'\r\n\r\nenum APP_ACTIONS_TYPES {\r\n    SET_APP_INITIALIZED = 'APP/SET_APP_INITIALIZED'\r\n}\r\n\r\nexport type AppActions = ReturnType<typeof setAppInitialized>\r\n\r\nconst initialState = {\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: AppActions): typeof initialState => {\r\n    switch (action.type) {\r\n        case APP_ACTIONS_TYPES.SET_APP_INITIALIZED:\r\n            return {...state, isInitialized: action.payload.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppInitialized = (status: boolean) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_INITIALIZED, payload: {status}\r\n} as const)\r\n\r\nexport const initialization = (): ThunkType => async dispatch => {\r\n    dispatch(setAppInitialized(false))\r\n    await dispatch(checkAuth())\r\n    dispatch(setAppInitialized(true))\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport thunk, {ThunkAction} from 'redux-thunk'\r\nimport {appReducer} from './reducers/app-reducer'\r\nimport {profileReducer} from './reducers/profile-reducer'\r\nimport {dialogsReducer} from './reducers/dialogs-reducer'\r\nimport {usersReducer} from './reducers/users-reducer'\r\nimport {authReducer} from './reducers/auth-reducer'\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        profile: profileReducer,\r\n        dialogs: dialogsReducer,\r\n        users: usersReducer,\r\n        auth: authReducer,\r\n        app: appReducer\r\n    }\r\n)\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type ThunkType<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, any>","import React, {FC, memo} from 'react'\r\nimport {PATH} from '../../routes/routes'\r\nimport {List, ListItem, ListItemButton, ListItemText} from '@mui/material'\r\nimport {Link} from 'react-router-dom'\r\n\r\ntype SidebarType = {\r\n    name: string\r\n    link: string\r\n}\r\n\r\nexport const Sidebar: FC = memo(() => {\r\n    const dataForSidebar: SidebarType[] = [\r\n        {name: 'Profile', link: PATH.PROFILE},\r\n        {name: 'Dialogs', link: PATH.DIALOGS},\r\n        {name: 'Users', link: PATH.USERS}\r\n    ]\r\n\r\n    return (\r\n        <aside>\r\n            <nav aria-label='mainSidebar'>\r\n                <List style={{padding: 0}}>\r\n                    {dataForSidebar.map(item =>\r\n                        <ListItem disablePadding key={item.name} component={Link} to={item.link}\r\n                                  style={{textDecoration: 'none', color: 'unset'}}>\r\n                            <ListItemButton>\r\n                                <ListItemText primary={item.name}/>\r\n                            </ListItemButton>\r\n                        </ListItem>)}\r\n                </List>\r\n            </nav>\r\n        </aside>\r\n    )\r\n})","import React, {FC} from 'react'\r\n\r\nexport const LogoIcon: FC = () => {\r\n    return (\r\n        <svg xmlns='http://www.w3.org/2000/svg' width='32' height='32' viewBox='0 0 24 24' fill='none'\r\n             stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round'\r\n             className='feather feather-share-2'>\r\n            <circle cx='18' cy='5' r='3'/>\r\n            <circle cx='6' cy='12' r='3'/>\r\n            <circle cx='18' cy='19' r='3'/>\r\n            <line x1='8.59' y1='13.51' x2='15.42' y2='17.49'/>\r\n            <line x1='15.41' y1='6.51' x2='8.59' y2='10.49'/>\r\n        </svg>\r\n    )\r\n}","import React, {FC, memo, useCallback} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {LogoIcon} from '../Icons/LogoIcon'\r\nimport {AppBar, Avatar, Box, Button, IconButton, Toolbar, Typography} from '@mui/material'\r\nimport {PATH} from '../../routes/routes'\r\nimport {logout} from '../../redux/reducers/auth-reducer'\r\nimport {useAppSelector} from '../../hooks/hooks'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nexport const Header: FC = memo(() => {\r\n    const auth = useAppSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = useCallback(() => dispatch(logout()), [dispatch])\r\n\r\n    return (\r\n        <AppBar position='sticky'>\r\n            <Toolbar>\r\n                <IconButton href={PATH.ROOT}\r\n                            size='large'\r\n                            edge='start'\r\n                            color='inherit'\r\n                            aria-label='menu'\r\n                            sx={{mr: 2}}>\r\n                    <LogoIcon/>\r\n                </IconButton>\r\n\r\n                <Typography variant='h6' component='div' sx={{flexGrow: 1}}>\r\n                    Social Network\r\n                </Typography>\r\n\r\n                {auth.isAuth\r\n                    ? <Box sx={{display: 'flex', alignItems: 'center', gap: 2}}>\r\n                        <span>{auth.login}</span>\r\n                        <Avatar alt={''}\r\n                                src={'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album'}/>\r\n                        <Button onClick={logoutHandler} variant={'contained'} sx={{ml: 2}}>Logout</Button>\r\n                    </Box>\r\n                    : <Link to={PATH.LOGIN}>Login Page</Link>}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n})","import React, {FC} from 'react'\r\nimport {Box, useScrollTrigger, Zoom} from '@mui/material'\r\n\r\nexport const ScrollTop: FC = ({children}) => {\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    })\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector('#back-to-top-anchor')\r\n        if (anchor) {\r\n            anchor.scrollIntoView({\r\n                behavior: 'smooth',\r\n                block: 'center',\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <Box onClick={handleClick}\r\n                 role='presentation'\r\n                 sx={{position: 'fixed', bottom: 16, right: 16}}>\r\n                {children}\r\n            </Box>\r\n        </Zoom>\r\n    )\r\n}","import React, {FC, Suspense, useEffect} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport '../index.css'\r\nimport {Sidebar} from '../components/Sidebar/Sidebar'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Loader} from '../components/UI/Loader/Loader'\r\nimport {Box, Container, CssBaseline, Fab, Grid} from '@mui/material'\r\nimport {Header} from '../components/Header/Header'\r\nimport {ScrollTop} from '../components/UI/ScrollTop/ScrollTop'\r\nimport {initialization} from '../redux/reducers/app-reducer'\r\nimport {PATH, publicRoutes} from '../routes/routes'\r\nimport {useAppSelector} from '../hooks/hooks'\r\n\r\nexport const App: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useAppSelector(state => state.app.isInitialized)\r\n\r\n    useEffect(() => {\r\n        dispatch(initialization())\r\n    }, [dispatch])\r\n\r\n    if (!isInitialized) return <Loader/>\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Box id='back-to-top-anchor'/>\r\n            <Header/>\r\n\r\n            <Container maxWidth='lg' style={{marginTop: 24, marginBottom: 24}}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={2}>\r\n                        <Sidebar/>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10}>\r\n                        <Suspense fallback={<Loader/>}>\r\n                            <Switch>\r\n                                {publicRoutes.map(r => <Route key={r.path} path={r.path}\r\n                                                              component={r.component} exact={r.exact}/>)}\r\n                                <Redirect from={PATH.EMPTY} to={PATH.ERROR}/>\r\n                            </Switch>\r\n                        </Suspense>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n\r\n            <ScrollTop>\r\n                <Fab color='primary' aria-label='scroll back to top'>Up</Fab>\r\n            </ScrollTop>\r\n        </>\r\n    )\r\n}","import {createTheme} from '@mui/material'\r\n\r\nexport const darkTheme = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n    },\r\n})\r\n\r\nexport const defaultTheme = createTheme({\r\n    palette: {\r\n        mode: 'light',\r\n        primary: {\r\n            main: '#363636'\r\n        }\r\n    },\r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {BrowserRouter, HashRouter} from 'react-router-dom'\r\nimport './index.css'\r\nimport {store} from './redux/store'\r\nimport {App} from './app/App'\r\nimport {Provider} from 'react-redux'\r\nimport {defaultTheme} from './components/UI/MUI/theme'\r\nimport {ThemeProvider} from '@mui/material'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <ThemeProvider theme={defaultTheme}>\r\n                    <App/>\r\n                </ThemeProvider>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>, document.getElementById('root'))\r\n\r\n// @ts-ignore\r\nwindow.store = store","import {FC, lazy} from 'react'\r\nimport {Login} from '../pages/Login/Login'\r\nimport {Error404} from '../pages/ErrorPage/Error404'\r\n\r\nconst Profile = lazy(() => import('../pages/Profile/Profile'))\r\nconst Dialogs = lazy(() => import('../pages/Dialogs/Dialogs'))\r\nconst Users = lazy(() => import('../pages/Users/Users'))\r\n\r\nexport enum PATH {\r\n    ROOT = '/',\r\n    EMPTY = '',\r\n    PROFILE = '/profile',\r\n    PROFILE_WITH_ID = '/profile/:userId?',\r\n    DIALOGS = '/dialogs',\r\n    USERS = '/users',\r\n    LOGIN = '/login',\r\n    ERROR = '/404'\r\n}\r\n\r\ntype Routes = {\r\n    path: string,\r\n    component: FC\r\n    exact?: boolean\r\n}\r\n\r\nexport const publicRoutes: Routes[] = [\r\n    {path: PATH.ROOT, component: Profile, exact: true},\r\n    {path: PATH.PROFILE_WITH_ID, component: Profile},\r\n    {path: PATH.DIALOGS, component: Dialogs},\r\n    {path: PATH.USERS, component: Users},\r\n    {path: PATH.LOGIN, component: Login},\r\n    {path: PATH.ERROR, component: Error404}\r\n]","import React, {FC, memo, useCallback} from 'react'\r\nimport {Form, Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport {FormInput} from '../../../components/UI/Form/FormInput/FormInput'\r\nimport {FormCheckbox} from '../../../components/UI/Form/FormCheckbox/FormCheckbox'\r\nimport {Button} from '@mui/material'\r\nimport {login} from '../../../redux/reducers/auth-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useAppSelector} from '../../../hooks/hooks'\r\n\r\nexport const LoginForm: FC = memo(() => {\r\n    const dispatch = useDispatch()\r\n    const captchaURL = useAppSelector(state => state.auth.captchaURL)\r\n\r\n    const onSubmit = useCallback((email: string,\r\n                                  password: string,\r\n                                  rememberMe: boolean,\r\n                                  setStatus: (status: string[]) => void,\r\n                                  captcha: string) => {\r\n        dispatch(login(email, password, rememberMe, setStatus, captcha))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: '',\r\n                rememberMe: false,\r\n                captcha: ''\r\n            }}\r\n\r\n            validationSchema={Yup.object({\r\n                email: Yup.string()\r\n                    .email('Invalid email address')\r\n                    .required('Required'),\r\n                password: Yup.string()\r\n                    .max(20, 'Must be 20 characters or less')\r\n                    .required('Required'),\r\n                /*captcha: Yup.string()\r\n                    .required('Required'),*/\r\n            })}\r\n\r\n            onSubmit={(values, {resetForm, setStatus}) => {\r\n                // resetForm()\r\n                onSubmit(values.email, values.password, values.rememberMe, setStatus, values.captcha)\r\n            }}>\r\n\r\n            {({status}) => <Form className={'formikFormContainer'}>\r\n                <FormInput label='Email' name='email' type={'email'}/>\r\n\r\n                <FormInput label='Password' name='password' type='password'/>\r\n\r\n                <FormCheckbox name='rememberMe' label={'Remember me'}/>\r\n\r\n                <span style={{fontSize: 24, fontWeight: 'bold'}}>{status}</span>\r\n\r\n                {captchaURL &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src={captchaURL} alt={captchaURL}/>\r\n\t\t\t\t\t<FormInput label='Captcha' name='captcha' type='text'/>\r\n\t\t\t\t</div>}\r\n\r\n                <Button type='submit' variant={'contained'}>Submit</Button>\r\n            </Form>}\r\n        </Formik>\r\n    )\r\n})","import React, {FC, memo} from 'react'\r\nimport s from './Login.module.css'\r\nimport {LoginForm} from './LoginForm/LoginForm'\r\nimport {useAppSelector} from '../../hooks/hooks'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\n\r\nexport const Login: FC = memo(() => {\r\n    const isAuth = useAppSelector(state => state.auth.isAuth)\r\n\r\n    if (isAuth) return <Redirect to={PATH.PROFILE}/>\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <h1>Login page</h1>\r\n            <LoginForm/>\r\n            <div>\r\n                <p>To login, you can register <a href={'https://social-network.samuraijs.com/'}\r\n                                                 rel={'noreferrer'}\r\n                                                 target={'_blank'}>here</a></p>\r\n            </div>\r\n            <div>\r\n                <p>Or use next data to login:</p>\r\n                <p>aportraitofjoyce@gmail.com</p>\r\n                <p>123456789</p>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {FC, memo} from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport const Error404: FC = memo(() => {\r\n    return (\r\n        <div className={s.container}>\r\n            <h1>Page not found!</h1>\r\n            <img\r\n                src='https://cdn.statically.io/img/i.pinimg.com/originals/ef/0b/58/ef0b58bc4be3f9622c10a73fe685c57d.jpg'\r\n                alt='page-not-found'/>\r\n        </div>\r\n    )\r\n})","export type ServerResponse<Data = {}, RC = ResultCodes> = {\r\n    resultCode: RC\r\n    messages: string[]\r\n    data: Data\r\n}\r\n\r\nexport enum ResultCodes {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\n\r\nexport enum ResultCodeForCaptcha {\r\n    Captcha = 10\r\n}","import {TypedUseSelectorHook, useSelector} from 'react-redux'\r\nimport {RootState} from '../redux/store'\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import {ThunkType} from '../store'\r\nimport {securityAPI} from '../../api/security-api'\r\nimport {authAPI} from '../../api/auth-api'\r\nimport {ResultCodeForCaptcha, ResultCodes} from '../../types/api-types'\r\n\r\nenum AUTH_ACTIONS_TYPES {\r\n    SET_USER_DATA = 'AUTH/SET_USER_DATA',\r\n    LOGOUT = 'AUTH/LOGOUT',\r\n    SET_CAPTCHA = 'AUTH/SET_CAPTCHA'\r\n}\r\n\r\nexport type AuthActions =\r\n    | ReturnType<typeof setAuthUserData>\r\n    | ReturnType<typeof changeAuthWhenLogout>\r\n    | ReturnType<typeof setCaptcha>\r\n\r\nexport type AuthType = {\r\n    id: number | null\r\n    login: string | null\r\n    email: string | null\r\n    isAuth: boolean,\r\n    captchaURL: string\r\n}\r\n\r\nconst initialState: AuthType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaURL: ''\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: AuthActions): AuthType => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPES.SET_USER_DATA:\r\n            return {...state, ...action.payload, isAuth: true}\r\n\r\n        case AUTH_ACTIONS_TYPES.LOGOUT:\r\n            return {...state, isAuth: false}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_CAPTCHA:\r\n            return {...state, captchaURL: action.payload.captcha}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id: number, login: string, email: string) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_USER_DATA,\r\n    payload: {id, login, email}\r\n} as const)\r\n\r\nexport const changeAuthWhenLogout = () => ({\r\n    type: AUTH_ACTIONS_TYPES.LOGOUT\r\n} as const)\r\n\r\nexport const setCaptcha = (captcha: string) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_CAPTCHA,\r\n    payload: {captcha}\r\n} as const)\r\n\r\nexport const checkAuth = (): ThunkType => async dispatch => {\r\n    const response = await authAPI.checkAuth()\r\n    const {id, login, email} = response.data\r\n    response.resultCode === ResultCodes.Success && dispatch(setAuthUserData(id, login, email))\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, setStatus: (status: string[]) => void, captcha: string): ThunkType => async dispatch => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.resultCode === ResultCodes.Success) {\r\n        await dispatch(checkAuth())\r\n    } else if (response.resultCode === ResultCodeForCaptcha.Captcha) {\r\n        setStatus(response.messages)\r\n        await dispatch(getCaptchaURL())\r\n    } else {\r\n        setStatus(response.messages)\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => async dispatch => {\r\n    try {\r\n        await authAPI.logout()\r\n        dispatch(changeAuthWhenLogout())\r\n    } catch (e) {\r\n        alert(e)\r\n    }\r\n}\r\n\r\nexport const getCaptchaURL = (): ThunkType => async dispatch => {\r\n    const response = await securityAPI.getCaptchaURL()\r\n    dispatch(setCaptcha(response))\r\n}","import {axiosInstance} from './axios-instance'\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL: () => axiosInstance\r\n        .get<{ url: string }>('security/get-captcha-url')\r\n        .then(response => response.data.url)\r\n}","import {axiosInstance} from './axios-instance'\r\nimport {ServerResponse, ResultCodeForCaptcha, ResultCodes} from '../types/api-types'\r\n\r\ntype CheckAuthDataResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\ntype LoginDataResponseType = {\r\n    userId: number\r\n}\r\n\r\nexport const authAPI = {\r\n    checkAuth: () => axiosInstance\r\n        .get<ServerResponse<CheckAuthDataResponseType>>('auth/me')\r\n        .then(response => response.data),\r\n\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => axiosInstance\r\n        .post<ServerResponse<LoginDataResponseType, ResultCodes & ResultCodeForCaptcha>>('auth/login', {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n        .then(response => response.data),\r\n\r\n    logout: () => axiosInstance\r\n        .delete<ServerResponse>('auth/login')\r\n        .then(response => response.data)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formField\":\"Form_formField__116nl\",\"formFieldCheckbox\":\"Form_formFieldCheckbox__NvXjO\",\"errorMessage\":\"Form_errorMessage__23kLT\",\"errorBorder\":\"Form_errorBorder__23wc5\"};","import React, {FC, memo} from 'react'\r\nimport {useField} from 'formik'\r\nimport s from '../Form.module.css'\r\nimport {TextField} from '@mui/material'\r\n\r\ntype FormInputProps = {\r\n    label: string\r\n    name: string\r\n    type?: 'text' | 'email' | 'password'\r\n    id?: string\r\n}\r\n\r\nexport const FormInput: FC<FormInputProps> = memo(({...props}) => {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n        <div className={s.formField}>\r\n            <TextField {...field} {...props} variant='outlined' error={!!meta.error}/>\r\n            {meta.touched && meta.error && <div className={s.errorMessage}>{meta.error}</div>}\r\n        </div>\r\n    )\r\n})"],"sourceRoot":""}