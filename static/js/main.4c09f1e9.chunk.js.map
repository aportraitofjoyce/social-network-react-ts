{"version":3,"sources":["components/Content/Profile/MyProfile/MyProfile.module.css","components/Content/Sidebar/Sidebar.module.css","components/Content/Header/Header.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","components/Content/Profile/Profile.module.css","reportWebVitals.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/sidebar-reducer.ts","redux/store.ts","components/Content/Header/LogoIcon.tsx","components/Content/Header/Header.tsx","components/Content/Dialogs/FriendsToChat/Friend/Friend.tsx","components/Content/Dialogs/FriendsToChat/FriendsToChat.tsx","components/Content/Dialogs/DialogsChat/Message/Message.tsx","components/Content/Dialogs/DialogsChat/DialogsControl/DialogsControl.tsx","components/Content/Dialogs/DialogsChat/DialogsChat.tsx","components/Content/Dialogs/DialogsContainer.tsx","components/Content/Dialogs/Dialogs.tsx","components/Content/Profile/MyPosts/Post/Post.tsx","components/Content/Profile/MyPosts/PostControl/PostControl.tsx","components/Content/Profile/MyPosts/MyPosts.tsx","components/Content/Profile/MyProfile/MyAvatar/MyAvatar.tsx","components/Content/Profile/MyProfile/MyInfo/MyInfo.tsx","components/Content/Profile/MyProfile/MyProfile.tsx","components/Content/Profile/ProfileContainer.tsx","components/Content/Profile/Profile.tsx","components/Content/Sidebar/SidebarItem/SidebarItem.tsx","components/Content/Sidebar/SidebarContainer.tsx","components/Content/Sidebar/Sidebar.tsx","App.tsx","index.tsx","components/Content/Dialogs/Dialogs.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_POST_TEXT","initialState","dataForMyProfile","src","alt","title","dataForMyPosts","text","likes","newPost","updatePostAC","type","SEND_MESSAGE","UPDATE_MESSAGE_TEXT","dataForFriends","id","v1","name","dataForMessages","from","message","newMessage","updateMessageTextAC","dataForSidebar","link","reducers","combineReducers","profile","state","action","addPost","updatePostText","dialogs","sendMessage","updateMessageText","sidebar","store","createStore","LogoIcon","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","cx","cy","r","x1","y1","x2","y2","Header","s","wrapper","container","to","logoWrapper","miniProfileImg","Friend","props","friend","activeClassName","active","FriendsToChat","dialogWithFriend","map","item","friendsContainer","Message","messageWrapper","avatar","messageContainer","DialogsControl","controlContainer","placeholder","onChange","e","updateMessage","currentTarget","value","textForNewMessage","onClick","DialogsChat","mappedMessages","dialogsWrapper","dialogsContainer","DialogsContainer","connect","dispatch","Post","avatar_container","content_container","PostsControl","control_wrapper","updatePost","textForNewPost","MyPosts","mappedPosts","MyAvatar","avatar_wrapper","MyInfo","info_wrapper","MyProfile","ProfileContainer","SidebarItem","SidebarContainer","mappedSidebarItems","PATH","App","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c09f1e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyProfile_wrapper__cp4Sk\",\"avatar_wrapper\":\"MyProfile_avatar_wrapper__1ttbl\",\"info_wrapper\":\"MyProfile_info_wrapper__2K8dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Sidebar_wrapper__38jnK\",\"container\":\"Sidebar_container__1dNie\",\"active\":\"Sidebar_active__1ixxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3jZPv\",\"container\":\"Header_container__2LYHX\",\"miniProfileImg\":\"Header_miniProfileImg__1x289\",\"logoWrapper\":\"Header_logoWrapper__nqon6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__15TKy\",\"control_wrapper\":\"MyPosts_control_wrapper__2ZGHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__3ZTzx\",\"avatar_container\":\"Post_avatar_container__4fRhO\",\"content_container\":\"Post_content_container__3MGXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__2B6mU\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ActionsType, ProfileType} from \"./store\";\r\n\r\nconst ADD_POST = 'App/Profile/ADD-POST';\r\nconst UPDATE_POST_TEXT = 'App/Profile/UPDATE-POST-TEXT';\r\n\r\nconst initialState: ProfileType = {\r\n    dataForMyProfile: {\r\n        src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n        alt: \"My profile\",\r\n        title: 'Илья Садовский'\r\n    },\r\n    dataForMyPosts: [\r\n        {\r\n            src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n            alt: \"My profile\",\r\n            text: 'My first post',\r\n            likes: 10\r\n        },\r\n        {\r\n            src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n            alt: \"My profile\",\r\n            text: 'My second post',\r\n            likes: 5\r\n        },\r\n        {\r\n            src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n            alt: \"My profile\",\r\n            text: 'My third post',\r\n            likes: 43\r\n        },\r\n        {\r\n            src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n            alt: \"My profile\",\r\n            text: 'My fourth post',\r\n            likes: 0\r\n        }\r\n    ],\r\n    newPost: {\r\n        src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n        alt: \"My profile\",\r\n        text: 'Что-то чтобы не вводить для тестов',\r\n        likes: 0\r\n    }\r\n}\r\n\r\nexport const profileReducer = (state: ProfileType = initialState, action: ActionsType): ProfileType => {\r\n    const addPost = () => ({\r\n        ...state,\r\n        dataForMyPosts: [{...state.newPost}, ...state.dataForMyPosts],\r\n        newPost: {...state.newPost, text: ''}\r\n    })\r\n\r\n    const updatePostText = (text: string) => ({\r\n        ...state,\r\n        newPost: {...state.newPost, text: text}\r\n    })\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return addPost()\r\n        case UPDATE_POST_TEXT:\r\n            return updatePostText(action.text)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = () => ({type: ADD_POST}) as const\r\nexport const updatePostAC = (text: string) => ({type: UPDATE_POST_TEXT, text: text}) as const","import {ActionsType, DialogsType} from \"./store\";\r\nimport {v1} from \"uuid\";\r\n\r\nconst SEND_MESSAGE = 'App/Dialogs/SEND-MESSAGE'\r\nconst UPDATE_MESSAGE_TEXT = 'App/Dialogs/UPDATE-MESSAGE-TEXT'\r\n\r\nconst initialState: DialogsType = {\r\n    dataForFriends: [\r\n        {id: v1(), name: 'Me'},\r\n        {id: v1(), name: 'Maxim'},\r\n        {id: v1(), name: 'Andrei'},\r\n        {id: v1(), name: 'Yura'}\r\n    ],\r\n\r\n    dataForMessages: [\r\n        {id: v1(), from: 'Me', message: 'Привет, как дела?'},\r\n        {id: v1(), from: 'Andrei', message: 'Ку-ку, отлично. А у тебя?'},\r\n        {id: v1(), from: 'Me', message: 'Плохо, монитор из сервисного центре не отдают!'},\r\n        {id: v1(), from: 'Me', message: 'Пользуются им уже дольше чем я'},\r\n        {id: v1(), from: 'Andrei', message: 'Козлы'},\r\n        {id: v1(), from: 'Me', message: 'Ага!'},\r\n    ],\r\n    newMessage: {\r\n        id: v1(),\r\n        from: 'Me',\r\n        message: ''\r\n    }\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsType = initialState, action: ActionsType): DialogsType => {\r\n    const sendMessage = () => ({\r\n        ...state,\r\n        dataForMessages: [...state.dataForMessages, {...state.newMessage}],\r\n        newMessage: {...state.newMessage, message: ''}\r\n    })\r\n\r\n    const updateMessageText = (text: string) => ({\r\n        ...state,\r\n        newMessage: {...state.newMessage, message: text}\r\n    })\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return sendMessage()\r\n        case UPDATE_MESSAGE_TEXT:\r\n            return updateMessageText(action.text)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageAC = () => ({type: SEND_MESSAGE}) as const\r\nexport const updateMessageTextAC = (text: string) => ({type: UPDATE_MESSAGE_TEXT, text: text}) as const","import {ActionsType, SidebarType} from \"./store\";\r\n\r\nconst initialState: SidebarType = {\r\n    dataForSidebar: [\r\n        {name: 'My profile', link: '/profile'},\r\n        {name: 'Messages', link: '/dialogs'},\r\n    ]\r\n}\r\n\r\nexport const sidebarReducer = (state: any = initialState, action: ActionsType): any => {\r\n    return state\r\n}\r\n","import {combineReducers, createStore, Store} from \"redux\";\r\nimport {addPostAC, profileReducer, updatePostAC} from \"./profile-reducer\";\r\nimport {dialogsReducer, sendMessageAC, updateMessageTextAC} from \"./dialogs-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\n\r\n// Reducers собираются в один объект, ключ каждого редьюсера - часть из подходящего стейта\r\nconst reducers = combineReducers(\r\n    {\r\n        profile: profileReducer,\r\n        dialogs: dialogsReducer,\r\n        sidebar: sidebarReducer\r\n    }\r\n)\r\n\r\nexport const store: StoreType = createStore(reducers)\r\n\r\nexport type StoreType = Store & ReducersType\r\n\r\nexport type ReducersType = ReturnType<typeof reducers>\r\n\r\nexport type ActionsType =\r\n    ReturnType<typeof addPostAC> |\r\n    ReturnType<typeof updatePostAC> |\r\n    ReturnType<typeof sendMessageAC> |\r\n    ReturnType<typeof updateMessageTextAC>\r\n\r\nexport type DispatchType = (action: ActionsType) => void\r\n\r\nexport type StateType = {\r\n    sidebar: SidebarType\r\n    profile: ProfileType\r\n    dialogs: DialogsType\r\n}\r\n\r\nexport type SidebarType = {\r\n    dataForSidebar: dataForSidebarType[]\r\n}\r\n\r\nexport type ProfileType = {\r\n    dataForMyProfile: dataForMyProfileType\r\n    dataForMyPosts: dataForMyPostsType[]\r\n    newPost: dataForMyPostsType\r\n}\r\n\r\nexport type DialogsType = {\r\n    dataForFriends: DataForFriendsType[]\r\n    dataForMessages: MessagesDataType[]\r\n    newMessage: MessagesDataType\r\n}\r\n\r\nexport type dataForSidebarType = {\r\n    name: string\r\n    link: string\r\n}\r\n\r\nexport type dataForMyProfileType = {\r\n    src: string\r\n    alt: string\r\n    title: string\r\n}\r\n\r\nexport type dataForMyPostsType = {\r\n    src: string\r\n    alt: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nexport type DataForFriendsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type MessagesDataType = {\r\n    id: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\n\r\n/*\r\n\r\nexport type StoreType = ReturnType<typeof reducers> & {\r\n    getState: () => StateType\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: (action: ActionsType) => void\r\n}\r\n\r\nconst store: StoreType = {\r\n    getState(): StateType {\r\n        return this._state\r\n    },\r\n\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer\r\n    },\r\n\r\n    callSubscriber() {\r\n    },\r\n\r\n    dispatch(action) {\r\n        this._state.profile = profileReducer(this._state.profile, action)\r\n        this._state.dialogs = dialogsReducer(this._state.dialogs, action)\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action)\r\n        this._callSubscriber()\r\n    },\r\n    _state: {\r\n        sidebar: {\r\n            dataForSidebar: [\r\n                {name: 'My profile', link: '/profile'},\r\n                {name: 'Messages', link: '/dialogs'},\r\n            ]\r\n        },\r\n\r\n        profile: {\r\n            dataForMyProfile: {\r\n                src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                alt: \"My profile\",\r\n                title: 'Илья Садовский'\r\n            },\r\n            dataForMyPosts: [\r\n                {\r\n                    src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                    alt: \"My profile\",\r\n                    text: 'My first post',\r\n                    likes: 10\r\n                },\r\n                {\r\n                    src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                    alt: \"My profile\",\r\n                    text: 'My second post',\r\n                    likes: 5\r\n                },\r\n                {\r\n                    src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                    alt: \"My profile\",\r\n                    text: 'My third post',\r\n                    likes: 43\r\n                },\r\n                {\r\n                    src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                    alt: \"My profile\",\r\n                    text: 'My fourth post',\r\n                    likes: 0\r\n                }\r\n            ],\r\n            newPost: {\r\n                src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                alt: \"My profile\",\r\n                text: 'Что-то чтобы не вводить для тестов',\r\n                likes: 0\r\n            }\r\n        },\r\n\r\n        dialogs: {\r\n            dataForFriends: [\r\n                {id: v1(), name: 'Me'},\r\n                {id: v1(), name: 'Maxim'},\r\n                {id: v1(), name: 'Andrei'},\r\n                {id: v1(), name: 'Yuri'}\r\n            ],\r\n\r\n            dataForMessages: [\r\n                {id: v1(), from: 'Me', message: 'Привет, как дела?'},\r\n                {id: v1(), from: 'Andrei', message: 'Ку-ку, отлично. А у тебя?'},\r\n                {id: v1(), from: 'Me', message: 'Плохо, монитор из сервисного центре не отдают!'},\r\n                {id: v1(), from: 'Me', message: 'Пользуются им уже дольше чем я'},\r\n                {id: v1(), from: 'Andrei', message: 'Козлы'},\r\n                {id: v1(), from: 'Me', message: 'Ага!'},\r\n            ],\r\n            newMessage: {\r\n                id: v1(),\r\n                from: 'Me',\r\n                message: ''\r\n            }\r\n        }\r\n    },\r\n}*/","import React from \"react\";\r\n\r\nexport const LogoIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n             stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\r\n             className=\"feather feather-share-2\">\r\n            <circle cx=\"18\" cy=\"5\" r=\"3\"/>\r\n            <circle cx=\"6\" cy=\"12\" r=\"3\"/>\r\n            <circle cx=\"18\" cy=\"19\" r=\"3\"/>\r\n            <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"/>\r\n            <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"/>\r\n        </svg>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.css'\r\nimport {LogoIcon} from \"./LogoIcon\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.container}>\r\n                <NavLink to={'/'} className={s.logoWrapper}><LogoIcon/><span>Social Network</span></NavLink>\r\n                <img\r\n                    src=\"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\"\r\n                    alt=\"mini-profile\"\r\n                    className={s.miniProfileImg}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {NavLink} from \"react-router-dom\";\r\nimport s from \"../../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport {DataForFriendsType} from \"../../../../../redux/store\";\r\n\r\nexport const Friend: React.FC<DataForFriendsType> = (props) => {\r\n    return (\r\n        <NavLink to={'/dialogs/' + props.id}\r\n                 className={s.friend}\r\n                 activeClassName={s.active}>\r\n            {props.name}\r\n        </NavLink>\r\n    )\r\n}","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport {Friend} from \"./Friend/Friend\";\r\nimport {DataForFriendsType} from \"../../../../redux/store\";\r\n\r\ntype FriendsContainerPropsType = {\r\n    dataForFriends: DataForFriendsType[]\r\n}\r\n\r\nexport const FriendsToChat: React.FC<FriendsContainerPropsType> = (props) => {\r\n    const dialogWithFriend = props.dataForFriends.map((item) => <Friend key={item.id} id={item.id} name={item.name}/>)\r\n\r\n    return (\r\n        <div className={s.friendsContainer}>\r\n            {dialogWithFriend}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import s from \"../../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MessagePropsType = {\r\n    id: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.messageWrapper}>\r\n            <div className={s.avatar}>\r\n                <img\r\n                    src='https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album'\r\n                    alt='qq'/>\r\n            </div>\r\n            <div className={s.messageContainer}>\r\n                <div><b>{props.from}:</b></div>\r\n                <div>{props.message}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"../../Dialogs.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\ntype DialogsControlPropsType = {\r\n    sendMessage: () => void\r\n    updateMessage: (text: string) => void\r\n    textForNewMessage: string\r\n}\r\n\r\nexport const DialogsControl: React.FC<DialogsControlPropsType> = (props) => {\r\n    const sendMessageHandler = () => props.sendMessage()\r\n    const updateMessageHandler = (e: ChangeEvent<HTMLTextAreaElement>) => props.updateMessage(e.currentTarget.value)\r\n\r\n    return (\r\n        <div className={s.controlContainer}>\r\n            <textarea placeholder={'Say something'}\r\n                      onChange={updateMessageHandler}\r\n                      value={props.textForNewMessage}/>\r\n            <button onClick={sendMessageHandler}>Add</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsControl} from \"./DialogsControl/DialogsControl\";\r\nimport {v1} from \"uuid\";\r\nimport {MessagesDataType} from \"../../../../redux/store\";\r\n\r\ntype DialogsContainerPropsType = {\r\n    dataForMessages: MessagesDataType[]\r\n    sendMessage: () => void\r\n    updateMessage: (text: string) => void\r\n    textForNewMessage: string\r\n}\r\n\r\nexport const DialogsChat: React.FC<DialogsContainerPropsType> = (props) => {\r\n    const mappedMessages = props.dataForMessages.map(item => <Message\r\n        key={v1()} from={item.from} message={item.message} id={item.id}/>)\r\n\r\n    return (\r\n        <div className={s.dialogsWrapper}>\r\n            <div className={s.dialogsContainer}>\r\n                {mappedMessages}\r\n            </div>\r\n            <DialogsControl\r\n                textForNewMessage={props.textForNewMessage}\r\n                sendMessage={props.sendMessage}\r\n                updateMessage={props.updateMessage}\r\n            />\r\n        </div>\r\n    )\r\n}","import {sendMessageAC, updateMessageTextAC} from \"../../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {DispatchType, StateType} from \"../../../redux/store\";\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    dataForMessages: state.dialogs.dataForMessages,\r\n    textForNewMessage: state.dialogs.newMessage.message,\r\n    dataForFriends: state.dialogs.dataForFriends\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: DispatchType) => ({\r\n    sendMessage: () => {\r\n        dispatch(sendMessageAC())\r\n        dispatch(updateMessageTextAC(''))\r\n    },\r\n    updateMessage: (text: string) => {\r\n        dispatch(updateMessageTextAC(text))\r\n    }\r\n})\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {DataForFriendsType, MessagesDataType} from \"../../../redux/store\";\r\nimport {FriendsToChat} from \"./FriendsToChat/FriendsToChat\";\r\nimport {DialogsChat} from \"./DialogsChat/DialogsChat\";\r\n\r\ntype DialogsPropsType = {\r\n    dataForMessages: MessagesDataType[]\r\n    sendMessage: () => void\r\n    updateMessage: (text: string) => void\r\n    textForNewMessage: string\r\n    dataForFriends: DataForFriendsType[]\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    return (\r\n        <main className={s.wrapper}>\r\n            <FriendsToChat dataForFriends={props.dataForFriends}/>\r\n            <DialogsChat\r\n                dataForMessages={props.dataForMessages}\r\n                textForNewMessage={props.textForNewMessage}\r\n                sendMessage={props.sendMessage}\r\n                updateMessage={props.updateMessage}\r\n            />\r\n        </main>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\ntype PostPropsType = {\r\n    src: string\r\n    alt: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nexport const Post: React.FC<PostPropsType> = (props) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n\r\n            <div className={s.avatar_container}>\r\n                <img src={props.src} alt={props.alt}/>\r\n            </div>\r\n\r\n            <div className={s.content_container}>\r\n                <div>{props.text}</div>\r\n                <div>Likes: {props.likes}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import s from \"../MyPosts.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\ntype PostControlPropsType = {\r\n    textForNewPost: string\r\n    addPost: () => void\r\n    updatePost: (text: string) => void\r\n}\r\n\r\nexport const PostsControl: React.FC<PostControlPropsType> = (props) => {\r\n    const addPostHandler = () => props.addPost()\r\n    const updatePostHandler = (e: ChangeEvent<HTMLTextAreaElement>) => props.updatePost(e.currentTarget.value)\r\n\r\n    return (\r\n        <div className={s.control_wrapper}>\r\n            <textarea placeholder={'Say something'}\r\n                      onChange={updatePostHandler}\r\n                      value={props.textForNewPost}/>\r\n            <button onClick={addPostHandler}>Add</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {v1} from \"uuid\";\r\nimport {PostsControl} from \"./PostControl/PostControl\";\r\nimport {dataForMyPostsType} from \"../../../../redux/store\";\r\n\r\ntype MyPostsPropsType = {\r\n    addPost: () => void\r\n    updatePost: (text: string) => void\r\n    textForNewPost: string\r\n    dataForMyPosts: dataForMyPostsType[]\r\n}\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n    const mappedPosts = props.dataForMyPosts.map((item) => {\r\n        return <Post key={v1()}\r\n                     text={item.text}\r\n                     src={item.src}\r\n                     alt={item.alt}\r\n                     likes={item.likes}/>\r\n    })\r\n\r\n    return (\r\n        <section className={s.wrapper}>\r\n            <PostsControl textForNewPost={props.textForNewPost}\r\n                          addPost={props.addPost}\r\n                          updatePost={props.updatePost}/>\r\n            {mappedPosts}\r\n        </section>\r\n    )\r\n}","import s from \"../MyProfile.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MyAvatarPropsType = {\r\n    src: string\r\n    alt: string\r\n}\r\n\r\nexport const MyAvatar: React.FC<MyAvatarPropsType> = (props) => {\r\n    return (\r\n        <div className={s.avatar_wrapper}>\r\n            <img\r\n                src={props.src}\r\n                alt={props.alt}/>\r\n        </div>\r\n    )\r\n}","import s from \"../MyProfile.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MyInfoPropsType = {\r\n    title: string\r\n}\r\n\r\nexport const MyInfo: React.FC<MyInfoPropsType> = (props) => {\r\n    return (\r\n        <div className={s.info_wrapper}>\r\n            <h3>{props.title}</h3>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './MyProfile.module.css'\r\nimport {MyAvatar} from \"./MyAvatar/MyAvatar\";\r\nimport {MyInfo} from \"./MyInfo/MyInfo\";\r\nimport {dataForMyProfileType} from \"../../../../redux/store\";\r\n\r\ntype MyProfilePropsType = {\r\n    dataForMyProfile: dataForMyProfileType\r\n}\r\n\r\nexport const MyProfile: React.FC<MyProfilePropsType> = (props) => {\r\n    return (\r\n        <section className={s.wrapper}>\r\n            <MyAvatar src={props.dataForMyProfile.src} alt={props.dataForMyProfile.alt}/>\r\n            <MyInfo title={props.dataForMyProfile.title}/>\r\n        </section>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport {Profile} from \"./Profile\";\r\nimport {DispatchType, StateType} from \"../../../redux/store\";\r\nimport {addPostAC, updatePostAC} from \"../../../redux/profile-reducer\";\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    dataForMyProfile: state.profile.dataForMyProfile,\r\n    dataForMyPosts: state.profile.dataForMyPosts,\r\n    textForNewPost: state.profile.newPost.text\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: DispatchType) => ({\r\n    addPost: () => {\r\n        dispatch(addPostAC())\r\n        dispatch(updatePostAC(''))\r\n    },\r\n    updatePost: (text: string) => {\r\n        dispatch(updatePostAC(text))\r\n    }\r\n})\r\n\r\nexport const ProfileContainer = connect(mapStateToProps, mapDispatchToProps)(Profile)","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {MyProfile} from \"./MyProfile/MyProfile\";\r\nimport {dataForMyPostsType, dataForMyProfileType} from \"../../../redux/store\";\r\n\r\ntype ProfilePropsType = {\r\n    dataForMyProfile: dataForMyProfileType\r\n    addPost: () => void\r\n    updatePost: (text: string) => void\r\n    textForNewPost: string\r\n    dataForMyPosts: dataForMyPostsType[]\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = (props) => {\r\n    return (\r\n        <main className={s.wrapper}>\r\n            <MyProfile dataForMyProfile={props.dataForMyProfile}/>\r\n\r\n            <MyPosts\r\n                dataForMyPosts={props.dataForMyPosts}\r\n                textForNewPost={props.textForNewPost}\r\n                addPost={props.addPost}\r\n                updatePost={props.updatePost}/>\r\n        </main>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"../Sidebar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype SidebarItemPropsType = {\r\n    link: string\r\n    name: string\r\n}\r\n\r\nexport const SidebarItem: React.FC<SidebarItemPropsType> = (props) => {\r\n    return <NavLink to={props.link} activeClassName={s.active}>{props.name}</NavLink>\r\n}","import {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../redux/store\";\r\nimport {Sidebar} from \"./Sidebar\";\r\n\r\nconst mapStateToProps = (state: StateType) => (\r\n    {\r\n        dataForSidebar: state.sidebar.dataForSidebar\r\n    }\r\n)\r\n\r\nexport const SidebarContainer = connect(mapStateToProps)(Sidebar)","import React from \"react\";\r\nimport s from './Sidebar.module.css'\r\nimport {SidebarItem} from \"./SidebarItem/SidebarItem\";\r\nimport {dataForSidebarType} from \"../../../redux/store\";\r\nimport {v1} from \"uuid\";\r\n\r\ntype SidebarPropsType = {\r\n    dataForSidebar: dataForSidebarType[]\r\n}\r\n\r\nexport const Sidebar: React.FC<SidebarPropsType> = (props) => {\r\n    const mappedSidebarItems = props.dataForSidebar.map(item => {\r\n        return <SidebarItem key={v1()} name={item.name} link={item.link}/>\r\n    })\r\n\r\n    return (\r\n        <aside className={s.wrapper}>\r\n            <nav className={s.container}>\r\n                {mappedSidebarItems}\r\n            </nav>\r\n        </aside>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport {Header} from \"./components/Content/Header/Header\";\nimport {DialogsContainer} from \"./components/Content/Dialogs/DialogsContainer\";\nimport {ProfileContainer} from \"./components/Content/Profile/ProfileContainer\";\nimport {SidebarContainer} from \"./components/Content/Sidebar/SidebarContainer\";\n\nconst PATH = {\n    PROFILE: '/profile',\n    DIALOGS: '/dialogs',\n}\n\nexport const App = () => {\n    return (\n        <div className={'App'}>\n            <Header/>\n            <div className={'contentWrapper'}>\n                <SidebarContainer/>\n                <Switch>\n                    <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n                    <Route path={PATH.PROFILE}\n                           render={() => <ProfileContainer/>}/>\n                    <Route path={PATH.DIALOGS}\n                           render={() => <DialogsContainer/>}/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals'\nimport './index.css';\nimport {store} from \"./redux/store\";\nimport {App} from \"./App\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>, document.getElementById('root'))\n\n// Подписываем рендер App на изменение store\n// store.subscribe(rerenderEntireTree)\n\nreportWebVitals()","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__OXmKF\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__dCwpn\",\"dialogsContainer\":\"Dialogs_dialogsContainer__CDolV\",\"friendsContainer\":\"Dialogs_friendsContainer__YeVKw\",\"active\":\"Dialogs_active__3y7fC\",\"messageWrapper\":\"Dialogs_messageWrapper__IjTOH\",\"avatar\":\"Dialogs_avatar__2vOPD\",\"controlContainer\":\"Dialogs_controlContainer__1HQ5X\"};"],"sourceRoot":""}