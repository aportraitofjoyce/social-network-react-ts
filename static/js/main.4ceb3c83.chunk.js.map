{"version":3,"sources":["components/Content/Profile/MyProfile/MyProfile.module.css","components/Content/Sidebar/Sidebar.module.css","components/Content/Header/Header.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","components/Content/Profile/Profile.module.css","reportWebVitals.ts","redux/state.ts","components/Content/Sidebar/SidebarItem/SidebarItem.tsx","components/Content/Sidebar/Sidebar.tsx","components/Content/Dialogs/FriendsContainer/Friend/Friend.tsx","components/Content/Dialogs/FriendsContainer/FriendsContainer.tsx","components/Content/Dialogs/DialogsContainer/Message/Message.tsx","components/Content/Dialogs/DialogsContainer/DialogsControl/DialogsControl.tsx","components/Content/Dialogs/DialogsContainer/DialogsContainer.tsx","components/Content/Dialogs/Dialogs.tsx","components/Content/Profile/MyPosts/Post/Post.tsx","components/Content/Profile/MyPosts/PostControl/PostControl.tsx","components/Content/Profile/MyPosts/MyPosts.tsx","components/Content/Profile/MyProfile/MyAvatar/MyAvatar.tsx","components/Content/Profile/MyProfile/MyInfo/MyInfo.tsx","components/Content/Profile/MyProfile/MyProfile.tsx","components/Content/Profile/Profile.tsx","components/Content/Header/LogoIcon.tsx","components/Content/Header/Header.tsx","App.tsx","index.tsx","components/Content/Dialogs/Dialogs.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_POST_TEXT","SEND_MESSAGE","UPDATE_MESSAGE_TEXT","store","_state","sidebar","dataForSidebar","name","link","profile","dataForMyProfile","src","alt","title","dataForMyPosts","text","likes","newPost","dialogs","dataForFriends","id","v1","dataForMessages","from","message","newMessage","_getState","this","_subscribe","observer","_callSubscriber","dispatch","action","type","_addPost","_updatePostText","_sendMessage","_updateMessageText","copyOfNewPost","unshift","copyOfNewMessage","push","updatePostAC","updateMessageTextAC","SidebarItem","props","to","activeClassName","s","active","Sidebar","mappedSidebarItems","map","item","className","wrapper","container","Friend","friend","FriendsContainer","dialogWithFriend","friendsContainer","Message","messageWrapper","avatar","messageContainer","DialogsControl","controlContainer","placeholder","onChange","e","currentTarget","value","textForNewMessage","onClick","DialogsContainer","mappedMessages","dialogsWrapper","dialogsContainer","Dialogs","Post","avatar_container","content_container","PostsControl","control_wrapper","textForNewPost","MyPosts","mappedPosts","MyAvatar","avatar_wrapper","MyInfo","info_wrapper","MyProfile","Profile","LogoIcon","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","Header","logoWrapper","miniProfileImg","PATH","App","state","path","exact","render","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.4ceb3c83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyProfile_wrapper__cp4Sk\",\"avatar_wrapper\":\"MyProfile_avatar_wrapper__1ttbl\",\"info_wrapper\":\"MyProfile_info_wrapper__2K8dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Sidebar_wrapper__38jnK\",\"container\":\"Sidebar_container__1dNie\",\"active\":\"Sidebar_active__1ixxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3jZPv\",\"container\":\"Header_container__2LYHX\",\"miniProfileImg\":\"Header_miniProfileImg__1x289\",\"logoWrapper\":\"Header_logoWrapper__nqon6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__15TKy\",\"control_wrapper\":\"MyPosts_control_wrapper__2ZGHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__3ZTzx\",\"avatar_container\":\"Post_avatar_container__4fRhO\",\"content_container\":\"Post_content_container__3MGXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__2B6mU\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {v1} from \"uuid\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_POST_TEXT = 'UPDATE-POST-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE'\r\nconst UPDATE_MESSAGE_TEXT = 'UPDATE-MESSAGE-TEXT'\r\n\r\nexport const store: StoreType = {\r\n    _state: {\r\n        sidebar: {\r\n            dataForSidebar: [\r\n                {name: 'My profile', link: '/profile'},\r\n                {name: 'Messages', link: '/dialogs'},\r\n            ]\r\n        },\r\n\r\n        profile: {\r\n            dataForMyProfile: {\r\n                src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                alt: \"My profile\",\r\n                title: 'Илья Садовский'\r\n            },\r\n            dataForMyPosts: [\r\n                {\r\n                    src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                    alt: \"My profile\",\r\n                    text: 'My first post',\r\n                    likes: 10\r\n                },\r\n                {\r\n                    src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                    alt: \"My profile\",\r\n                    text: 'My second post',\r\n                    likes: 5\r\n                },\r\n                {\r\n                    src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                    alt: \"My profile\",\r\n                    text: 'My third post',\r\n                    likes: 43\r\n                },\r\n                {\r\n                    src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                    alt: \"My profile\",\r\n                    text: 'My fourth post',\r\n                    likes: 0\r\n                }\r\n            ],\r\n            newPost: {\r\n                src: \"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\",\r\n                alt: \"My profile\",\r\n                text: 'Что-то чтобы не вводить для тестов',\r\n                likes: 0\r\n            }\r\n        },\r\n\r\n        dialogs: {\r\n            dataForFriends: [\r\n                {id: v1(), name: 'Me'},\r\n                {id: v1(), name: 'Maxim'},\r\n                {id: v1(), name: 'Andrei'},\r\n                {id: v1(), name: 'Yura'}\r\n            ],\r\n\r\n            dataForMessages: [\r\n                {id: v1(), from: 'Me', message: 'Привет, как дела?'},\r\n                {id: v1(), from: 'Andrei', message: 'Ку-ку, отлично. А у тебя?'},\r\n                {id: v1(), from: 'Me', message: 'Плохо, монитор из сервисного центре не отдают!'},\r\n                {id: v1(), from: 'Me', message: 'Пользуются им уже дольше чем я'},\r\n                {id: v1(), from: 'Andrei', message: 'Козлы'},\r\n                {id: v1(), from: 'Me', message: 'Ага!'},\r\n            ],\r\n            newMessage: {\r\n                id: v1(),\r\n                from: 'Me',\r\n                message: ''\r\n            }\r\n        }\r\n    },\r\n\r\n    _getState(): StateType {\r\n        return this._state\r\n    },\r\n\r\n    // Принимает rerenderEntireTree и дает привязку пустой функции _callSubscriber для перевызова и отрисовки\r\n    _subscribe(observer) {\r\n        this._callSubscriber = observer\r\n    },\r\n\r\n    _callSubscriber() {\r\n    },\r\n\r\n    dispatch(action) {\r\n        switch (action.type) {\r\n            case ADD_POST:\r\n                this._addPost();\r\n                break\r\n            case UPDATE_POST_TEXT:\r\n                this._updatePostText(action.text);\r\n                break\r\n            case SEND_MESSAGE:\r\n                this._sendMessage();\r\n                break\r\n            case UPDATE_MESSAGE_TEXT:\r\n                this._updateMessageText(action.text);\r\n                break\r\n        }\r\n    },\r\n\r\n    _addPost() {\r\n        const copyOfNewPost = {...this._state.profile.newPost}\r\n        this._state.profile.dataForMyPosts.unshift(copyOfNewPost)\r\n        this._callSubscriber()\r\n    },\r\n\r\n    _updatePostText(text: string) {\r\n        this._state.profile.newPost.text = text\r\n        this._callSubscriber()\r\n    },\r\n\r\n    _sendMessage() {\r\n        const copyOfNewMessage = {...this._state.dialogs.newMessage}\r\n        this._state.dialogs.dataForMessages.push(copyOfNewMessage)\r\n        this._callSubscriber()\r\n    },\r\n\r\n    _updateMessageText(text: string) {\r\n        store._state.dialogs.newMessage.message = text\r\n        store._callSubscriber()\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const addPostAC = () => {\r\n    return {type: ADD_POST} as const\r\n}\r\nexport const updatePostAC = (text: string) => {\r\n    return {type: UPDATE_POST_TEXT, text: text} as const\r\n}\r\nexport const sendMessageAC = () => {\r\n    return {type: SEND_MESSAGE} as const\r\n}\r\nexport const updateMessageTextAC = (text: string) => {\r\n    return {type: UPDATE_MESSAGE_TEXT, text: text} as const\r\n}\r\n\r\n// TypeScript\r\ntype StoreType = {\r\n    _state: StateType\r\n    _getState: () => StateType\r\n    _subscribe: (observer: () => void) => void\r\n    _callSubscriber: () => void\r\n    dispatch: (action: ActionsType) => void\r\n    _addPost: () => void\r\n    _updatePostText: (postText: string) => void\r\n    _sendMessage: () => void\r\n    _updateMessageText: (text: string) => void\r\n}\r\n\r\nexport type ActionsType =\r\n    ReturnType<typeof addPostAC> |\r\n    ReturnType<typeof updatePostAC> |\r\n    ReturnType<typeof sendMessageAC> |\r\n    ReturnType<typeof updateMessageTextAC>\r\n\r\n\r\nexport type StateType = {\r\n    sidebar: SidebarType\r\n    profile: ProfileType\r\n    dialogs: DialogsType\r\n}\r\n\r\nexport type SidebarType = {\r\n    dataForSidebar: dataForSidebarType[]\r\n}\r\n\r\nexport type ProfileType = {\r\n    dataForMyProfile: dataForMyProfileType\r\n    dataForMyPosts: dataForMyPostsType[]\r\n    newPost: dataForMyPostsType\r\n}\r\n\r\nexport type DialogsType = {\r\n    dataForFriends: DataForFriendsType[]\r\n    dataForMessages: MessagesDataType[]\r\n    newMessage: MessagesDataType\r\n}\r\n\r\nexport type dataForSidebarType = {\r\n    name: string\r\n    link: string\r\n}\r\n\r\nexport type dataForMyProfileType = {\r\n    src: string\r\n    alt: string\r\n    title: string\r\n}\r\n\r\nexport type dataForMyPostsType = {\r\n    src: string\r\n    alt: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nexport type DataForFriendsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type MessagesDataType = {\r\n    id: string\r\n    from: string\r\n    message: string\r\n}","import React from \"react\";\r\nimport s from \"../Sidebar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype SidebarItemPropsType = {\r\n    link: string\r\n    name: string\r\n}\r\n\r\nexport const SidebarItem: React.FC<SidebarItemPropsType> = (props) => {\r\n    return <NavLink to={props.link} activeClassName={s.active}>{props.name}</NavLink>\r\n}","import React from \"react\";\r\nimport s from './Sidebar.module.css'\r\nimport {SidebarItem} from \"./SidebarItem/SidebarItem\";\r\nimport {SidebarType} from \"../../../redux/state\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport const Sidebar: React.FC<SidebarType> = (props) => {\r\n    const mappedSidebarItems = props.dataForSidebar.map((item) => {\r\n        return <SidebarItem key={v1()} name={item.name} link={item.link}/>\r\n    })\r\n\r\n    return (\r\n        <aside className={s.wrapper}>\r\n            <nav className={s.container}>\r\n                {mappedSidebarItems}\r\n            </nav>\r\n        </aside>\r\n    )\r\n}\r\n\r\n","import {NavLink} from \"react-router-dom\";\r\nimport s from \"../../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport {DataForFriendsType} from \"../../../../../redux/state\";\r\n\r\nexport const Friend: React.FC<DataForFriendsType> = (props) => {\r\n    return (\r\n        <NavLink to={'/dialogs/' + props.id}\r\n                 className={s.friend}\r\n                 activeClassName={s.active}>\r\n            {props.name}\r\n        </NavLink>\r\n    )\r\n}","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport {Friend} from \"./Friend/Friend\";\r\nimport {DataForFriendsType} from \"../../../../redux/state\";\r\n\r\ntype FriendsContainerPropsType = {\r\n    dataForFriends: DataForFriendsType[]\r\n}\r\n\r\nexport const FriendsContainer: React.FC<FriendsContainerPropsType> = (props) => {\r\n    const dialogWithFriend = props.dataForFriends.map((item) => <Friend key={item.id} id={item.id} name={item.name}/>)\r\n\r\n    return (\r\n        <div className={s.friendsContainer}>\r\n            {dialogWithFriend}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import s from \"../../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MessagePropsType = {\r\n    id: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.messageWrapper}>\r\n            <div className={s.avatar}>\r\n                <img\r\n                    src='https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album'\r\n                    alt='qq'/>\r\n            </div>\r\n            <div className={s.messageContainer}>\r\n                <div><b>{props.from}:</b></div>\r\n                <div>{props.message}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"../../Dialogs.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {ActionsType, sendMessageAC, updateMessageTextAC} from \"../../../../../redux/state\";\r\n\r\ntype DialogsControlPropsType = {\r\n    dispatch: (action: ActionsType) => void\r\n    textForNewMessage: string\r\n}\r\n\r\nexport const DialogsControl: React.FC<DialogsControlPropsType> = (props) => {\r\n\r\n    const sendNewMessage = () => {\r\n        props.dispatch(sendMessageAC())\r\n        props.dispatch(updateMessageTextAC(''))\r\n    }\r\n\r\n    const changeMessageHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.dispatch(updateMessageTextAC(e.currentTarget.value))\r\n    }\r\n\r\n    return (\r\n        <div className={s.controlContainer}>\r\n            <textarea placeholder={'Say something'} onChange={changeMessageHandler} value={props.textForNewMessage}/>\r\n            <button onClick={sendNewMessage}>Add</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsControl} from \"./DialogsControl/DialogsControl\";\r\nimport {v1} from \"uuid\";\r\nimport {ActionsType} from \"../../../../redux/state\";\r\n\r\ntype DialogsContainerPropsType = {\r\n    dataForMessages: DialogsContainerDataForMessagesPropsType[]\r\n    dispatch: (action: ActionsType) => void\r\n    textForNewMessage: string\r\n}\r\n\r\ntype DialogsContainerDataForMessagesPropsType = {\r\n    id: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\nexport const DialogsContainer: React.FC<DialogsContainerPropsType> = (props) => {\r\n    const mappedMessages = props.dataForMessages.map((item) => <Message\r\n        key={v1()} from={item.from} message={item.message} id={item.id}/>)\r\n\r\n    return (\r\n        <div className={s.dialogsWrapper}>\r\n            <div className={s.dialogsContainer}>\r\n                {mappedMessages}\r\n            </div>\r\n            <DialogsControl\r\n                dispatch={props.dispatch}\r\n                textForNewMessage={props.textForNewMessage}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {FriendsContainer} from \"./FriendsContainer/FriendsContainer\";\r\nimport {DialogsContainer} from \"./DialogsContainer/DialogsContainer\";\r\nimport {ActionsType, DataForFriendsType, MessagesDataType} from \"../../../redux/state\";\r\n\r\ntype DialogsPropsType = {\r\n    dataForFriends: DataForFriendsType[]\r\n    dataForMessages: MessagesDataType[]\r\n    dispatch: (action: ActionsType) => void\r\n    textForNewMessage: string\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    return (\r\n        <main className={s.wrapper}>\r\n            <FriendsContainer dataForFriends={props.dataForFriends}/>\r\n            <DialogsContainer\r\n                dataForMessages={props.dataForMessages}\r\n                dispatch={props.dispatch}\r\n                textForNewMessage={props.textForNewMessage}\r\n            />\r\n        </main>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\ntype PostPropsType = {\r\n    src: string\r\n    alt: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nexport const Post: React.FC<PostPropsType> = (props) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n\r\n            <div className={s.avatar_container}>\r\n                <img src={props.src} alt={props.alt}/>\r\n            </div>\r\n\r\n            <div className={s.content_container}>\r\n                <div>{props.text}</div>\r\n                <div>Likes: {props.likes}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import s from \"../MyPosts.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {ActionsType, addPostAC, updatePostAC} from \"../../../../../redux/state\";\r\n\r\ntype PostControlPropsType = {\r\n    dispatch: (action: ActionsType) => void\r\n    textForNewPost: string\r\n}\r\n\r\nexport const PostsControl: React.FC<PostControlPropsType> = (props) => {\r\n\r\n    const addPostHandler = () => {\r\n        props.dispatch(addPostAC())\r\n        props.dispatch(updatePostAC(''))\r\n    }\r\n\r\n    const changePostHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.dispatch(updatePostAC(e.currentTarget.value))\r\n    }\r\n\r\n    return (\r\n        <div className={s.control_wrapper}>\r\n            <textarea placeholder={'Say something'} onChange={changePostHandler} value={props.textForNewPost}/>\r\n            <button onClick={addPostHandler}>Add</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {PostsControl} from \"./PostControl/PostControl\";\r\nimport {v1} from \"uuid\";\r\nimport {ActionsType, dataForMyPostsType} from \"../../../../redux/state\";\r\n\r\ntype MyPostsPropsType = {\r\n    dataForMyPosts: dataForMyPostsType[]\r\n    dispatch: (action: ActionsType) => void\r\n    textForNewPost: string\r\n}\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n    const mappedPosts = props.dataForMyPosts.map((item) => {\r\n        return <Post key={v1()}\r\n                     text={item.text}\r\n                     src={item.src}\r\n                     alt={item.alt}\r\n                     likes={item.likes}/>\r\n    })\r\n\r\n    return (\r\n        <section className={s.wrapper}>\r\n            <PostsControl dispatch={props.dispatch} textForNewPost={props.textForNewPost}/>\r\n            {mappedPosts}\r\n        </section>\r\n    )\r\n}","import s from \"../MyProfile.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MyAvatarPropsType = {\r\n    src: string\r\n    alt: string\r\n}\r\n\r\nexport const MyAvatar: React.FC<MyAvatarPropsType> = (props) => {\r\n    return (\r\n        <div className={s.avatar_wrapper}>\r\n            <img\r\n                src={props.src}\r\n                alt={props.alt}/>\r\n        </div>\r\n    )\r\n}","import s from \"../MyProfile.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MyInfoPropsType = {\r\n    title: string\r\n}\r\n\r\nexport const MyInfo: React.FC<MyInfoPropsType> = (props) => {\r\n    return (\r\n        <div className={s.info_wrapper}>\r\n            <h3>{props.title}</h3>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './MyProfile.module.css'\r\nimport {MyAvatar} from \"./MyAvatar/MyAvatar\";\r\nimport {MyInfo} from \"./MyInfo/MyInfo\";\r\nimport {dataForMyProfileType} from \"../../../../redux/state\";\r\n\r\ntype MyProfilePropsType = {\r\n    dataForMyProfile: dataForMyProfileType\r\n}\r\n\r\nexport const MyProfile: React.FC<MyProfilePropsType> = (props) => {\r\n    return (\r\n        <section className={s.wrapper}>\r\n            <MyAvatar src={props.dataForMyProfile.src} alt={props.dataForMyProfile.alt}/>\r\n            <MyInfo title={props.dataForMyProfile.title}/>\r\n        </section>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {MyProfile} from \"./MyProfile/MyProfile\";\r\nimport {ActionsType, dataForMyPostsType, dataForMyProfileType} from \"../../../redux/state\";\r\n\r\ntype ProfilePropsType = {\r\n    dataForMyProfile: dataForMyProfileType\r\n    dataForMyPosts: dataForMyPostsType[]\r\n    dispatch: (action: ActionsType) => void\r\n    textForNewPost: string\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = (props) => {\r\n    return (\r\n        <main className={s.wrapper}>\r\n            <MyProfile dataForMyProfile={props.dataForMyProfile}/>\r\n            <MyPosts\r\n                dataForMyPosts={props.dataForMyPosts}\r\n                dispatch={props.dispatch}\r\n                textForNewPost={props.textForNewPost}\r\n            />\r\n        </main>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const LogoIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n             stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\r\n             className=\"feather feather-share-2\">\r\n            <circle cx=\"18\" cy=\"5\" r=\"3\"/>\r\n            <circle cx=\"6\" cy=\"12\" r=\"3\"/>\r\n            <circle cx=\"18\" cy=\"19\" r=\"3\"/>\r\n            <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"/>\r\n            <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"/>\r\n        </svg>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.css'\r\nimport {LogoIcon} from \"./LogoIcon\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.container}>\r\n                <NavLink to={'/'} className={s.logoWrapper}><LogoIcon/><span>Social Network</span></NavLink>\r\n                <img\r\n                    src=\"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\"\r\n                    alt=\"mini-profile\"\r\n                    className={s.miniProfileImg}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport {Sidebar} from \"./components/Content/Sidebar/Sidebar\";\nimport {Dialogs} from \"./components/Content/Dialogs/Dialogs\";\nimport {Profile} from \"./components/Content/Profile/Profile\";\nimport {Header} from \"./components/Content/Header/Header\";\nimport {ActionsType, StateType} from \"./redux/state\";\n\ntype AppPropsType = {\n    state: StateType\n    dispatch: (action: ActionsType) => void\n}\n\nconst PATH = {\n    PROFILE: '/profile',\n    DIALOGS: '/dialogs',\n}\n\nexport const App: React.FC<AppPropsType> = (props) => {\n    return (\n        <div className={'App'}>\n            <Header/>\n            <div className={'contentWrapper'}>\n                <Sidebar dataForSidebar={props.state.sidebar.dataForSidebar}/>\n                <Switch>\n                    <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n\n                    <Route path={PATH.DIALOGS}\n                           render={() => <Dialogs\n                               dataForFriends={props.state.dialogs.dataForFriends}\n                               dataForMessages={props.state.dialogs.dataForMessages}\n                               textForNewMessage={props.state.dialogs.newMessage.message}\n                               dispatch={props.dispatch}/>}\n                    />\n\n                    <Route path={PATH.PROFILE}\n                           render={() => <Profile\n                               dataForMyProfile={props.state.profile.dataForMyProfile}\n                               dataForMyPosts={props.state.profile.dataForMyPosts}\n                               textForNewPost={props.state.profile.newPost.text}\n                               dispatch={props.dispatch}/>}\n                    />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals'\nimport './index.css';\nimport {store} from \"./redux/state\";\nimport {App} from \"./App\";\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <HashRouter>\n                <App state={store._getState()} dispatch={store.dispatch.bind(store)}/>\n            </HashRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree()\nstore._subscribe(rerenderEntireTree)\nreportWebVitals()","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__OXmKF\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__dCwpn\",\"dialogsContainer\":\"Dialogs_dialogsContainer__CDolV\",\"friendsContainer\":\"Dialogs_friendsContainer__YeVKw\",\"active\":\"Dialogs_active__3y7fC\",\"messageWrapper\":\"Dialogs_messageWrapper__IjTOH\",\"avatar\":\"Dialogs_avatar__2vOPD\",\"controlContainer\":\"Dialogs_controlContainer__1HQ5X\"};"],"sourceRoot":""}