{"version":3,"sources":["components/Content/Users/Users.module.css","components/UI/Pagination/Pagination.module.css","components/Content/Users/User/User.tsx","components/UI/Pagination/Pagination.tsx","components/Content/Users/Users.tsx","components/Content/Users/UsersContainer.tsx"],"names":["module","exports","User","React","memo","props","name","avatarSmall","id","followed","status","followLoader","followUser","isAuth","onFollowButtonClickHandler","useCallback","className","s","userContainer","avatarAndFollowContainer","to","PATH","PROFILE","avatar","src","alt","onClick","disabled","includes","userInfoContainer","Pagination","totalItemsCount","pageSize","currentPage","portionSize","totalPagesCount","useMemo","pagesCount","Math","ceil","pagesArray","i","push","totalPortionsCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","pagesToRender","filter","p","map","paginationContainer","Users","usersData","totalUsersCount","changeCurrentPage","mappedUsers","user","photos","small","wrapper","UsersContainer","dispatch","useDispatch","useSelector","state","users","isLoading","auth","followUserHandler","changeCurrentPageHandler","page","useEffect","requestUsers","Loader"],"mappings":"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","file":"static/js/5.8b3d95a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__ZCzzQ\",\"userContainer\":\"Users_userContainer__2c6Ho\",\"avatarAndFollowContainer\":\"Users_avatarAndFollowContainer__3-XAj\",\"avatar\":\"Users_avatar__c2jXs\",\"userInfoContainer\":\"Users_userInfoContainer__2TtV2\",\"name\":\"Users_name__2qyGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationContainer\":\"Pagination_paginationContainer__Z_ap4\",\"currentPage\":\"Pagination_currentPage__j1jM5\"};","import React, {useCallback} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport s from '../Users.module.css'\r\nimport {PATH} from '../../../../types/common-types'\r\n\r\ntype UserPropsType = {\r\n    name: string\r\n    avatarSmall: string\r\n    id: string\r\n    followed: boolean\r\n    status: string\r\n    followLoader: string[]\r\n    followUser: (id: string, followed: boolean) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = React.memo(props => {\r\n    const {name, avatarSmall, id, followed, status, followLoader, followUser, isAuth} = props\r\n\r\n    const onFollowButtonClickHandler = useCallback(() => followUser(id, followed), [followUser, id, followed])\r\n\r\n    return (\r\n        <div key={props.name} className={s.userContainer}>\r\n            <div className={s.avatarAndFollowContainer}>\r\n                <Link to={`${PATH.PROFILE}/${id}`}>\r\n                    <div className={s.avatar}>\r\n                        <img\r\n                            src={avatarSmall !== null\r\n                                ? avatarSmall\r\n                                : 'https://pbs.twimg.com/profile_images/1368235617243426820/L0m5gTDB.jpg'}\r\n                            alt={name}/>\r\n                    </div>\r\n                </Link>\r\n\r\n                {!isAuth\r\n                    ? <button disabled>Need to login</button>\r\n                    : <button onClick={onFollowButtonClickHandler}\r\n                              disabled={followLoader.includes(id)}>\r\n                        {followed ? 'Unfollow' : 'Follow'}\r\n                    </button>}\r\n\r\n            </div>\r\n            <div className={s.userInfoContainer}>\r\n                <div className={s.name}>{name}</div>\r\n                <div>{followed ? 'Вы уже дружите' : 'Ждет дружбы'}</div>\r\n                <div>{status !== null ? status : 'Место для вашего статуса'}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useMemo, useState} from 'react'\r\nimport s from './Pagination.module.css'\r\n\r\ntype PaginationPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    portionSize?: number\r\n    onClick: (page: number) => void\r\n}\r\n\r\nexport const Pagination: React.FC<PaginationPropsType> = React.memo(props => {\r\n    const {totalItemsCount, pageSize, currentPage, onClick, portionSize = 10} = props\r\n\r\n    const totalPagesCount = useMemo(() => {\r\n        let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n        let pagesArray: number[] = []\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pagesArray.push(i)\r\n        }\r\n        return pagesArray\r\n    }, [totalItemsCount, pageSize])\r\n\r\n    const totalPortionsCount = Math.ceil(Math.ceil(totalItemsCount / pageSize) / portionSize)\r\n\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n\r\n    const leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionNumber = portionNumber * portionSize\r\n\r\n\r\n    const prevPageHandler = () => setPortionNumber(portionNumber - 1)\r\n    const nextPageHandler = () => setPortionNumber(portionNumber + 1)\r\n\r\n    const pagesToRender = totalPagesCount\r\n        .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n        .map(p => <span key={p}\r\n                        className={currentPage === p ? s.currentPage : ''}\r\n                        onClick={() => onClick(p)}>\r\n            {p}\r\n        </span>)\r\n\r\n    return (\r\n        <div className={s.paginationContainer}>\r\n            <button onClick={prevPageHandler} disabled={portionNumber <= 1}>Prev</button>\r\n            {pagesToRender}\r\n            <button onClick={nextPageHandler} disabled={totalPortionsCount <= portionNumber}>Next</button>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport s from './Users.module.css'\r\nimport {User} from './User/User'\r\nimport {UserType} from '../../../types/users-types'\r\nimport {Pagination} from '../../UI/Pagination/Pagination'\r\n\r\ntype UsersPropsType = {\r\n    usersData: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    changeCurrentPage: (page: number) => void\r\n    followLoader: string[]\r\n    followUser: (id: string, followed: boolean) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const Users: React.FC<UsersPropsType> = React.memo(props => {\r\n    const {\r\n        usersData,\r\n        pageSize,\r\n        totalUsersCount,\r\n        currentPage,\r\n        changeCurrentPage,\r\n        followLoader,\r\n        followUser,\r\n        isAuth\r\n    } = props\r\n\r\n    const mappedUsers = usersData.map(user => <User key={user.name + user.id}\r\n                                                    name={user.name}\r\n                                                    avatarSmall={user.photos.small}\r\n                                                    id={user.id}\r\n                                                    followed={user.followed}\r\n                                                    status={user.status}\r\n                                                    followLoader={followLoader}\r\n                                                    followUser={followUser}\r\n                                                    isAuth={isAuth}/>)\r\n\r\n    return (\r\n        <main className={s.wrapper}>\r\n            <Pagination totalItemsCount={totalUsersCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        portionSize={20}\r\n                        onClick={changeCurrentPage}/>\r\n            {mappedUsers}\r\n        </main>\r\n    )\r\n})","import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {StateType} from '../../../types/common-types'\r\nimport {requestUsers, changeCurrentPage, followUser} from '../../../redux/actions/users-actions'\r\nimport {Users} from './Users'\r\nimport {Loader} from '../../UI/Loader/Loader'\r\nimport {UsersType} from '../../../types/users-types'\r\nimport {AuthType} from '../../../types/auth-types'\r\n\r\nconst UsersContainer: React.FC = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        usersData,\r\n        pageSize,\r\n        totalUsersCount,\r\n        currentPage,\r\n        isLoading,\r\n        followLoader\r\n    } = useSelector<StateType, UsersType>(state => state.users)\r\n\r\n    const {isAuth} = useSelector<StateType, AuthType>(state => state.auth)\r\n\r\n    const followUserHandler = useCallback((id: string, followed: boolean) => {\r\n        dispatch(followUser(id, followed))\r\n    }, [dispatch])\r\n\r\n    const changeCurrentPageHandler = useCallback((page: number) => {\r\n        dispatch(changeCurrentPage(page, pageSize))\r\n    }, [dispatch, pageSize])\r\n\r\n    useEffect(() => {\r\n        dispatch(requestUsers(currentPage, pageSize))\r\n    }, [dispatch, currentPage, pageSize])\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Loader/>}\r\n            <Users usersData={usersData}\r\n                   pageSize={pageSize}\r\n                   totalUsersCount={totalUsersCount}\r\n                   currentPage={currentPage}\r\n                   changeCurrentPage={changeCurrentPageHandler}\r\n                   followLoader={followLoader}\r\n                   followUser={followUserHandler}\r\n                   isAuth={isAuth}/>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default UsersContainer"],"sourceRoot":""}