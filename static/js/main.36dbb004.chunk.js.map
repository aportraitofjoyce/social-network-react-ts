{"version":3,"sources":["api/axios-instance.ts","components/UI/Form/FormCheckbox/FormCheckbox.tsx","components/Content/Login/Login.module.css","redux/actions/auth-actions.ts","redux/reducers/profile-reducer.ts","redux/reducers/dialogs-reducer.ts","redux/reducers/sidebar-reducer.ts","redux/reducers/users-reducer.ts","api/auth-api.ts","api/security-api.ts","redux/actions/app-actions.ts","redux/reducers/auth-reducer.ts","redux/reducers/app-reducer.ts","redux/reducers/root-reducer.ts","redux/store.ts","components/Content/Login/LoginForm/LoginForm.tsx","components/Content/Login/Login.tsx","components/Content/Login/LoginContainer.tsx","components/Content/Header/LogoIcon.tsx","components/Content/Header/Header.tsx","components/Content/Header/HeaderContainer.tsx","components/Content/Sidebar/SidebarItem/SidebarItem.tsx","components/Content/Sidebar/Sidebar.tsx","components/Content/Sidebar/SidebarContainer.tsx","components/Content/ErrorPage/Error404.tsx","App.tsx","index.tsx","components/UI/Form/Form.module.css","redux/actions/users-actions.ts","api/users-api.ts","api/follow-api.ts","components/Content/Sidebar/Sidebar.module.css","redux/actions/profile-actions.ts","api/profile-api.ts","components/Content/ErrorPage/Error404.module.css","components/UI/Form/FormInput/FormInput.tsx","components/Content/Header/Header.module.css","components/UI/Loader/Loader.tsx","components/UI/Loader/Loader.module.css","redux/actions/dialogs-actions.ts","types/common-types.ts"],"names":["axiosInstance","axios","create","baseURL","withCredentials","headers","FormCheckbox","React","memo","children","props","useField","type","field","meta","className","s","formFieldCheckbox","touched","error","errorMessage","module","exports","AUTH_ACTIONS_TYPE","initialState","userProfile","userStatus","dataForMyPosts","src","alt","text","likes","newPost","dataForFriends","id","v1","name","dataForMessages","from","message","newMessage","dataForSidebar","link","PATH","PROFILE","DIALOGS","USERS","usersData","pageSize","totalUsersCount","currentPage","isLoading","followLoader","authAPI","get","email","password","rememberMe","captcha","post","delete","securityAPI","APP_ACTIONS_TYPE","setAuthUserData","login","SET_USER_DATA","payload","checkAuth","dispatch","a","response","data","resultCode","logout","LOGOUT","alert","getCaptchaURL","url","SET_CAPTCHA","isAuth","captchaURL","successInitialization","status","SUCCESS_INITIALIZATION","initialized","rootReducer","combineReducers","profile","state","action","PROFILE_ACTIONS_TYPES","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","SET_USER_AVATAR","photos","userAvatar","dialogs","DIALOGS_ACTIONS_TYPES","SEND_MESSAGE","sidebar","users","USERS_ACTIONS_TYPES","FOLLOW","map","user","followed","SET_USERS","SET_CURRENT_PAGE","page","SET_TOTAL_USERS_COUNT","total","TOGGLE_LOADER","TOGGLE_FOLLOW_LOADER","filter","u","auth","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","LoginForm","onSubmit","initialValues","validationSchema","Yup","required","max","values","setSubmitting","resetForm","setStatus","isSubmitting","FormInput","label","placeholder","style","fontSize","fontWeight","disabled","Login","fromWrapper","onClick","LoginContainer","useDispatch","useSelector","loginOnSite","useCallback","messages","logoutFromSite","to","LogoIcon","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","Header","wrapper","container","ROOT","logoWrapper","LOGIN","HeaderContainer","logoutHandler","SidebarItem","activeClassName","active","Sidebar","mappedSidebarItems","item","SidebarContainer","Error404","errorPageWrapper","error404","errorImg","pageNotFound","ProfileContainer","lazy","DialogsContainer","UsersContainer","App","useEffect","fallback","Loader","path","exact","PROFILE_WITH_ID","ERROR","ReactDOM","render","StrictMode","document","getElementById","usersAPI","then","followAPI","responseCode","follow","setUsers","setCurrentPage","toggleLoader","toggleFollowLoader","requestUsers","items","totalCount","changeCurrentPage","followUser","profileAPI","put","avatarFile","formData","FormData","append","description","addPost","setUserStatus","getUserProfile","getUserStatus","updateUserStatus","updateUserAvatar","updateUserDescription","userDescription","getState","formField","htmlFor","errorBorder","loadingWrapper","loading","sendMessage"],"mappings":"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","file":"static/js/main.36dbb004.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const axiosInstance = axios.create(\r\n    {\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n        withCredentials: true,\r\n        headers: {'API-KEY': '6f228861-1f0c-43fb-a420-fcf28121de49'},\r\n    }\r\n)","import React from 'react'\r\nimport {useField} from 'formik'\r\nimport s from '../Form.module.css'\r\n\r\ntype FormCheckboxPropsType = {\r\n    name: string\r\n}\r\n\r\nexport const FormCheckbox: React.FC<FormCheckboxPropsType> = React.memo(({children, ...props}) => {\r\n    const [field, meta] = useField({...props, type: 'checkbox'})\r\n\r\n    return (\r\n        <div className={s.formFieldCheckbox}>\r\n            <label>\r\n                <input type='checkbox' {...field} {...props}/>\r\n                {children}\r\n            </label>\r\n            {meta.touched && meta.error && <div className={s.errorMessage}>{meta.error}</div>}\r\n        </div>\r\n    )\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fromWrapper\":\"Login_fromWrapper__27jQY\"};","import {authAPI} from '../../api/auth-api'\r\nimport {ThunkType} from '../../types/common-types'\r\nimport {securityAPI} from '../../api/security-api'\r\n\r\nexport enum AUTH_ACTIONS_TYPE {\r\n    SET_USER_DATA = 'SET_USER_DATA',\r\n    LOGOUT = 'LOGOUT',\r\n    SET_CAPTCHA = 'SET_CAPTCHA'\r\n}\r\n\r\nexport const setAuthUserData = (id: number, login: string, email: string) => ({\r\n    type: AUTH_ACTIONS_TYPE.SET_USER_DATA,\r\n    payload: {id, login, email}\r\n}) as const\r\n\r\nexport const changeAuthWhenLogout = () => ({\r\n    type: AUTH_ACTIONS_TYPE.LOGOUT\r\n}) as const\r\n\r\nexport const setCaptcha = (captcha: string) => ({\r\n    type: AUTH_ACTIONS_TYPE.SET_CAPTCHA,\r\n    payload: {captcha}\r\n}) as const\r\n\r\n// Thunk\r\nexport const checkAuth = () => async (dispatch: ThunkType) => {\r\n    const response = await authAPI.checkAuth()\r\n    const {id, login, email} = response.data.data\r\n    response.data.resultCode === 0 && dispatch(setAuthUserData(id, login, email))\r\n    // return response\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, setStatus: any, captcha: string) => async (dispatch: ThunkType) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        await dispatch(checkAuth())\r\n    } else if (response.data.resultCode === 10) {\r\n        setStatus(response.data.messages)\r\n        await dispatch(getCaptchaURL())\r\n    } else {\r\n        setStatus(response.data.messages)\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: ThunkType) => {\r\n    try {\r\n        await authAPI.logout()\r\n        dispatch(changeAuthWhenLogout())\r\n    } catch (e) {\r\n        alert(e)\r\n    }\r\n}\r\n\r\nexport const getCaptchaURL = () => async (dispatch: ThunkType) => {\r\n    const response = await securityAPI.getCaptchaURL()\r\n    dispatch(setCaptcha(response.data.url))\r\n}","import {ActionsType} from '../../types/common-types'\r\nimport {ProfileType} from '../../types/profile-types'\r\nimport {PROFILE_ACTIONS_TYPES} from '../actions/profile-actions'\r\n\r\nconst initialState: ProfileType = {\r\n    userProfile: null,\r\n    userStatus: '',\r\n\r\n    dataForMyPosts: [\r\n        {\r\n            src: 'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album',\r\n            alt: 'My profile',\r\n            text: 'My first post',\r\n            likes: 10\r\n        },\r\n        {\r\n            src: 'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album',\r\n            alt: 'My profile',\r\n            text: 'My second post',\r\n            likes: 5\r\n        },\r\n        {\r\n            src: 'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album',\r\n            alt: 'My profile',\r\n            text: 'My third post',\r\n            likes: 43\r\n        },\r\n        {\r\n            src: 'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album',\r\n            alt: 'My profile',\r\n            text: 'My fourth post',\r\n            likes: 0\r\n        }\r\n    ],\r\n\r\n    newPost: {\r\n        src: 'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album',\r\n        alt: 'My profile',\r\n        text: '',\r\n        likes: 0\r\n    }\r\n}\r\n\r\nexport const profileReducer = (state: ProfileType = initialState, action: ActionsType): ProfileType => {\r\n    switch (action.type) {\r\n        case PROFILE_ACTIONS_TYPES.ADD_POST:\r\n            return {\r\n                ...state,\r\n                dataForMyPosts: [{\r\n                    ...state.newPost,\r\n                    text: action.payload.text\r\n                },\r\n                    ...state.dataForMyPosts],\r\n            }\r\n\r\n        case PROFILE_ACTIONS_TYPES.SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                userProfile: action.payload.userProfile,\r\n            }\r\n\r\n        case PROFILE_ACTIONS_TYPES.SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                userStatus: action.payload.userStatus\r\n            }\r\n\r\n        case PROFILE_ACTIONS_TYPES.SET_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                userProfile: {\r\n                    ...state.userProfile,\r\n                    photos: action.payload.userAvatar\r\n                }\r\n            } as ProfileType\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {v1} from 'uuid'\r\nimport {ActionsType} from '../../types/common-types'\r\nimport {DialogsType} from '../../types/dialogs-types'\r\nimport {DIALOGS_ACTIONS_TYPES} from '../actions/dialogs-actions'\r\n\r\nconst initialState: DialogsType = {\r\n    dataForFriends: [\r\n        {id: v1(), name: 'Me'},\r\n        {id: v1(), name: 'Maxim'},\r\n        {id: v1(), name: 'Andrei'},\r\n    ],\r\n\r\n    dataForMessages: [\r\n        {id: v1(), from: 'Me', message: 'Привет, как дела?'},\r\n        {id: v1(), from: 'Andrei', message: 'Ку, отлично.'},\r\n        {id: v1(), from: 'Me', message: 'Посмотрим вместе аниме?'},\r\n        {id: v1(), from: 'Andrei', message: 'С удовольствием, прямо сейчас?'},\r\n        {id: v1(), from: 'Me', message: 'Ага!'}\r\n    ],\r\n    newMessage: {\r\n        id: v1(),\r\n        from: 'Me',\r\n        message: ''\r\n    }\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsType = initialState, action: ActionsType): DialogsType => {\r\n    switch (action.type) {\r\n        case DIALOGS_ACTIONS_TYPES.SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                dataForMessages: [...state.dataForMessages, {...state.newMessage, message: action.payload.text}],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {ActionsType, PATH} from '../../types/common-types'\r\nimport {SidebarType} from '../../types/sidebar-types'\r\n\r\nconst initialState: SidebarType = {\r\n    dataForSidebar: [\r\n        {name: 'Profile', link: PATH.PROFILE},\r\n        {name: 'Dialogs', link: PATH.DIALOGS},\r\n        {name: 'Users', link: PATH.USERS}\r\n    ]\r\n}\r\n\r\nexport const sidebarReducer = (state: SidebarType = initialState, action: ActionsType): SidebarType => {\r\n    return state\r\n}\r\n","import {ActionsType} from '../../types/common-types'\r\nimport {UsersType} from '../../types/users-types'\r\nimport {USERS_ACTIONS_TYPES} from '../actions/users-actions'\r\n\r\nconst initialState: UsersType = {\r\n    usersData: [],\r\n    pageSize: 25,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    followLoader: []\r\n}\r\n\r\nexport const usersReducer = (state: UsersType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case USERS_ACTIONS_TYPES.FOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map((user) => user.id === action.payload.id\r\n                    ? {...user, followed: !user.followed}\r\n                    : user)\r\n            }\r\n\r\n        case USERS_ACTIONS_TYPES.SET_USERS:\r\n            return {...state, usersData: [...action.payload.users]}\r\n\r\n        case USERS_ACTIONS_TYPES.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.payload.page}\r\n\r\n        case USERS_ACTIONS_TYPES.SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.payload.total}\r\n\r\n        case USERS_ACTIONS_TYPES.TOGGLE_LOADER:\r\n            return {...state, isLoading: action.payload.status}\r\n\r\n        case USERS_ACTIONS_TYPES.TOGGLE_FOLLOW_LOADER:\r\n            return {\r\n                ...state,\r\n                followLoader: action.payload.status\r\n                    ? [...state.followLoader, action.payload.id]\r\n                    : state.followLoader.filter(u => u !== action.payload.id)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {axiosInstance} from './axios-instance'\r\n\r\nexport const authAPI = {\r\n    checkAuth: () => axiosInstance.get('auth/me'),\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => axiosInstance.post('auth/login', {\r\n        email,\r\n        password,\r\n        rememberMe,\r\n        captcha\r\n    }),\r\n    logout: () => axiosInstance.delete('auth/login')\r\n}","import {axiosInstance} from './axios-instance'\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL: () => axiosInstance.get('security/get-captcha-url')\r\n}","import {ThunkType} from '../../types/common-types'\r\nimport {checkAuth} from './auth-actions'\r\n\r\nexport enum APP_ACTIONS_TYPE {\r\n    SUCCESS_INITIALIZATION = 'SUCCESS_INITIALIZATION'\r\n}\r\n\r\nexport const successInitialization = (status: boolean) => ({\r\n    type: APP_ACTIONS_TYPE.SUCCESS_INITIALIZATION, payload: {status}\r\n}) as const\r\n\r\nexport const initialization = () => async (dispatch: ThunkType) => {\r\n    dispatch(successInitialization(false))\r\n    await dispatch(checkAuth())\r\n    dispatch(successInitialization(true))\r\n}","import {ActionsType} from '../../types/common-types'\r\nimport {AuthType} from '../../types/auth-types'\r\nimport {AUTH_ACTIONS_TYPE} from '../actions/auth-actions'\r\n\r\nconst initialState: AuthType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaURL: ''\r\n}\r\n\r\nexport const authReducer = (state: AuthType = initialState, action: ActionsType): AuthType => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPE.SET_USER_DATA:\r\n            return {...state, ...action.payload, isAuth: true}\r\n\r\n        case AUTH_ACTIONS_TYPE.LOGOUT:\r\n            return {...state, isAuth: false}\r\n\r\n        case AUTH_ACTIONS_TYPE.SET_CAPTCHA:\r\n            return {...state, captchaURL: action.payload.captcha}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {ActionsType} from '../../types/common-types'\r\nimport {APP_ACTIONS_TYPE} from '../actions/app-actions'\r\n\r\ntype InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case APP_ACTIONS_TYPE.SUCCESS_INITIALIZATION:\r\n            return {\r\n                ...state,\r\n                initialized: action.payload.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport {profileReducer} from './profile-reducer'\r\nimport {dialogsReducer} from './dialogs-reducer'\r\nimport {sidebarReducer} from './sidebar-reducer'\r\nimport {usersReducer} from './users-reducer'\r\nimport {authReducer} from './auth-reducer'\r\nimport {appReducer} from './app-reducer'\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        profile: profileReducer,\r\n        dialogs: dialogsReducer,\r\n        sidebar: sidebarReducer,\r\n        users: usersReducer,\r\n        auth: authReducer,\r\n        app: appReducer\r\n    }\r\n)","import {applyMiddleware, compose, createStore} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {rootReducer} from './reducers/root-reducer'\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react'\r\nimport {Form, Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport {FormInput} from '../../../UI/Form/FormInput/FormInput'\r\nimport {FormCheckbox} from '../../../UI/Form/FormCheckbox/FormCheckbox'\r\n\r\ntype LoginFormPropsType = {\r\n    onSubmit: (email: string, password: string, rememberMe: boolean, setStatus: any, captcha: string) => void\r\n    captchaURL: string\r\n}\r\n\r\nexport const LoginForm: React.FC<LoginFormPropsType> = React.memo(props => {\r\n    const {onSubmit, captchaURL} = props\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: '',\r\n                rememberMe: false,\r\n                captcha: ''\r\n            }}\r\n\r\n            validationSchema={Yup.object({\r\n                email: Yup.string()\r\n                    .email('Invalid email address')\r\n                    .required('Required'),\r\n                password: Yup.string()\r\n                    .max(20, 'Must be 20 characters or less')\r\n                    .required('Required'),\r\n                /*captcha: Yup.string()\r\n                    .required('Required'),*/\r\n            })}\r\n\r\n            onSubmit={async (values, {setSubmitting, resetForm, setStatus}) => {\r\n                await setSubmitting(true)\r\n                // await resetForm()\r\n                await onSubmit(values.email, values.password, values.rememberMe, setStatus, values.captcha)\r\n            }}>\r\n\r\n            {({isSubmitting, status}) => <Form className={'formikFormContainer'}>\r\n                <FormInput\r\n                    label='Email'\r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='Type your email...'/>\r\n\r\n                <FormInput\r\n                    label='Password'\r\n                    name='password'\r\n                    type='password'\r\n                    placeholder='Type your password...'/>\r\n\r\n                <FormCheckbox name='rememberMe'>Remember Me</FormCheckbox>\r\n\r\n                <span style={{fontSize: 24, fontWeight: 'bold'}}>{status}</span>\r\n\r\n                {captchaURL &&\r\n                <div>\r\n                    <img src={captchaURL} alt={captchaURL}/>\r\n                    <FormInput\r\n                        label='Captcha'\r\n                        name='captcha'\r\n                        type='text'\r\n                        placeholder='Type symbols...'/>\r\n                </div>}\r\n\r\n                <button type='submit' disabled={isSubmitting}>Submit</button>\r\n            </Form>}\r\n        </Formik>\r\n    )\r\n})","import React from 'react'\r\nimport s from './Login.module.css'\r\nimport {LoginForm} from './LoginForm/LoginForm'\r\n\r\ntype LoginPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, setStatus: any, captcha: string) => void\r\n    logout: () => void\r\n    captchaURL: string\r\n}\r\n\r\nexport const Login: React.FC<LoginPropsType> = React.memo(props => {\r\n    const {login, logout, captchaURL} = props\r\n\r\n    return (\r\n        <div className={s.fromWrapper}>\r\n            <h1>Login page</h1>\r\n            <LoginForm onSubmit={login} captchaURL={captchaURL}/>\r\n            <button onClick={logout}>Logout</button>\r\n        </div>\r\n    )\r\n})","import React, {useCallback} from 'react'\r\nimport {Login} from './Login'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {login, logout} from '../../../redux/actions/auth-actions'\r\nimport {PATH, StateType} from '../../../types/common-types'\r\nimport {AuthType} from '../../../types/auth-types'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport const LoginContainer: React.FC = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n    const {isAuth, captchaURL} = useSelector<StateType, AuthType>(state => state.auth)\r\n\r\n    const loginOnSite = useCallback((email: string, password: string, rememberMe: boolean, setStatus: any, captcha: string) => {\r\n        dispatch(login(email, password, rememberMe, setStatus, captcha))\r\n    }, [dispatch])\r\n\r\n    const logoutFromSite = useCallback(() => dispatch(logout()), [dispatch])\r\n\r\n    return !isAuth\r\n        ? <Login login={loginOnSite} logout={logoutFromSite} captchaURL={captchaURL}/>\r\n        : <Redirect to={PATH.PROFILE}/>\r\n})","import React from 'react'\r\n\r\nexport const LogoIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n             stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\r\n             className=\"feather feather-share-2\">\r\n            <circle cx=\"18\" cy=\"5\" r=\"3\"/>\r\n            <circle cx=\"6\" cy=\"12\" r=\"3\"/>\r\n            <circle cx=\"18\" cy=\"19\" r=\"3\"/>\r\n            <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"/>\r\n            <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"/>\r\n        </svg>\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport {LogoIcon} from './LogoIcon'\r\nimport {PATH} from '../../../types/common-types'\r\nimport {AuthType} from '../../../types/auth-types'\r\n\r\nexport type HeaderPropsType = {\r\n    auth: AuthType\r\n    logout: () => void\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = React.memo((props) => {\r\n    const {auth, logout} = props\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.container}>\r\n                <Link to={PATH.ROOT} className={s.logoWrapper}>\r\n                    <LogoIcon/>\r\n                    <span>Social Network</span>\r\n                </Link>\r\n\r\n                {auth.isAuth\r\n                    ? <div>\r\n                        <span>{auth.login}</span>\r\n                        <button onClick={logout}>Logout</button>\r\n                    </div>\r\n                    : <Link to={PATH.LOGIN}>Login</Link>}\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useCallback} from 'react'\r\nimport {Header} from './Header'\r\nimport {StateType} from '../../../types/common-types'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {logout} from '../../../redux/actions/auth-actions'\r\nimport {AuthType} from '../../../types/auth-types'\r\n\r\nexport const HeaderContainer: React.FC = React.memo(() => {\r\n    const auth = useSelector<StateType, AuthType>(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = useCallback(() => dispatch(logout()), [dispatch])\r\n\r\n    return <Header auth={auth} logout={logoutHandler}/>\r\n})","import React from 'react'\r\nimport s from '../Sidebar.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\ntype SidebarItemPropsType = {\r\n    link: string\r\n    name: string\r\n}\r\n\r\nexport const SidebarItem: React.FC<SidebarItemPropsType> = React.memo(props => {\r\n    return <NavLink to={props.link}\r\n                    activeClassName={s.active}>\r\n        {props.name}\r\n    </NavLink>\r\n})","import React from 'react'\r\nimport s from './Sidebar.module.css'\r\nimport {SidebarItem} from './SidebarItem/SidebarItem'\r\nimport {v1} from 'uuid'\r\nimport {dataForSidebarType} from '../../../types/sidebar-types'\r\n\r\ntype SidebarPropsType = {\r\n    dataForSidebar: dataForSidebarType[]\r\n}\r\n\r\nexport const Sidebar: React.FC<SidebarPropsType> = React.memo(props => {\r\n    const {dataForSidebar} = props\r\n\r\n    const mappedSidebarItems = dataForSidebar.map(item => <SidebarItem key={v1()}\r\n                                                                       name={item.name}\r\n                                                                       link={item.link}/>)\r\n\r\n    return (\r\n        <aside className={s.wrapper}>\r\n            <nav className={s.container}>\r\n                {mappedSidebarItems}\r\n            </nav>\r\n        </aside>\r\n    )\r\n})\r\n\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Sidebar} from './Sidebar'\r\nimport {StateType} from '../../../types/common-types'\r\nimport {SidebarType} from '../../../types/sidebar-types'\r\n\r\nexport const SidebarContainer: React.FC = React.memo(() => {\r\n    const {dataForSidebar} = useSelector<StateType, SidebarType>(state => state.sidebar)\r\n\r\n    return <Sidebar dataForSidebar={dataForSidebar}/>\r\n})","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport const Error404: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.errorPageWrapper}>\r\n            <div className={s.error404}>404</div>\r\n            <img\r\n                src='https://cdn.statically.io/img/i.pinimg.com/originals/ef/0b/58/ef0b58bc4be3f9622c10a73fe685c57d.jpg'\r\n                alt=''\r\n                className={s.errorImg}/>\r\n\r\n            <div className={s.pageNotFound}>\r\n                Page not found!\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {lazy, Suspense, useEffect} from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport './index.css'\nimport {PATH, StateType} from './types/common-types'\nimport {LoginContainer} from './components/Content/Login/LoginContainer'\nimport {HeaderContainer} from './components/Content/Header/HeaderContainer'\nimport {SidebarContainer} from './components/Content/Sidebar/SidebarContainer'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {initialization} from './redux/actions/app-actions'\nimport {Loader} from './components/UI/Loader/Loader'\nimport {Error404} from './components/Content/ErrorPage/Error404'\n\nconst ProfileContainer = lazy(() => import('./components/Content/Profile/ProfileContainer'))\nconst DialogsContainer = lazy(() => import('./components/Content/Dialogs/DialogsContainer'))\nconst UsersContainer = lazy(() => import('./components/Content/Users/UsersContainer'))\n\nexport const App = React.memo(() => {\n    const dispatch = useDispatch()\n    const initialized = useSelector<StateType>(state => state.app.initialized)\n\n    useEffect(() => {\n        dispatch(initialization())\n    }, [dispatch])\n\n    if (!initialized) return <Loader/>\n\n    return (\n        <div className={'App'}>\n            <HeaderContainer/>\n\n            <div className={'ContentWrapper'}>\n                <SidebarContainer/>\n\n                <Suspense fallback={<Loader/>}>\n                    <Switch>\n                        <Route path={PATH.ROOT} exact>\n                            <Redirect to={PATH.PROFILE}/>\n                        </Route>\n\n                        <Route path={PATH.PROFILE_WITH_ID}>\n                            <ProfileContainer/>\n                        </Route>\n\n                        <Route path={PATH.DIALOGS}>\n                            <DialogsContainer/>\n                        </Route>\n\n                        <Route path={PATH.USERS}>\n                            <UsersContainer/>\n                        </Route>\n\n                        <Route path={PATH.LOGIN}>\n                            <LoginContainer/>\n                        </Route>\n\n                        <Route path={PATH.ERROR}>\n                            <Error404/>\n                        </Route>\n                    </Switch>\n                </Suspense>\n            </div>\n        </div>\n    )\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter, HashRouter} from 'react-router-dom'\nimport './index.css'\nimport {store} from './redux/store'\nimport {App} from './App'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>, document.getElementById('root'))\n\n// @ts-ignore\nwindow.store = store","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formField\":\"Form_formField__1sCZI\",\"formFieldCheckbox\":\"Form_formFieldCheckbox__3kjMq\",\"errorMessage\":\"Form_errorMessage__1Y2D8\",\"errorBorder\":\"Form_errorBorder__6-Uxv\"};","import {UserType} from '../../types/users-types'\r\nimport {usersAPI} from '../../api/users-api'\r\nimport {ThunkType} from '../../types/common-types'\r\nimport {followAPI} from '../../api/follow-api'\r\n\r\nexport enum USERS_ACTIONS_TYPES {\r\n    FOLLOW = 'FOLLOW',\r\n    SET_USERS = 'SET_USERS',\r\n    SET_CURRENT_PAGE = 'SET_CURRENT_PAGE',\r\n    SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT',\r\n    TOGGLE_LOADER = 'TOGGLE_LOADER',\r\n    TOGGLE_FOLLOW_LOADER = 'TOGGLE_FOLLOW_LOADER'\r\n}\r\n\r\nexport const follow = (id: string) => ({\r\n    type: USERS_ACTIONS_TYPES.FOLLOW,\r\n    payload: {id}\r\n}) as const\r\n\r\nexport const setUsers = (users: UserType[]) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_USERS,\r\n    payload: {users}\r\n}) as const\r\n\r\nexport const setCurrentPage = (page: number) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_CURRENT_PAGE,\r\n    payload: {page}\r\n}) as const\r\n\r\nexport const setTotalUsersCount = (total: number) => ({\r\n    type: USERS_ACTIONS_TYPES.SET_TOTAL_USERS_COUNT,\r\n    payload: {total}\r\n}) as const\r\n\r\nexport const toggleLoader = (status: boolean) => ({\r\n    type: USERS_ACTIONS_TYPES.TOGGLE_LOADER,\r\n    payload: {status}\r\n}) as const\r\n\r\nexport const toggleFollowLoader = (status: boolean, id: string) => ({\r\n    type: USERS_ACTIONS_TYPES.TOGGLE_FOLLOW_LOADER,\r\n    payload: {status, id}\r\n}) as const\r\n\r\n\r\n// Thunk\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: ThunkType) => {\r\n    try {\r\n        dispatch(toggleLoader(true))\r\n        const response = await usersAPI.requestUsers(page, pageSize)\r\n        dispatch(toggleLoader(false))\r\n        dispatch(setUsers(response.items))\r\n        dispatch(setTotalUsersCount(response.totalCount))\r\n    } catch (e) {\r\n        alert(e)\r\n    }\r\n}\r\n\r\nexport const changeCurrentPage = (page: number, pageSize: number) => async (dispatch: ThunkType) => {\r\n    dispatch(setCurrentPage(page))\r\n    dispatch(toggleLoader(true))\r\n\r\n    const response = await usersAPI.requestUsers(page, pageSize)\r\n    dispatch(toggleLoader(false))\r\n    dispatch(setUsers(response.items))\r\n}\r\n\r\nexport const followUser = (id: string, followed: boolean) => async (dispatch: ThunkType) => {\r\n    dispatch(toggleFollowLoader(true, id))\r\n\r\n    if (!followed) {\r\n        await followAPI.follow(id)\r\n        dispatch(follow(id))\r\n        dispatch(toggleFollowLoader(false, id))\r\n    }\r\n\r\n    if (followed) {\r\n        await followAPI.unfollow(id)\r\n        dispatch(follow(id))\r\n        dispatch(toggleFollowLoader(false, id))\r\n    }\r\n}","import {axiosInstance} from './axios-instance'\r\n\r\nexport const usersAPI = {\r\n    requestUsers: (page: number = 1, pageSize: number = 10) => axiosInstance\r\n        .get(`users?count=${pageSize}&page=${page}`)\r\n        .then(response => response.data)\r\n}","import {axiosInstance} from './axios-instance'\r\n\r\nexport const followAPI = {\r\n    follow: (id: string) => axiosInstance\r\n        .post(`follow/${id}`)\r\n        .then(response => {\r\n                return response.data.responseCode === 0 ? response.data : null\r\n            }\r\n        ),\r\n\r\n    unfollow: (id: string) => axiosInstance\r\n        .delete(`follow/${id}`)\r\n        .then(response => {\r\n                return response.data.responseCode === 0 ? response.data : null\r\n            }\r\n        )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Sidebar_wrapper__38jnK\",\"container\":\"Sidebar_container__1dNie\",\"active\":\"Sidebar_active__1ixxA\"};","import {UserProfilePhotosType, UserProfileType} from '../../types/profile-types'\r\nimport {ThunkGetStateType, ThunkType} from '../../types/common-types'\r\nimport {profileAPI} from '../../api/profile-api'\r\n\r\nexport enum PROFILE_ACTIONS_TYPES {\r\n    ADD_POST = 'ADD_POST',\r\n    SET_USER_PROFILE = 'SET_USER_PROFILE',\r\n    SET_USER_STATUS = 'SET_USER_STATUS',\r\n    SET_USER_AVATAR = 'SET_USER_AVATAR',\r\n}\r\n\r\nexport const addPost = (text: string) => ({\r\n    type: PROFILE_ACTIONS_TYPES.ADD_POST,\r\n    payload: {text}\r\n}) as const\r\n\r\nexport const setUserProfile = (userProfile: UserProfileType) => ({\r\n    type: PROFILE_ACTIONS_TYPES.SET_USER_PROFILE,\r\n    payload: {userProfile}\r\n}) as const\r\n\r\nexport const setUserStatus = (userStatus: string) => ({\r\n    type: PROFILE_ACTIONS_TYPES.SET_USER_STATUS,\r\n    payload: {userStatus}\r\n}) as const\r\n\r\nexport const setUserAvatar = (userAvatar: UserProfilePhotosType) => ({\r\n    type: PROFILE_ACTIONS_TYPES.SET_USER_AVATAR,\r\n    payload: {userAvatar}\r\n}) as const\r\n\r\n// Thunk\r\nexport const getUserProfile = (id: number | null) => async (dispatch: ThunkType) => {\r\n    const response = await profileAPI.getUserProfile(id)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getUserStatus = (id: number | null) => async (dispatch: ThunkType) => {\r\n    const response = await profileAPI.getUserStatus(id)\r\n    dispatch(setUserStatus(response.data))\r\n}\r\n\r\nexport const updateUserStatus = (userStatus: string) => async (dispatch: ThunkType) => {\r\n    const response = await profileAPI.updateUserStatus(userStatus)\r\n    response.data.resultCode === 0 && dispatch(setUserStatus(userStatus))\r\n}\r\n\r\nexport const updateUserAvatar = (avatarFile: File) => async (dispatch: ThunkType) => {\r\n    const response = await profileAPI.updateUserAvatar(avatarFile)\r\n    response.data.resultCode === 0 && dispatch(setUserAvatar(response.data.data.photos)) && alert('Успешно!')\r\n    response.data.resultCode !== 0 && alert(response.data.messages)\r\n}\r\n\r\nexport const updateUserDescription = (userDescription: UserProfileType) => async (dispatch: ThunkType, getState: ThunkGetStateType) => {\r\n    const response = await profileAPI.updateUserDescription(userDescription)\r\n    if (response.data.resultCode === 0) {\r\n        const id = getState().auth.id\r\n        await dispatch(getUserProfile(id))\r\n    }\r\n}","import {axiosInstance} from './axios-instance'\r\nimport {UserProfileType} from '../types/profile-types'\r\n\r\nexport const profileAPI = {\r\n    getUserProfile: (id: number | null) => axiosInstance.get(`profile/${id}`),\r\n    getUserStatus: (id: number | null) => axiosInstance.get(`profile/status/${id}`),\r\n    updateUserStatus: (status: string) => axiosInstance.put(`profile/status`, {status}),\r\n    updateUserAvatar: (avatarFile: File) => {\r\n        const formData = new FormData()\r\n        formData.append('image', avatarFile)\r\n        return axiosInstance.put(`profile/photo`, formData)\r\n    },\r\n    updateUserDescription: (description: UserProfileType) => axiosInstance.put(`profile`, description)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorPageWrapper\":\"Error404_errorPageWrapper__1j1kw\",\"error404\":\"Error404_error404__EmPtm\",\"errorImg\":\"Error404_errorImg__3oMS-\",\"pageNotFound\":\"Error404_pageNotFound__2CaRP\"};","import React from 'react'\r\nimport {useField} from 'formik'\r\nimport s from '../Form.module.css'\r\n\r\ntype FormInputPropsType = {\r\n    label: string\r\n    name: string\r\n    type: string\r\n    placeholder: string\r\n    id?: string\r\n}\r\n\r\nexport const FormInput: React.FC<FormInputPropsType> = React.memo(({label, ...props}) => {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n        <div className={s.formField}>\r\n            <label htmlFor={props.id || props.name}>{label}</label>\r\n            <input {...field} {...props} className={meta.error ? s.errorBorder : ''}/>\r\n            {meta.touched && meta.error && <div className={s.errorMessage}>{meta.error}</div>}\r\n        </div>\r\n    )\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3jZPv\",\"container\":\"Header_container__2LYHX\",\"miniProfileImg\":\"Header_miniProfileImg__1x289\",\"logoWrapper\":\"Header_logoWrapper__nqon6\"};","import React from 'react'\r\nimport s from './Loader.module.css'\r\n\r\nexport const Loader: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.loadingWrapper}>\r\n            <div className={s.loading}>\r\n                <div/>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    )\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingWrapper\":\"Loader_loadingWrapper__33q2W\",\"loading\":\"Loader_loading__2Z_4D\"};","export enum DIALOGS_ACTIONS_TYPES {\r\n    SEND_MESSAGE = 'SEND_MESSAGE',\r\n}\r\n\r\nexport const sendMessage = (text: string) => ({\r\n    type: DIALOGS_ACTIONS_TYPES.SEND_MESSAGE,\r\n    payload: {text}\r\n}) as const","import {sendMessage} from '../redux/actions/dialogs-actions'\r\nimport {\r\n    addPost,\r\n    setUserAvatar,\r\n    setUserProfile,\r\n    setUserStatus\r\n} from '../redux/actions/profile-actions'\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleFollowLoader,\r\n    toggleLoader\r\n} from '../redux/actions/users-actions'\r\nimport {changeAuthWhenLogout, setAuthUserData, setCaptcha} from '../redux/actions/auth-actions'\r\nimport {rootReducer} from '../redux/reducers/root-reducer'\r\nimport {ThunkDispatch} from 'redux-thunk'\r\nimport {successInitialization} from '../redux/actions/app-actions'\r\n\r\n// Routes\r\nexport enum PATH {\r\n    ROOT = '/',\r\n    PROFILE = '/profile',\r\n    PROFILE_WITH_ID = '/profile/:userId?',\r\n    DIALOGS = '/dialogs',\r\n    USERS = '/users',\r\n    LOGIN = '/login',\r\n    ERROR = '*'\r\n}\r\n\r\n// State\r\nexport type StateType = ReturnType<typeof rootReducer>\r\n\r\n// Actions\r\nexport type ActionsType =\r\n    ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof sendMessage>\r\n    | ReturnType<typeof follow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleLoader>\r\n    | ReturnType<typeof setAuthUserData>\r\n    | ReturnType<typeof toggleFollowLoader>\r\n    | ReturnType<typeof setUserStatus>\r\n    | ReturnType<typeof changeAuthWhenLogout>\r\n    | ReturnType<typeof successInitialization>\r\n    | ReturnType<typeof setUserAvatar>\r\n    | ReturnType<typeof setCaptcha>\r\n\r\n// Thunk\r\nexport type ThunkType = ThunkDispatch<StateType, null, ActionsType>\r\nexport type ThunkGetStateType = () => StateType"],"sourceRoot":""}