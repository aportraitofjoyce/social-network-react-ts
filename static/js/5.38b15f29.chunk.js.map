{"version":3,"sources":["components/Content/Users/Users.module.css","components/UI/Pagination/Pagination.module.css","components/Content/Users/User/User.tsx","components/UI/Pagination/Pagination.tsx","components/UI/Form/FormSelect/FormSelect.tsx","components/Content/Users/UsersSearchForm/UsersSearchForm.tsx","components/Content/Users/Users.tsx","components/Content/Users/UsersContainer.tsx"],"names":["module","exports","User","React","memo","props","name","avatar","id","followed","status","followLoader","followUser","isAuth","onFollowButtonClickHandler","useCallback","className","s","userContainer","avatarAndFollowContainer","to","PATH","PROFILE","src","alt","onClick","disabled","includes","userInfoContainer","Pagination","totalItemsCount","pageSize","currentPage","portionSize","totalPagesCount","useMemo","pagesCount","Math","ceil","pagesArray","i","push","totalPortionsCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","pagesToRender","filter","p","map","paginationContainer","FormSelect","label","useField","field","meta","formField","htmlFor","touched","error","UsersSearchForm","onSubmit","initialValues","term","followers","values","value","selectConverter","FormInput","type","placeholder","Users","usersData","totalUsersCount","changeCurrentPage","searchUsers","mappedUsers","user","photos","large","wrapper","UsersContainer","dispatch","useDispatch","useSelector","state","users","isLoading","search","auth","followUserHandler","changeCurrentPageHandler","page","searchUsersHandler","requestUsers","useEffect","Loader"],"mappings":"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","file":"static/js/5.38b15f29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__ZCzzQ\",\"userContainer\":\"Users_userContainer__2c6Ho\",\"avatarAndFollowContainer\":\"Users_avatarAndFollowContainer__3-XAj\",\"avatar\":\"Users_avatar__c2jXs\",\"userInfoContainer\":\"Users_userInfoContainer__2TtV2\",\"name\":\"Users_name__2qyGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationContainer\":\"Pagination_paginationContainer__Z_ap4\",\"currentPage\":\"Pagination_currentPage__j1jM5\"};","import React, {useCallback} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport s from '../Users.module.css'\r\nimport {PATH} from '../../../../types/common-types'\r\n\r\ntype UserPropsType = {\r\n    name: string\r\n    avatar: string\r\n    id: number\r\n    followed: boolean\r\n    status: string\r\n    followLoader: number[]\r\n    followUser: (id: number, followed: boolean) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = React.memo(props => {\r\n    const {name, avatar, id, followed, status, followLoader, followUser, isAuth} = props\r\n\r\n    const onFollowButtonClickHandler = useCallback(() => followUser(id, followed), [followUser, id, followed])\r\n\r\n    return (\r\n        <div key={props.name} className={s.userContainer}>\r\n            <div className={s.avatarAndFollowContainer}>\r\n                <Link to={`${PATH.PROFILE}/${id}`}>\r\n                    <div className={s.avatar}>\r\n                        <img\r\n                            src={avatar || 'https://pbs.twimg.com/profile_images/1368235617243426820/L0m5gTDB.jpg'}\r\n                            alt={name}/>\r\n                    </div>\r\n                </Link>\r\n\r\n                {!isAuth\r\n                    ? <button disabled>Need to login</button>\r\n                    : <button onClick={onFollowButtonClickHandler}\r\n                              disabled={followLoader.includes(id)}>\r\n                        {followed ? 'Unfollow' : 'Follow'}\r\n                    </button>}\r\n\r\n            </div>\r\n            <div className={s.userInfoContainer}>\r\n                <div className={s.name}>{name}</div>\r\n                <div>{followed ? 'Вы уже дружите' : 'Ждет дружбы'}</div>\r\n                <div>{status || 'Место для вашего статуса'}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useMemo, useState} from 'react'\r\nimport s from './Pagination.module.css'\r\n\r\ntype PaginationPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    portionSize?: number\r\n    onClick: (page: number) => void\r\n}\r\n\r\nexport const Pagination: React.FC<PaginationPropsType> = React.memo(props => {\r\n    const {totalItemsCount, pageSize, currentPage, onClick, portionSize = 10} = props\r\n\r\n    const totalPagesCount = useMemo(() => {\r\n        let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n        let pagesArray: number[] = []\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pagesArray.push(i)\r\n        }\r\n        return pagesArray\r\n    }, [totalItemsCount, pageSize])\r\n\r\n    const totalPortionsCount = Math.ceil(Math.ceil(totalItemsCount / pageSize) / portionSize)\r\n\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n\r\n    const leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionNumber = portionNumber * portionSize\r\n\r\n\r\n    const prevPageHandler = () => setPortionNumber(portionNumber - 1)\r\n    const nextPageHandler = () => setPortionNumber(portionNumber + 1)\r\n\r\n    const pagesToRender = totalPagesCount\r\n        .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n        .map(p => <span key={p}\r\n                        className={currentPage === p ? s.currentPage : ''}\r\n                        onClick={() => onClick(p)}>\r\n            {p}\r\n        </span>)\r\n\r\n    return (\r\n        <div className={s.paginationContainer}>\r\n            <button onClick={prevPageHandler} disabled={portionNumber <= 1}>Prev</button>\r\n            {pagesToRender}\r\n            <button onClick={nextPageHandler} disabled={totalPortionsCount <= portionNumber}>Next</button>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport {useField} from 'formik'\r\nimport s from '../Form.module.css'\r\n\r\ntype FormSelectPropsType = {\r\n    label: string\r\n    name: string\r\n    id?: string\r\n}\r\n\r\nexport const FormSelect: React.FC<FormSelectPropsType> = React.memo(({label, ...props}) => {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n        <div className={s.formField}>\r\n            <label htmlFor={props.id || props.name}>{label}</label>\r\n            <select {...field} {...props}/>\r\n            {meta.touched && meta.error && <div className='error'>{meta.error}</div>}\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport {Form, Formik} from 'formik'\r\nimport {FormInput} from '../../../UI/Form/FormInput/FormInput'\r\nimport {FormSelect} from '../../../UI/Form/FormSelect/FormSelect'\r\n\r\ntype UsersSearchFormPropsType = {\r\n    onSubmit: (term: string, followers: boolean | null) => void\r\n}\r\n\r\n// TODO: Form Submission\r\nexport const UsersSearchForm: React.FC<UsersSearchFormPropsType> = React.memo(props => {\r\n    const {onSubmit} = props\r\n\r\n    const selectConverter = (value: string) => {\r\n        switch (value) {\r\n            case 'followed':\r\n                return true\r\n            case 'unfollowed':\r\n                return false\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                term: '',\r\n                followers: '',\r\n            }}\r\n\r\n            onSubmit={(values) => {\r\n                onSubmit(values.term, selectConverter(values.followers))\r\n            }}>\r\n\r\n            {() => <Form className={'formikFormContainer'}>\r\n                <FormInput\r\n                    label='Search by Name'\r\n                    name='term'\r\n                    type='text'\r\n                    placeholder='Type users name...'/>\r\n\r\n                <FormSelect label={'Followers'}\r\n                            name={'followers'}>\r\n                    <option value=''>All</option>\r\n                    <option value='followed'>Followed</option>\r\n                    <option value='unfollowed'>Unfollowed</option>\r\n                </FormSelect>\r\n\r\n                <button type='submit'>Search</button>\r\n            </Form>}\r\n        </Formik>\r\n    )\r\n})","import React from 'react'\r\nimport s from './Users.module.css'\r\nimport {User} from './User/User'\r\nimport {UserType} from '../../../types/users-types'\r\nimport {Pagination} from '../../UI/Pagination/Pagination'\r\nimport {UsersSearchForm} from './UsersSearchForm/UsersSearchForm'\r\n\r\ntype UsersPropsType = {\r\n    usersData: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    changeCurrentPage: (page: number) => void\r\n    followLoader: number[]\r\n    followUser: (id: number, followed: boolean) => void\r\n    isAuth: boolean\r\n    searchUsers: (term: string, followers: boolean | null) => void\r\n}\r\n\r\nexport const Users: React.FC<UsersPropsType> = React.memo(props => {\r\n    const {\r\n        usersData,\r\n        pageSize,\r\n        totalUsersCount,\r\n        currentPage,\r\n        changeCurrentPage,\r\n        followLoader,\r\n        followUser,\r\n        isAuth,\r\n        searchUsers\r\n    } = props\r\n\r\n    const mappedUsers = usersData.map(user => <User key={user.name + user.id}\r\n                                                    name={user.name}\r\n                                                    avatar={user.photos.large}\r\n                                                    id={user.id}\r\n                                                    followed={user.followed}\r\n                                                    status={user.status}\r\n                                                    followLoader={followLoader}\r\n                                                    followUser={followUser}\r\n                                                    isAuth={isAuth}/>)\r\n\r\n    return (\r\n        <main className={s.wrapper}>\r\n            <UsersSearchForm onSubmit={searchUsers}/>\r\n            <Pagination totalItemsCount={totalUsersCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        portionSize={25}\r\n                        onClick={changeCurrentPage}/>\r\n            {mappedUsers}\r\n        </main>\r\n    )\r\n})","import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {StateType} from '../../../types/common-types'\r\nimport {\r\n    requestUsers,\r\n    changeCurrentPage,\r\n    followUser,\r\n} from '../../../redux/actions/users-actions'\r\nimport {Users} from './Users'\r\nimport {Loader} from '../../UI/Loader/Loader'\r\nimport {UsersType} from '../../../types/users-types'\r\nimport {AuthType} from '../../../types/auth-types'\r\n\r\nconst UsersContainer: React.FC = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        usersData,\r\n        pageSize,\r\n        totalUsersCount,\r\n        currentPage,\r\n        isLoading,\r\n        followLoader,\r\n        search\r\n    } = useSelector<StateType, UsersType>(state => state.users)\r\n\r\n    const {isAuth} = useSelector<StateType, AuthType>(state => state.auth)\r\n\r\n    const followUserHandler = useCallback((id: number, followed: boolean) => {\r\n        dispatch(followUser(id, followed))\r\n    }, [dispatch])\r\n\r\n    const changeCurrentPageHandler = useCallback((page: number) => {\r\n        dispatch(changeCurrentPage(page, pageSize, search.term, search.followers))\r\n    }, [dispatch, pageSize, search.term, search.followers])\r\n\r\n    const searchUsersHandler = useCallback((term: string, followers: boolean | null) => {\r\n        dispatch(requestUsers(currentPage, pageSize, term, followers))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(requestUsers(currentPage, pageSize))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Loader/>}\r\n            <Users usersData={usersData}\r\n                   pageSize={pageSize}\r\n                   totalUsersCount={totalUsersCount}\r\n                   currentPage={currentPage}\r\n                   changeCurrentPage={changeCurrentPageHandler}\r\n                   followLoader={followLoader}\r\n                   followUser={followUserHandler}\r\n                   isAuth={isAuth}\r\n                   searchUsers={searchUsersHandler}/>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default UsersContainer"],"sourceRoot":""}