{"version":3,"sources":["components/Content/Profile/MyProfile/MyProfile.module.css","components/Content/Sidebar/Sidebar.module.css","components/Content/Header/Header.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","components/Content/Profile/Profile.module.css","components/Content/Dialogs/Dialogs.module.css","components/Content/Users/Users.module.css","reportWebVitals.ts","redux/actions/profileActions.ts","redux/reducers/profile-reducer.ts","redux/actions/dialogsActions.ts","redux/reducers/dialogs-reducer.ts","redux/reducers/sidebar-reducer.ts","redux/actions/usersActions.ts","redux/reducers/users-reducer.ts","redux/store.ts","components/Content/Header/LogoIcon.tsx","components/Content/Header/Header.tsx","components/Content/Dialogs/FriendsToChat/Friend/Friend.tsx","components/Content/Dialogs/FriendsToChat/FriendsToChat.tsx","components/Content/Dialogs/DialogsChat/Message/Message.tsx","components/Content/Dialogs/DialogsChat/DialogsControl/DialogsControl.tsx","components/Content/Dialogs/DialogsChat/DialogsChat.tsx","components/Content/Dialogs/DialogsContainer.tsx","components/Content/Dialogs/Dialogs.tsx","components/Content/Sidebar/SidebarItem/SidebarItem.tsx","components/Content/Sidebar/SidebarContainer.tsx","components/Content/Sidebar/Sidebar.tsx","components/Content/Users/Users.tsx","components/Content/Users/UsersContainer.tsx","components/Content/Profile/MyPosts/Post/Post.tsx","components/Content/Profile/MyPosts/PostControl/PostControl.tsx","components/Content/Profile/MyPosts/MyPosts.tsx","components/Content/Profile/MyProfile/MyAvatar/MyAvatar.tsx","components/Content/Profile/MyProfile/MyInfo/MyInfo.tsx","components/Content/Profile/MyProfile/MyProfile.tsx","components/Content/Profile/ProfileContainer.tsx","components/Content/Profile/Profile.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_POST_TEXT","addPostAC","type","updatePostAC","text","initialState","dataForMyProfile","src","alt","title","dataForMyPosts","likes","newPost","SEND_MESSAGE","UPDATE_MESSAGE_TEXT","dataForFriends","id","v1","name","dataForMessages","from","message","newMessage","dataForSidebar","link","FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","usersData","pageSize","totalUsersCount","currentPage","rootReducer","combineReducers","profile","state","action","dialogs","sidebar","users","map","user","followed","page","total","store","createStore","LogoIcon","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","cx","cy","r","x1","y1","x2","y2","Header","s","wrapper","container","to","logoWrapper","miniProfileImg","Friend","props","friend","activeClassName","active","FriendsToChat","dialogWithFriend","item","friendsContainer","Message","messageWrapper","avatar","messageContainer","DialogsControl","controlContainer","placeholder","onChange","e","updateMessage","currentTarget","value","textForNewMessage","onClick","sendMessage","DialogsChat","mappedMessages","dialogsWrapper","dialogsContainer","DialogsContainer","connect","dispatch","updateMessageTextAC","SidebarItem","SidebarContainer","mappedSidebarItems","UsersCC","onPageClickHandler","setCurrentPage","axios","get","response","setUsers","data","items","this","setTotalUsersCount","totalCount","pagesCount","Math","ceil","pages","i","push","userContainer","avatarAndFollowContainer","photos","small","userInfoContainer","status","paginationContainer","p","React","Component","UsersContainer","followAC","setUsersAC","setCurrentPageAC","setTotalUsersCountAC","Post","avatar_container","content_container","PostsControl","control_wrapper","updatePost","textForNewPost","addPost","MyPosts","mappedPosts","MyAvatar","avatar_wrapper","MyInfo","info_wrapper","MyProfile","ProfileContainer","useDispatch","PATH","App","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,QAAU,2BAA2B,eAAiB,kCAAkC,aAAe,kC,mBCAzHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,OAAS,0B,mBCArGD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,UAAY,0BAA0B,eAAiB,+BAA+B,YAAc,8B,mBCAxJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,gBAAkB,mC,mBCAvED,EAAOC,QAAU,CAAC,QAAU,sBAAsB,iBAAmB,+BAA+B,kBAAoB,kC,wCCAxHD,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,iBAAmB,kCAAkC,iBAAmB,kCAAkC,OAAS,wBAAwB,eAAiB,gCAAgC,OAAS,wBAAwB,iBAAmB,oC,kBCAtVD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,cAAgB,6BAA6B,yBAA2B,wCAAwC,OAAS,sBAAsB,kBAAoB,iCAAiC,KAAO,oBAAoB,oBAAsB,mCAAmC,YAAc,6B,oFCa1UC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+BCTDQ,EAAW,WACXC,EAAmB,mBAEnBC,EAAY,iBAAO,CAACC,KAAMH,IAC1BI,EAAe,SAACC,GAAD,MAAmB,CAACF,KAAMF,EAAkBI,KAAMA,ICDxEC,EAA4B,CAC9BC,iBAAkB,CACdC,IAAK,oJACLC,IAAK,aACLC,MAAO,mFAEXC,eAAgB,CACZ,CACIH,IAAK,oJACLC,IAAK,aACLJ,KAAM,gBACNO,MAAO,IAEX,CACIJ,IAAK,oJACLC,IAAK,aACLJ,KAAM,iBACNO,MAAO,GAEX,CACIJ,IAAK,oJACLC,IAAK,aACLJ,KAAM,gBACNO,MAAO,IAEX,CACIJ,IAAK,oJACLC,IAAK,aACLJ,KAAM,iBACNO,MAAO,IAGfC,QAAS,CACLL,IAAK,oJACLC,IAAK,aACLJ,KAAM,iLACNO,MAAO,I,QCvCFE,EAAe,eACfC,EAAsB,sBCG7BT,EAA4B,CAC9BU,eAAgB,CACZ,CAACC,GAAIC,cAAMC,KAAM,MACjB,CAACF,GAAIC,cAAMC,KAAM,SACjB,CAACF,GAAIC,cAAMC,KAAM,UACjB,CAACF,GAAIC,cAAMC,KAAM,SAGrBC,gBAAiB,CACb,CAACH,GAAIC,cAAMG,KAAM,KAAMC,QAAS,sFAChC,CAACL,GAAIC,cAAMG,KAAM,SAAUC,QAAS,kHACpC,CAACL,GAAIC,cAAMG,KAAM,KAAMC,QAAS,gPAChC,CAACL,GAAIC,cAAMG,KAAM,KAAMC,QAAS,+JAChC,CAACL,GAAIC,cAAMG,KAAM,SAAUC,QAAS,kCACpC,CAACL,GAAIC,cAAMG,KAAM,KAAMC,QAAS,wBAEpCC,WAAY,CACRN,GAAIC,cACJG,KAAM,KACNC,QAAS,KCrBXhB,EAA4B,CAC9BkB,eAAgB,CACZ,CAACL,KAAM,UAAWM,KAAM,YACxB,CAACN,KAAM,UAAWM,KAAM,YACxB,CAACN,KAAM,QAASM,KAAM,YCJjBC,EAAS,SACTC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBCF/BvB,EAA0B,CAC5BwB,UAAW,GACXC,SAAU,GACVC,gBAAiB,EACjBC,YAAa,GCDJC,EAAcC,YACvB,CACIC,QNmCsB,WAA0E,IAAzEC,EAAwE,uDAAnD/B,EAAcgC,EAAqC,uCACnG,OAAQA,EAAOnC,MACX,KAAKH,EACD,OAAO,2BACAqC,GADP,IAEI1B,eAAe,CAAD,eAAO0B,EAAMxB,UAAb,mBAA0BwB,EAAM1B,iBAC9CE,QAAQ,2BAAKwB,EAAMxB,SAAZ,IAAqBR,KAAM,OAE1C,KAAKJ,EACD,OAAO,2BACAoC,GADP,IAEIxB,QAAQ,2BAAKwB,EAAMxB,SAAZ,IAAqBR,KAAMiC,EAAOjC,SAEjD,QACI,OAAOgC,IMhDXE,QJkBsB,WAA0E,IAAzEF,EAAwE,uDAAnD/B,EAAcgC,EAAqC,uCACnG,OAAQA,EAAOnC,MACX,KAAKW,EACD,OAAO,2BACAuB,GADP,IAEIjB,gBAAgB,GAAD,mBAAMiB,EAAMjB,iBAAZ,gBAAiCiB,EAAMd,cACtDA,WAAW,2BAAKc,EAAMd,YAAZ,IAAwBD,QAAS,OAEnD,KAAKP,EACD,OAAO,2BACAsB,GADP,IAEId,WAAW,2BAAKc,EAAMd,YAAZ,IAAwBD,QAASgB,EAAOjC,SAE1D,QACI,OAAOgC,II/BXG,QHAsB,WAA0E,IAAzEH,EAAwE,uDAAnD/B,EAChD,OAAO+B,GGAHI,MDDoB,WAA2D,IAA1DJ,EAAyD,uDAAtC/B,EAAcgC,EAAwB,uCAClF,OAAQA,EAAOnC,MACX,KAAKuB,EACD,OAAO,2BACAW,GADP,IAEIP,UAAWO,EAAMP,UACZY,KAAI,SAACC,GAAD,OAAUA,EAAK1B,KAAOqB,EAAOrB,GAAnB,2BACL0B,GADK,IACCC,UAAWD,EAAKC,WAC1BD,OAGlB,KAAKhB,EACD,OAAO,2BAAIU,GAAX,IAAkBP,UAAU,YAAKQ,EAAOG,SAE5C,KAAKb,EACD,OAAO,2BAAIS,GAAX,IAAkBJ,YAAaK,EAAOO,OAE1C,KAAKhB,EACD,OAAO,2BAAIQ,GAAX,IAAkBL,gBAAiBM,EAAOQ,QAE9C,QACI,OAAOT,MChBNU,EAAQC,YAAYd,G,+BCbpBe,EAAW,WACpB,OACI,sBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OACnFC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAC3EC,UAAU,0BAFf,UAGI,wBAAQC,GAAG,KAAKC,GAAG,IAAIC,EAAE,MACzB,wBAAQF,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACzB,wBAAQF,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMC,GAAG,OAAOC,GAAG,QAAQC,GAAG,QAAQC,GAAG,UACzC,sBAAMH,GAAG,QAAQC,GAAG,OAAOC,GAAG,OAAOC,GAAG,cCNvCC,EAAS,WAClB,OACI,qBAAKR,UAAWS,IAAEC,QAAlB,SACI,sBAAKV,UAAWS,IAAEE,UAAlB,UACI,eAAC,IAAD,CAASC,GAAI,IAAKZ,UAAWS,IAAEI,YAA/B,UAA4C,cAAC,EAAD,IAAW,qDACvD,qBACIhE,IAAI,oJACJC,IAAI,eACJkD,UAAWS,IAAEK,uB,wBCRpBC,EAAuC,SAACC,GACjD,OACI,cAAC,IAAD,CAASJ,GAAI,YAAcI,EAAM1D,GACxB0C,UAAWS,IAAEQ,OACbC,gBAAiBT,IAAEU,OAF5B,SAGKH,EAAMxD,QCDN4D,EAAqD,SAACJ,GAC/D,IAAMK,EAAmBL,EAAM3D,eAAe0B,KAAI,SAACuC,GAAD,OAAU,cAAC,EAAD,CAAsBhE,GAAIgE,EAAKhE,GAAIE,KAAM8D,EAAK9D,MAAjC8D,EAAKhE,OAE9E,OACI,qBAAK0C,UAAWS,IAAEc,iBAAlB,SACKF,KCLAG,EAAsC,SAACR,GAEhD,OACI,sBAAKhB,UAAWS,IAAEgB,eAAlB,UACI,qBAAKzB,UAAWS,IAAEiB,OAAlB,SACI,qBACI7E,IAAI,oJACJC,IAAI,SAEZ,sBAAKkD,UAAWS,IAAEkB,iBAAlB,UACI,8BAAK,8BAAIX,EAAMtD,KAAV,SACL,8BAAMsD,EAAMrD,iBCXfiE,EAAoD,SAACZ,GAI9D,OACI,sBAAKhB,UAAWS,IAAEoB,iBAAlB,UACI,0BAAUC,YAAa,gBACbC,SALW,SAACC,GAAD,OAAyChB,EAAMiB,cAAcD,EAAEE,cAAcC,QAMxFA,MAAOnB,EAAMoB,oBACvB,wBAAQC,QARW,kBAAMrB,EAAMsB,eAQ/B,qBCJCC,EAAmD,SAACvB,GAC7D,IAAMwB,EAAiBxB,EAAMvD,gBAAgBsB,KAAI,SAAAuC,GAAI,OAAI,cAAC,EAAD,CAC1C5D,KAAM4D,EAAK5D,KAAMC,QAAS2D,EAAK3D,QAASL,GAAIgE,EAAKhE,IAAvDC,kBAET,OACI,sBAAKyC,UAAWS,IAAEgC,eAAlB,UACI,qBAAKzC,UAAWS,IAAEiC,iBAAlB,SACKF,IAEL,cAAC,EAAD,CACIJ,kBAAmBpB,EAAMoB,kBACzBE,YAAatB,EAAMsB,YACnBL,cAAejB,EAAMiB,oBCTxBU,EAAmBC,aAXR,SAAClE,GAAD,MAAuB,CAC3CjB,gBAAiBiB,EAAME,QAAQnB,gBAC/B2E,kBAAmB1D,EAAME,QAAQhB,WAAWD,QAC5CN,eAAgBqB,EAAME,QAAQvB,mBAGP,SAACwF,GAAD,MAA6B,CACpDP,YAAa,kBAAMO,EbVa,CAACrG,KAAMW,KaWvC8E,cAAe,SAACvF,GAAD,OAAkBmG,EbVF,SAACnG,GAAD,MAAmB,CAACF,KAAMY,EAAqBV,KAAMA,GaU1CoG,CAAoBpG,QAGlCkG,ECHmB,SAAC5B,GAChD,OACI,uBAAMhB,UAAWS,IAAEC,QAAnB,UACI,cAAC,EAAD,CAAerD,eAAgB2D,EAAM3D,iBACrC,cAAC,EAAD,CACII,gBAAiBuD,EAAMvD,gBACvB2E,kBAAmBpB,EAAMoB,kBACzBE,YAAatB,EAAMsB,YACnBL,cAAejB,EAAMiB,sB,iBCbxBc,EAA8C,SAAC/B,GACxD,OAAO,cAAC,IAAD,CAASJ,GAAII,EAAMlD,KAAMoD,gBAAiBT,IAAEU,OAA5C,SAAqDH,EAAMxD,QCAzDwF,EAAmBJ,aANR,SAAClE,GAAD,MACpB,CACIb,eAAgBa,EAAMG,QAAQhB,kBAIN+E,ECAmB,SAAC5B,GAChD,IAAMiC,EAAqBjC,EAAMnD,eAAekB,KAAI,SAAAuC,GAChD,OAAO,cAAC,EAAD,CAAwB9D,KAAM8D,EAAK9D,KAAMM,KAAMwD,EAAKxD,MAAlCP,kBAG7B,OACI,uBAAOyC,UAAWS,IAAEC,QAApB,SACI,qBAAKV,UAAWS,IAAEE,UAAlB,SACKsC,S,oECFJC,GAAb,4MAUIC,mBAAqB,SAACjE,GAClB,EAAK8B,MAAMoC,eAAelE,GAC1BmE,KACKC,IADL,mEACqE,EAAKtC,MAAM5C,SADhF,iBACiGc,IAC5FnD,MAAK,SAAAwH,GACF,EAAKvC,MAAMwC,SAASD,EAASE,KAAKC,WAflD,uDACI,WAAqB,IAAD,OAChBL,KACKC,IADL,mEACqEK,KAAK3C,MAAM5C,SADhF,iBACiGuF,KAAK3C,MAAM1C,cACvGvC,MAAK,SAAAwH,GACF,EAAKvC,MAAMwC,SAASD,EAASE,KAAKC,OAClC,EAAK1C,MAAM4C,mBAAmBL,EAASE,KAAKI,iBAN5D,oBAmBI,WAII,IAJM,IAAD,OACDC,EAAaC,KAAKC,KAAKL,KAAK3C,MAAM3C,gBAAkBsF,KAAK3C,MAAM5C,UAE/D6F,EAAkB,GACbC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,OACI,uBAAMlE,UAAWS,IAAEC,QAAnB,UAEQiD,KAAK3C,MAAM7C,UAAUY,KAAI,SAAAC,GAAI,OACzB,sBAAqBgB,UAAWS,IAAE2D,cAAlC,UAEI,sBAAKpE,UAAWS,IAAE4D,yBAAlB,UACI,qBAAKrE,UAAWS,IAAEiB,OAAlB,SACI,qBACI7E,IAA2B,OAAtBmC,EAAKsF,OAAOC,MACXvF,EAAKsF,OAAOC,MACZ,wEACNzH,IAAKkC,EAAKxB,SAElB,wBAAQ6E,QAAS,kBAAM,EAAKrB,MAAM/B,SAASD,EAAK1B,KAAhD,SACK0B,EAAKC,SAAW,WAAa,cAItC,sBAAKe,UAAWS,IAAE+D,kBAAlB,UACI,qBAAKxE,UAAWS,IAAEjD,KAAlB,SACKwB,EAAKxB,OAEV,8BACKwB,EAAKC,SAAW,6EAAmB,kEAExC,8BACqB,OAAhBD,EAAKyF,OAAkBzF,EAAKyF,OAAS,2IAvBxCzF,EAAKxB,SA8BvB,qBAAKwC,UAAWS,IAAEiE,oBAAlB,SAEQT,EAAMlF,KAAI,SAAA4F,GAAC,OACP,sBAAM3E,UAAW,EAAKgB,MAAM1C,cAAgBqG,EAAIlE,IAAEnC,YAAc,GAE1D+D,QAAS,kBAAM,EAAKc,mBAAmBwB,IAF7C,SAIKA,GAHMA,eAjEvC,GAA6BC,IAAMC,WCGtBC,GAAiBlC,aAdN,SAAClE,GAAD,MAAuB,CAC3CP,UAAWO,EAAMI,MAAMX,UACvBC,SAAUM,EAAMI,MAAMV,SACtBC,gBAAiBK,EAAMI,MAAMT,gBAC7BC,YAAaI,EAAMI,MAAMR,gBAGF,SAACuE,GAAD,MAA6B,CACpD5D,SAAU,SAAC3B,GAAD,OAAgBuF,EhBNN,SAACvF,GAAD,MAAiB,CAACd,KAAMuB,EAAQT,MgBMjByH,CAASzH,KAC5CkG,SAAU,SAAC1E,GAAD,OAAuB+D,EhBNX,SAAC/D,GAAD,MAAwB,CAACtC,KAAMwB,EAAWc,SgBMtBkG,CAAWlG,KACrDsE,eAAgB,SAAClE,GAAD,OAAkB2D,EhBNN,SAAC3D,GAAD,MAAmB,CAAC1C,KAAMyB,EAAkBiB,QgBM7B+F,CAAiB/F,KAC5D0E,mBAAoB,SAACzE,GAAD,OAAmB0D,EhBNP,SAAC1D,GAAD,MAAoB,CAAC3C,KAAM0B,EAAuBiB,SgBMlC+F,CAAqB/F,QAG3CyD,CAA6CM,I,4DCT9DiC,GAAgC,SAACnE,GAC1C,OACI,sBAAKhB,UAAWS,KAAEC,QAAlB,UAEI,qBAAKV,UAAWS,KAAE2E,iBAAlB,SACI,qBAAKvI,IAAKmE,EAAMnE,IAAKC,IAAKkE,EAAMlE,QAGpC,sBAAKkD,UAAWS,KAAE4E,kBAAlB,UACI,8BAAMrE,EAAMtE,OACZ,0CAAasE,EAAM/D,gBCXtBqI,GAA+C,SAACtE,GAIzD,OACI,sBAAKhB,UAAWS,KAAE8E,gBAAlB,UACI,0BAAUzD,YAAa,gBACbC,SALQ,SAACC,GAAD,OAAyChB,EAAMwE,WAAWxD,EAAEE,cAAcC,QAMlFA,MAAOnB,EAAMyE,iBACvB,wBAAQpD,QARO,kBAAMrB,EAAM0E,WAQ3B,qBCJCC,GAAsC,SAAC3E,GAChD,IAAM4E,EAAc5E,EAAMhE,eAAe+B,KAAI,SAACuC,GAC1C,OAAO,cAAC,GAAD,CACM5E,KAAM4E,EAAK5E,KACXG,IAAKyE,EAAKzE,IACVC,IAAKwE,EAAKxE,IACVG,MAAOqE,EAAKrE,OAJPM,kBAOtB,OACI,0BAASyC,UAAWS,KAAEC,QAAtB,UACI,cAAC,GAAD,CAAc+E,eAAgBzE,EAAMyE,eACtBC,QAAS1E,EAAM0E,QACfF,WAAYxE,EAAMwE,aAC/BI,M,oBCpBAC,GAAwC,SAAC7E,GAClD,OACI,qBAAKhB,UAAWS,KAAEqF,eAAlB,SACI,qBACIjJ,IAAKmE,EAAMnE,IACXC,IAAKkE,EAAMlE,SCNdiJ,GAAoC,SAAC/E,GAC9C,OACI,qBAAKhB,UAAWS,KAAEuF,aAAlB,SACI,6BAAKhF,EAAMjE,WCAVkJ,GAA0C,SAACjF,GACpD,OACI,0BAAShB,UAAWS,KAAEC,QAAtB,UACI,cAAC,GAAD,CAAU7D,IAAKmE,EAAMpE,iBAAiBC,IAAKC,IAAKkE,EAAMpE,iBAAiBE,MACvE,cAAC,GAAD,CAAQC,MAAOiE,EAAMpE,iBAAiBG,YCErCmJ,GAAmBtD,aAXR,SAAClE,GAAD,MAAuB,CAC3C9B,iBAAkB8B,EAAMD,QAAQ7B,iBAChCI,eAAgB0B,EAAMD,QAAQzB,eAC9ByI,eAAgB/G,EAAMD,QAAQvB,QAAQR,SAGf,SAACmG,GAAD,MAA6B,CACpD6C,QAAS,kBAAM7C,EAAStG,MACxBiJ,WAAY,SAAC9I,GAAD,OAAkBmG,EAASpG,EAAaC,QAGxBkG,ECAmB,SAAC5B,GAEhD,IAAM6B,EAAWsD,cAUjB,OACI,uBAAMnG,UAAWS,KAAEC,QAAnB,UACI,cAAC,GAAD,CAAW9D,iBAAkBoE,EAAMpE,mBAEnC,cAAC,GAAD,CACII,eAAgBgE,EAAMhE,eACtByI,eAAgBzE,EAAMyE,eACtBC,QAfI,WACZ7C,EAAStG,MAeDiJ,WAZO,SAAC9I,GAChBmG,EAASpG,EAAaC,aChBxB0J,GACO,WADPA,GAEO,WAFPA,GAGK,SAGEC,GAAM,WACf,OACI,sBAAKrG,UAAW,MAAhB,UACI,cAAC,EAAD,IACA,sBAAKA,UAAW,iBAAhB,UACI,cAACgD,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsD,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAU5F,GAAIwF,QACpD,cAAC,IAAD,CAAOE,KAAMF,GACNI,OAAQ,kBAAM,cAACN,GAAD,OACrB,cAAC,IAAD,CAAOI,KAAMF,GACNI,OAAQ,kBAAM,cAAC7D,EAAD,OACrB,cAAC,IAAD,CAAO2D,KAAMF,GACNI,OAAQ,kBAAM,cAAC1B,GAAD,iBCnBzC2B,IAASD,OACL,cAAC,IAAME,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUtH,MAAOA,EAAjB,SACI,cAAC,GAAD,UAGSuH,SAASC,eAAe,SAEjDhL,M","file":"static/js/main.152be48a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyProfile_wrapper__cp4Sk\",\"avatar_wrapper\":\"MyProfile_avatar_wrapper__1ttbl\",\"info_wrapper\":\"MyProfile_info_wrapper__2K8dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Sidebar_wrapper__38jnK\",\"container\":\"Sidebar_container__1dNie\",\"active\":\"Sidebar_active__1ixxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3jZPv\",\"container\":\"Header_container__2LYHX\",\"miniProfileImg\":\"Header_miniProfileImg__1x289\",\"logoWrapper\":\"Header_logoWrapper__nqon6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__15TKy\",\"control_wrapper\":\"MyPosts_control_wrapper__2ZGHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__3ZTzx\",\"avatar_container\":\"Post_avatar_container__4fRhO\",\"content_container\":\"Post_content_container__3MGXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__2B6mU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__OXmKF\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__dCwpn\",\"dialogsContainer\":\"Dialogs_dialogsContainer__CDolV\",\"friendsContainer\":\"Dialogs_friendsContainer__YeVKw\",\"active\":\"Dialogs_active__3y7fC\",\"messageWrapper\":\"Dialogs_messageWrapper__IjTOH\",\"avatar\":\"Dialogs_avatar__2vOPD\",\"controlContainer\":\"Dialogs_controlContainer__1HQ5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__ZCzzQ\",\"userContainer\":\"Users_userContainer__2c6Ho\",\"avatarAndFollowContainer\":\"Users_avatarAndFollowContainer__3-XAj\",\"avatar\":\"Users_avatar__c2jXs\",\"userInfoContainer\":\"Users_userInfoContainer__2TtV2\",\"name\":\"Users_name__2qyGf\",\"paginationContainer\":\"Users_paginationContainer__3XZra\",\"currentPage\":\"Users_currentPage__2D_pe\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const ADD_POST = 'ADD_POST'\r\nexport const UPDATE_POST_TEXT = 'UPDATE_POST_TEXT'\r\n\r\nexport const addPostAC = () => ({type: ADD_POST}) as const\r\nexport const updatePostAC = (text: string) => ({type: UPDATE_POST_TEXT, text: text}) as const","import {ActionsType, ProfileType} from '../../types/types'\r\nimport {ADD_POST, UPDATE_POST_TEXT} from '../actions/profileActions'\r\n\r\nconst initialState: ProfileType = {\r\n    dataForMyProfile: {\r\n        src: 'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album',\r\n        alt: 'My profile',\r\n        title: 'Илья Садовский'\r\n    },\r\n    dataForMyPosts: [\r\n        {\r\n            src: 'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album',\r\n            alt: 'My profile',\r\n            text: 'My first post',\r\n            likes: 10\r\n        },\r\n        {\r\n            src: 'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album',\r\n            alt: 'My profile',\r\n            text: 'My second post',\r\n            likes: 5\r\n        },\r\n        {\r\n            src: 'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album',\r\n            alt: 'My profile',\r\n            text: 'My third post',\r\n            likes: 43\r\n        },\r\n        {\r\n            src: 'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album',\r\n            alt: 'My profile',\r\n            text: 'My fourth post',\r\n            likes: 0\r\n        }\r\n    ],\r\n    newPost: {\r\n        src: 'https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album',\r\n        alt: 'My profile',\r\n        text: 'Что-то чтобы не вводить для тестов',\r\n        likes: 0\r\n    }\r\n}\r\n\r\nexport const profileReducer = (state: ProfileType = initialState, action: ActionsType): ProfileType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                dataForMyPosts: [{...state.newPost}, ...state.dataForMyPosts],\r\n                newPost: {...state.newPost, text: ''}\r\n            }\r\n        case UPDATE_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPost: {...state.newPost, text: action.text}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const SEND_MESSAGE = 'SEND_MESSAGE'\r\nexport const UPDATE_MESSAGE_TEXT = 'UPDATE_MESSAGE_TEXT'\r\n\r\nexport const sendMessageAC = () => ({type: SEND_MESSAGE}) as const\r\nexport const updateMessageTextAC = (text: string) => ({type: UPDATE_MESSAGE_TEXT, text: text}) as const","import {v1} from 'uuid'\r\nimport {ActionsType, DialogsType} from '../../types/types'\r\nimport {SEND_MESSAGE, UPDATE_MESSAGE_TEXT} from '../actions/dialogsActions'\r\n\r\nconst initialState: DialogsType = {\r\n    dataForFriends: [\r\n        {id: v1(), name: 'Me'},\r\n        {id: v1(), name: 'Maxim'},\r\n        {id: v1(), name: 'Andrei'},\r\n        {id: v1(), name: 'Yura'}\r\n    ],\r\n\r\n    dataForMessages: [\r\n        {id: v1(), from: 'Me', message: 'Привет, как дела?'},\r\n        {id: v1(), from: 'Andrei', message: 'Ку-ку, отлично. А у тебя?'},\r\n        {id: v1(), from: 'Me', message: 'Плохо, монитор из сервисного центре не отдают!'},\r\n        {id: v1(), from: 'Me', message: 'Пользуются им уже дольше чем я'},\r\n        {id: v1(), from: 'Andrei', message: 'Козлы'},\r\n        {id: v1(), from: 'Me', message: 'Ага!'}\r\n    ],\r\n    newMessage: {\r\n        id: v1(),\r\n        from: 'Me',\r\n        message: ''\r\n    }\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsType = initialState, action: ActionsType): DialogsType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                dataForMessages: [...state.dataForMessages, {...state.newMessage}],\r\n                newMessage: {...state.newMessage, message: ''}\r\n            }\r\n        case UPDATE_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                newMessage: {...state.newMessage, message: action.text}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {ActionsType, SidebarType} from '../../types/types'\r\n\r\nconst initialState: SidebarType = {\r\n    dataForSidebar: [\r\n        {name: 'Profile', link: '/profile'},\r\n        {name: 'Dialogs', link: '/dialogs'},\r\n        {name: 'Users', link: '/users'}\r\n    ]\r\n}\r\n\r\nexport const sidebarReducer = (state: SidebarType = initialState, action: ActionsType): SidebarType => {\r\n    return state\r\n}\r\n","import {UserType} from '../../types/types'\r\n\r\nexport const FOLLOW = 'FOLLOW'\r\nexport const SET_USERS = 'SET_USERS'\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nexport const SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\n\r\nexport const followAC = (id: string) => ({type: FOLLOW, id}) as const\r\nexport const setUsersAC = (users: UserType[]) => ({type: SET_USERS, users}) as const\r\nexport const setCurrentPageAC = (page: number) => ({type: SET_CURRENT_PAGE, page}) as const\r\nexport const setTotalUsersCountAC = (total: number) => ({type: SET_TOTAL_USERS_COUNT, total}) as const","import {ActionsType, UsersType} from '../../types/types'\r\nimport {FOLLOW, SET_CURRENT_PAGE, SET_TOTAL_USERS_COUNT, SET_USERS} from '../actions/usersActions'\r\n\r\nconst initialState: UsersType = {\r\n    usersData: [],\r\n    pageSize: 25,\r\n    totalUsersCount: 0,\r\n    currentPage: 1\r\n}\r\n\r\nexport const usersReducer = (state: UsersType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData\r\n                    .map((user) => user.id === action.id\r\n                        ? {...user, followed: !user.followed}\r\n                        : user)\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {...state, usersData: [...action.users]}\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.page}\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.total}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers, createStore} from 'redux'\r\nimport {profileReducer} from './reducers/profile-reducer'\r\nimport {dialogsReducer} from './reducers/dialogs-reducer'\r\nimport {sidebarReducer} from './reducers/sidebar-reducer'\r\nimport {usersReducer} from './reducers/users-reducer'\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        profile: profileReducer,\r\n        dialogs: dialogsReducer,\r\n        sidebar: sidebarReducer,\r\n        users: usersReducer\r\n    }\r\n)\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react'\r\n\r\nexport const LogoIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n             stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\r\n             className=\"feather feather-share-2\">\r\n            <circle cx=\"18\" cy=\"5\" r=\"3\"/>\r\n            <circle cx=\"6\" cy=\"12\" r=\"3\"/>\r\n            <circle cx=\"18\" cy=\"19\" r=\"3\"/>\r\n            <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"/>\r\n            <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"/>\r\n        </svg>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport {LogoIcon} from './LogoIcon'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.container}>\r\n                <NavLink to={'/'} className={s.logoWrapper}><LogoIcon/><span>Social Network</span></NavLink>\r\n                <img\r\n                    src=\"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\"\r\n                    alt=\"mini-profile\"\r\n                    className={s.miniProfileImg}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {NavLink} from 'react-router-dom'\r\nimport s from '../../Dialogs.module.css'\r\nimport React from 'react'\r\nimport {DataForFriendsType} from '../../../../../types/types'\r\n\r\nexport const Friend: React.FC<DataForFriendsType> = (props) => {\r\n    return (\r\n        <NavLink to={'/dialogs/' + props.id}\r\n                 className={s.friend}\r\n                 activeClassName={s.active}>\r\n            {props.name}\r\n        </NavLink>\r\n    )\r\n}","import s from '../Dialogs.module.css'\r\nimport React from 'react'\r\nimport {Friend} from './Friend/Friend'\r\nimport {DataForFriendsType} from '../../../../types/types'\r\n\r\ntype FriendsContainerPropsType = {\r\n    dataForFriends: DataForFriendsType[]\r\n}\r\n\r\nexport const FriendsToChat: React.FC<FriendsContainerPropsType> = (props) => {\r\n    const dialogWithFriend = props.dataForFriends.map((item) => <Friend key={item.id} id={item.id} name={item.name}/>)\r\n\r\n    return (\r\n        <div className={s.friendsContainer}>\r\n            {dialogWithFriend}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import s from '../../Dialogs.module.css'\r\nimport React from 'react'\r\n\r\ntype MessagePropsType = {\r\n    id: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.messageWrapper}>\r\n            <div className={s.avatar}>\r\n                <img\r\n                    src=\"https://sun9-5.userapi.com/impf/c836635/v836635330/314ed/9md97EBkSPg.jpg?size=600x600&quality=96&sign=302798ae13b76abf476b1e71420b702f&type=album\"\r\n                    alt=\"qq\"/>\r\n            </div>\r\n            <div className={s.messageContainer}>\r\n                <div><b>{props.from}:</b></div>\r\n                <div>{props.message}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from '../../Dialogs.module.css'\r\nimport React, {ChangeEvent} from 'react'\r\n\r\ntype DialogsControlPropsType = {\r\n    sendMessage: () => void\r\n    updateMessage: (text: string) => void\r\n    textForNewMessage: string\r\n}\r\n\r\nexport const DialogsControl: React.FC<DialogsControlPropsType> = (props) => {\r\n    const sendMessageHandler = () => props.sendMessage()\r\n    const updateMessageHandler = (e: ChangeEvent<HTMLTextAreaElement>) => props.updateMessage(e.currentTarget.value)\r\n\r\n    return (\r\n        <div className={s.controlContainer}>\r\n            <textarea placeholder={'Say something'}\r\n                      onChange={updateMessageHandler}\r\n                      value={props.textForNewMessage}/>\r\n            <button onClick={sendMessageHandler}>Add</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\nimport {Message} from './Message/Message'\r\nimport {DialogsControl} from './DialogsControl/DialogsControl'\r\nimport {v1} from 'uuid'\r\nimport {MessagesDataType} from '../../../../types/types'\r\n\r\ntype DialogsContainerPropsType = {\r\n    dataForMessages: MessagesDataType[]\r\n    sendMessage: () => void\r\n    updateMessage: (text: string) => void\r\n    textForNewMessage: string\r\n}\r\n\r\nexport const DialogsChat: React.FC<DialogsContainerPropsType> = (props) => {\r\n    const mappedMessages = props.dataForMessages.map(item => <Message\r\n        key={v1()} from={item.from} message={item.message} id={item.id}/>)\r\n\r\n    return (\r\n        <div className={s.dialogsWrapper}>\r\n            <div className={s.dialogsContainer}>\r\n                {mappedMessages}\r\n            </div>\r\n            <DialogsControl\r\n                textForNewMessage={props.textForNewMessage}\r\n                sendMessage={props.sendMessage}\r\n                updateMessage={props.updateMessage}\r\n            />\r\n        </div>\r\n    )\r\n}","import {connect} from 'react-redux'\r\nimport {Dialogs} from './Dialogs'\r\nimport {DispatchType, StateType} from '../../../types/types'\r\nimport {sendMessageAC, updateMessageTextAC} from '../../../redux/actions/dialogsActions'\r\n\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    dataForMessages: state.dialogs.dataForMessages,\r\n    textForNewMessage: state.dialogs.newMessage.message,\r\n    dataForFriends: state.dialogs.dataForFriends\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: DispatchType) => ({\r\n    sendMessage: () => dispatch(sendMessageAC()),\r\n    updateMessage: (text: string) => dispatch(updateMessageTextAC(text))\r\n})\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport {FriendsToChat} from './FriendsToChat/FriendsToChat'\r\nimport {DialogsChat} from './DialogsChat/DialogsChat'\r\nimport {DataForFriendsType, MessagesDataType} from '../../../types/types'\r\n\r\ntype DialogsPropsType = {\r\n    dataForMessages: MessagesDataType[]\r\n    sendMessage: () => void\r\n    updateMessage: (text: string) => void\r\n    textForNewMessage: string\r\n    dataForFriends: DataForFriendsType[]\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    return (\r\n        <main className={s.wrapper}>\r\n            <FriendsToChat dataForFriends={props.dataForFriends}/>\r\n            <DialogsChat\r\n                dataForMessages={props.dataForMessages}\r\n                textForNewMessage={props.textForNewMessage}\r\n                sendMessage={props.sendMessage}\r\n                updateMessage={props.updateMessage}\r\n            />\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nimport s from '../Sidebar.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\ntype SidebarItemPropsType = {\r\n    link: string\r\n    name: string\r\n}\r\n\r\nexport const SidebarItem: React.FC<SidebarItemPropsType> = (props) => {\r\n    return <NavLink to={props.link} activeClassName={s.active}>{props.name}</NavLink>\r\n}","import {connect} from 'react-redux'\r\nimport {Sidebar} from './Sidebar'\r\nimport {StateType} from '../../../types/types'\r\n\r\nconst mapStateToProps = (state: StateType) => (\r\n    {\r\n        dataForSidebar: state.sidebar.dataForSidebar\r\n    }\r\n)\r\n\r\nexport const SidebarContainer = connect(mapStateToProps)(Sidebar)","import React from 'react'\r\nimport s from './Sidebar.module.css'\r\nimport {SidebarItem} from './SidebarItem/SidebarItem'\r\nimport {v1} from 'uuid'\r\nimport {dataForSidebarType} from '../../../types/types'\r\n\r\ntype SidebarPropsType = {\r\n    dataForSidebar: dataForSidebarType[]\r\n}\r\n\r\nexport const Sidebar: React.FC<SidebarPropsType> = (props) => {\r\n    const mappedSidebarItems = props.dataForSidebar.map(item => {\r\n        return <SidebarItem key={v1()} name={item.name} link={item.link}/>\r\n    })\r\n\r\n    return (\r\n        <aside className={s.wrapper}>\r\n            <nav className={s.container}>\r\n                {mappedSidebarItems}\r\n            </nav>\r\n        </aside>\r\n    )\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {UserType} from '../../../types/types'\r\nimport s from './Users.module.css'\r\nimport axios from 'axios'\r\n\r\ntype UsersPropsType = {\r\n    usersData: UserType[]\r\n    followed: (id: string) => void\r\n    setUsers: (users: UserType[]) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    setCurrentPage: (page: number) => void\r\n    setTotalUsersCount: (total: number) => void\r\n}\r\n\r\nexport class UsersCC extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        axios\r\n            .get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${this.props.currentPage}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUsersCount(response.data.totalCount)\r\n            })\r\n    }\r\n\r\n    onPageClickHandler = (page: number) => {\r\n        this.props.setCurrentPage(page)\r\n        axios\r\n            .get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${page}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize)\r\n\r\n        let pages: number[] = []\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n\r\n        return (\r\n            <main className={s.wrapper}>\r\n                {\r\n                    this.props.usersData.map(user => (\r\n                        <div key={user.name} className={s.userContainer}>\r\n\r\n                            <div className={s.avatarAndFollowContainer}>\r\n                                <div className={s.avatar}>\r\n                                    <img\r\n                                        src={user.photos.small !== null\r\n                                            ? user.photos.small\r\n                                            : 'https://pbs.twimg.com/profile_images/1368235617243426820/L0m5gTDB.jpg'}\r\n                                        alt={user.name}/>\r\n                                </div>\r\n                                <button onClick={() => this.props.followed(user.id)}>\r\n                                    {user.followed ? 'Unfollow' : 'Follow'}\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className={s.userInfoContainer}>\r\n                                <div className={s.name}>\r\n                                    {user.name}\r\n                                </div>\r\n                                <div>\r\n                                    {user.followed ? 'Вы уже дружите' : 'Ждет дружбы'}\r\n                                </div>\r\n                                <div>\r\n                                    {user.status !== null ? user.status : 'Место для вашего статуса'}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div className={s.paginationContainer}>\r\n                    {\r\n                        pages.map(p => (\r\n                            <span className={this.props.currentPage === p ? s.currentPage : ''}\r\n                                  key={p}\r\n                                  onClick={() => this.onPageClickHandler(p)}\r\n                            >\r\n                                {p}\r\n                            </span>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport const UsersFC: React.FC<UsersPropsType> = (props) => {\r\n\r\n    // for onClick\r\n    /*const getUsers = () => {\r\n        if (!props.usersData.length) {\r\n            axios\r\n                .get('https://social-network.samuraijs.com/api/1.0/users')\r\n                .then(response => {\r\n                    props.setUsers(response.data.items)\r\n                })\r\n        }\r\n    }*/\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://social-network.samuraijs.com/api/1.0/users')\r\n            .then(response => {\r\n                props.setUsers(response.data.items)\r\n            })\r\n    }, [])\r\n\r\n    const users = props.usersData.map(user => (\r\n        <div key={user.name} className={s.userContainer}>\r\n\r\n            <div className={s.avatarAndFollowContainer}>\r\n                <div className={s.avatar}>\r\n                    <img\r\n                        src={user.photos.small !== null\r\n                            ? user.photos.small\r\n                            : 'https://pbs.twimg.com/profile_images/1368235617243426820/L0m5gTDB.jpg'}\r\n                        alt={user.name}/>\r\n                </div>\r\n                <button onClick={() => props.followed(user.id)}>\r\n                    {user.followed ? 'Unfollow' : 'Follow'}\r\n                </button>\r\n            </div>\r\n\r\n            <div className={s.userInfoContainer}>\r\n                <div className={s.name}>\r\n                    {user.name}\r\n                </div>\r\n                <div>\r\n                    {user.followed ? 'Вы уже дружите' : 'Ждет дружбы'}\r\n                </div>\r\n                <div>\r\n                    {user.status !== null ? user.status : 'Место для вашего статуса'}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    ))\r\n\r\n    return (\r\n        <main className={s.wrapper}>\r\n            {users}\r\n        </main>\r\n    )\r\n}\r\n","import {connect} from 'react-redux'\r\nimport {UsersCC} from './Users'\r\nimport {DispatchType, StateType, UserType} from '../../../types/types'\r\nimport {followAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC} from '../../../redux/actions/usersActions'\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    usersData: state.users.usersData,\r\n    pageSize: state.users.pageSize,\r\n    totalUsersCount: state.users.totalUsersCount,\r\n    currentPage: state.users.currentPage\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: DispatchType) => ({\r\n    followed: (id: string) => dispatch(followAC(id)),\r\n    setUsers: (users: UserType[]) => dispatch(setUsersAC(users)),\r\n    setCurrentPage: (page: number) => dispatch(setCurrentPageAC(page)),\r\n    setTotalUsersCount: (total: number) => dispatch(setTotalUsersCountAC(total))\r\n})\r\n\r\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersCC)","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\ntype PostPropsType = {\r\n    src: string\r\n    alt: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nexport const Post: React.FC<PostPropsType> = (props) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n\r\n            <div className={s.avatar_container}>\r\n                <img src={props.src} alt={props.alt}/>\r\n            </div>\r\n\r\n            <div className={s.content_container}>\r\n                <div>{props.text}</div>\r\n                <div>Likes: {props.likes}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import s from \"../MyPosts.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\ntype PostControlPropsType = {\r\n    textForNewPost: string\r\n    addPost: () => void\r\n    updatePost: (text: string) => void\r\n}\r\n\r\nexport const PostsControl: React.FC<PostControlPropsType> = (props) => {\r\n    const addPostHandler = () => props.addPost()\r\n    const updatePostHandler = (e: ChangeEvent<HTMLTextAreaElement>) => props.updatePost(e.currentTarget.value)\r\n\r\n    return (\r\n        <div className={s.control_wrapper}>\r\n            <textarea placeholder={'Say something'}\r\n                      onChange={updatePostHandler}\r\n                      value={props.textForNewPost}/>\r\n            <button onClick={addPostHandler}>Add</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {v1} from \"uuid\";\r\nimport {PostsControl} from \"./PostControl/PostControl\";\r\nimport {dataForMyPostsType} from \"../../../../types/types\";\r\n\r\ntype MyPostsPropsType = {\r\n    addPost: any\r\n    updatePost: (text: string) => void\r\n    textForNewPost: string\r\n    dataForMyPosts: dataForMyPostsType[]\r\n}\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n    const mappedPosts = props.dataForMyPosts.map((item) => {\r\n        return <Post key={v1()}\r\n                     text={item.text}\r\n                     src={item.src}\r\n                     alt={item.alt}\r\n                     likes={item.likes}/>\r\n    })\r\n\r\n    return (\r\n        <section className={s.wrapper}>\r\n            <PostsControl textForNewPost={props.textForNewPost}\r\n                          addPost={props.addPost}\r\n                          updatePost={props.updatePost}/>\r\n            {mappedPosts}\r\n        </section>\r\n    )\r\n}","import s from '../MyProfile.module.css'\r\nimport React from 'react'\r\n\r\ntype MyAvatarPropsType = {\r\n    src: string\r\n    alt: string\r\n}\r\n\r\nexport const MyAvatar: React.FC<MyAvatarPropsType> = (props) => {\r\n    return (\r\n        <div className={s.avatar_wrapper}>\r\n            <img\r\n                src={props.src}\r\n                alt={props.alt}/>\r\n        </div>\r\n    )\r\n}","import s from '../MyProfile.module.css'\r\nimport React from 'react'\r\n\r\ntype MyInfoPropsType = {\r\n    title: string\r\n}\r\n\r\nexport const MyInfo: React.FC<MyInfoPropsType> = (props) => {\r\n    return (\r\n        <div className={s.info_wrapper}>\r\n            <h3>{props.title}</h3>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './MyProfile.module.css'\r\nimport {MyAvatar} from './MyAvatar/MyAvatar'\r\nimport {MyInfo} from './MyInfo/MyInfo'\r\nimport {dataForMyProfileType} from '../../../../types/types'\r\n\r\ntype MyProfilePropsType = {\r\n    dataForMyProfile: dataForMyProfileType\r\n}\r\n\r\nexport const MyProfile: React.FC<MyProfilePropsType> = (props) => {\r\n    return (\r\n        <section className={s.wrapper}>\r\n            <MyAvatar src={props.dataForMyProfile.src} alt={props.dataForMyProfile.alt}/>\r\n            <MyInfo title={props.dataForMyProfile.title}/>\r\n        </section>\r\n    )\r\n}","import {connect} from 'react-redux'\r\nimport {Profile} from './Profile'\r\nimport {DispatchType, StateType} from '../../../types/types'\r\nimport {addPostAC, updatePostAC} from '../../../redux/actions/profileActions'\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    dataForMyProfile: state.profile.dataForMyProfile,\r\n    dataForMyPosts: state.profile.dataForMyPosts,\r\n    textForNewPost: state.profile.newPost.text\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: DispatchType) => ({\r\n    addPost: () => dispatch(addPostAC()),\r\n    updatePost: (text: string) => dispatch(updatePostAC(text))\r\n})\r\n\r\nexport const ProfileContainer = connect(mapStateToProps, mapDispatchToProps)(Profile)","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport {MyPosts} from './MyPosts/MyPosts'\r\nimport {MyProfile} from './MyProfile/MyProfile'\r\nimport {dataForMyPostsType, dataForMyProfileType} from '../../../types/types'\r\nimport {useDispatch} from 'react-redux'\r\nimport {addPostAC, updatePostAC} from '../../../redux/actions/profileActions'\r\n\r\ntype ProfilePropsType = {\r\n    dataForMyProfile: dataForMyProfileType\r\n    addPost: () => void\r\n    updatePost: (text: string) => void\r\n    textForNewPost: string\r\n    dataForMyPosts: dataForMyPostsType[]\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addPost = () => {\r\n        dispatch(addPostAC())\r\n    }\r\n\r\n    const updatePost = (text: string) => {\r\n        dispatch(updatePostAC(text))\r\n    }\r\n\r\n    return (\r\n        <main className={s.wrapper}>\r\n            <MyProfile dataForMyProfile={props.dataForMyProfile}/>\r\n\r\n            <MyPosts\r\n                dataForMyPosts={props.dataForMyPosts}\r\n                textForNewPost={props.textForNewPost}\r\n                addPost={addPost}\r\n                updatePost={updatePost}/>\r\n        </main>\r\n    )\r\n}","import React from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport './index.css'\nimport {Header} from './components/Content/Header/Header'\nimport {DialogsContainer} from './components/Content/Dialogs/DialogsContainer'\nimport {SidebarContainer} from './components/Content/Sidebar/SidebarContainer'\nimport {UsersContainer} from './components/Content/Users/UsersContainer'\nimport {ProfileContainer} from './components/Content/Profile/ProfileContainer'\n\nconst PATH = {\n    PROFILE: '/profile',\n    DIALOGS: '/dialogs',\n    USERS: '/users'\n}\n\nexport const App = () => {\n    return (\n        <div className={'App'}>\n            <Header/>\n            <div className={'ContentWrapper'}>\n                <SidebarContainer/>\n                <Switch>\n                    <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n                    <Route path={PATH.PROFILE}\n                           render={() => <ProfileContainer/>}/>\n                    <Route path={PATH.DIALOGS}\n                           render={() => <DialogsContainer/>}/>\n                    <Route path={PATH.USERS}\n                           render={() => <UsersContainer/>}/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {HashRouter} from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals'\nimport './index.css'\nimport {store} from './redux/store'\nimport {App} from './App'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>, document.getElementById('root'))\n\nreportWebVitals()"],"sourceRoot":""}