{"version":3,"sources":["components/UI/Form/FormTextarea/FormTextarea.tsx","hoc/withAuthRedirect.tsx","../node_modules/@mui/material/Divider/dividerClasses.js","components/UI/Form/SingleTextareaForm/SingleTextareaForm.tsx","components/Content/Dialogs/DialogsForm/DialogsForm.tsx","../node_modules/@mui/material/Divider/Divider.js","components/Content/Dialogs/Messages/Message/Message.tsx","components/Content/Dialogs/Messages/Messages.tsx","components/Content/Dialogs/Dialogs.tsx","api/web-socket.ts","components/Content/Dialogs/DialogsContainer.tsx"],"names":["FormTextarea","React","memo","props","useField","field","meta","className","s","formField","multiline","maxRows","error","touched","errorMessage","withAuthRedirect","Component","useSelector","state","auth","isAuth","to","PATH","LOGIN","getDividerUtilityClass","slot","generateUtilityClass","dividerClasses","generateUtilityClasses","SingleTextareaForm","onSubmit","initialValues","textarea","validationSchema","Yup","required","values","resetForm","setSubmitting","isSubmitting","name","label","Button","type","variant","disabled","DialogsForm","_excluded","DividerRoot","styled","overridesResolver","styles","ownerState","root","absolute","light","orientation","vertical","flexItem","children","withChildren","withChildrenVertical","textAlign","textAlignRight","textAlignLeft","theme","_extends","margin","flexShrink","borderWidth","borderStyle","borderColor","palette","divider","borderBottomWidth","position","bottom","left","width","alpha","marginLeft","spacing","marginRight","marginTop","marginBottom","height","borderRightWidth","alignSelf","display","whiteSpace","border","borderTop","top","content","transform","flexDirection","borderLeft","DividerWrapper","wrapper","wrapperVertical","paddingLeft","paddingRight","paddingTop","paddingBottom","Divider","inProps","ref","useThemeProps","component","role","undefined","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","Message","userName","message","photo","userID","Box","PROFILE","Avatar","alt","src","sx","Messages","messages","bottomOfMessages","useRef","mappedMessages","map","userId","messageID","useEffect","current","scrollIntoView","behavior","maxHeight","overflowY","Dialogs","sendMessage","webSocket","WebSocket","DialogsContainer","dialogs","dispatch","useDispatch","addEventListener","e","setMessages","JSON","parse","data","send","compose"],"mappings":"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","file":"static/js/5.f5a1f23a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {useField} from 'formik'\r\nimport s from '../Form.module.css'\r\nimport {TextField} from '@mui/material'\r\n\r\ntype FormTextareaPropsType = {\r\n    label?: string\r\n    name: string\r\n    placeholder?: string\r\n    id?: string\r\n}\r\n\r\nexport const FormTextarea: React.FC<FormTextareaPropsType> = React.memo(({...props}) => {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n        <div className={s.formField}>\r\n            <TextField {...field} {...props} multiline maxRows={4} error={!!meta.error}/>\r\n            {meta.touched && meta.error && <div className={s.errorMessage}>{meta.error}</div>}\r\n        </div>\r\n    )\r\n})","import React, {ComponentType} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport {PATH} from '../routes/routes'\r\nimport {RootState} from '../redux/store'\r\n\r\ntype WithAuthRedirectPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport const withAuthRedirect = <ComponentProps extends WithAuthRedirectPropsType>(Component: ComponentType<ComponentProps>) => {\r\n\r\n    const AuthRedirect: React.FC<WithAuthRedirectPropsType & ComponentProps> = props => {\r\n        const isAuth = useSelector<RootState>(state => state.auth.isAuth)\r\n\r\n        if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    return AuthRedirect\r\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import React from 'react'\r\nimport * as Yup from 'yup'\r\nimport {Form, Formik} from 'formik'\r\nimport {FormTextarea} from '../FormTextarea/FormTextarea'\r\nimport {Button} from '@mui/material'\r\n\r\ntype SingleTextareaFormPropsType = {\r\n    onSubmit: (message: string) => void\r\n}\r\n\r\nexport const SingleTextareaForm: React.FC<SingleTextareaFormPropsType> = React.memo(props => {\r\n    const {onSubmit} = props\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{textarea: ''}}\r\n\r\n            validationSchema={Yup.object({\r\n                textarea: Yup.string()\r\n                    .required('Required'),\r\n            })}\r\n\r\n            onSubmit={(values, {resetForm, setSubmitting}) => {\r\n                resetForm()\r\n                onSubmit(values.textarea)\r\n            }}>\r\n\r\n            {({isSubmitting}) => <Form>\r\n                <FormTextarea name='textarea' label={'Type your message'}/>\r\n\r\n                <Button type={'submit'}\r\n                        variant={'contained'}\r\n                        disabled={isSubmitting}>\r\n                    Send\r\n                </Button>\r\n            </Form>}\r\n        </Formik>\r\n    )\r\n})","import React from 'react'\r\nimport {SingleTextareaForm} from '../../../UI/Form/SingleTextareaForm/SingleTextareaForm'\r\n\r\ntype DialogsControlPropsType = {\r\n    onSubmit: (message: string) => void\r\n}\r\n\r\nexport const DialogsForm: React.FC<DialogsControlPropsType> = React.memo(props => {\r\n    const {onSubmit} = props\r\n    return <SingleTextareaForm onSubmit={onSubmit}/>\r\n})","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\n\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: theme.palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  '&::before, &::after': {\n    position: 'relative',\n    width: '100%',\n    borderTop: `thin solid ${theme.palette.divider}`,\n    top: '50%',\n    content: '\"\"',\n    transform: 'translateY(50%)'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    top: '0%',\n    left: '50%',\n    borderTop: 0,\n    borderLeft: `thin solid ${theme.palette.divider}`,\n    transform: 'translateX(0%)'\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: theme.spacing(1.2),\n  paddingRight: theme.spacing(1.2)\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: theme.spacing(1.2),\n  paddingBottom: theme.spacing(1.2)\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n\n  const {\n    absolute = false,\n    children,\n    className,\n    component = children ? 'div' : 'hr',\n    flexItem = false,\n    light = false,\n    orientation = 'horizontal',\n    role = component !== 'hr' ? 'separator' : undefined,\n    textAlign = 'center',\n    variant = 'fullWidth'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","import React, {memo} from 'react'\r\nimport {Avatar, Box, Divider} from '@mui/material'\r\nimport {Link} from 'react-router-dom'\r\nimport {PATH} from '../../../../../routes/routes'\r\n\r\ntype MessagePropsType = {\r\n    userName: string\r\n    message: string\r\n    photo: string\r\n    userID: number\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = memo(props => {\r\n    const {userName, message, photo, userID} = props\r\n\r\n    return (\r\n        <Box>\r\n            <Link to={`${PATH.PROFILE}/${userID}`}>\r\n                <Avatar alt={userName}\r\n                        src={photo}\r\n                        sx={{width: 64, height: 64}}/>\r\n            </Link>\r\n\r\n            <Box>\r\n                <strong>{userName}:</strong>\r\n            </Box>\r\n\r\n            <Box>{message}</Box>\r\n\r\n\r\n            <Divider/>\r\n        </Box>\r\n    )\r\n})","import React, {useEffect, useRef} from 'react'\r\nimport {Message} from './Message/Message'\r\nimport {ChatMessageType} from '../../../../types/dialogs-types'\r\nimport {Box} from '@mui/material'\r\n\r\ntype MessagesPropsType = {\r\n    messages: ChatMessageType[]\r\n}\r\n\r\nexport const Messages: React.FC<MessagesPropsType> = React.memo(props => {\r\n    const {messages} = props\r\n\r\n    const bottomOfMessages = useRef<HTMLDivElement>(null)\r\n\r\n    const mappedMessages = messages.map((message) => <Message key={message.messageID}\r\n                                                              userName={message.userName}\r\n                                                              message={message.message}\r\n                                                              photo={message.photo}\r\n                                                              userID={message.userId}/>)\r\n\r\n    useEffect(() => {\r\n        bottomOfMessages.current?.scrollIntoView({behavior: 'smooth'})\r\n    }, [messages])\r\n\r\n    return (\r\n        <Box sx={{maxHeight: 512, overflowY: 'auto'}}>\r\n            {mappedMessages}\r\n            <div ref={bottomOfMessages}/>\r\n        </Box>\r\n    )\r\n})","import React from 'react'\r\nimport {ChatMessageType} from '../../../types/dialogs-types'\r\nimport {DialogsForm} from './DialogsForm/DialogsForm'\r\nimport {Messages} from './Messages/Messages'\r\n\r\ntype DialogsPropsType = {\r\n    messages: ChatMessageType[]\r\n    sendMessage: (message: string) => void\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = React.memo(props => {\r\n    const {messages, sendMessage} = props\r\n\r\n    return (\r\n        <main>\r\n            <Messages messages={messages}/>\r\n            <DialogsForm onSubmit={sendMessage}/>\r\n        </main>\r\n    )\r\n})","export const webSocket = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')","import React, {ComponentType, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Dialogs} from './Dialogs'\r\nimport {DialogsType} from '../../../types/dialogs-types'\r\nimport {withAuthRedirect} from '../../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\nimport {webSocket} from '../../../api/web-socket'\r\nimport {RootState} from '../../../redux/store'\r\nimport {setMessages} from '../../../redux/reducers/dialogs-reducer'\r\n\r\nconst DialogsContainer: React.FC = React.memo(() => {\r\n    const {messages} = useSelector<RootState, DialogsType>(state => state.dialogs)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        webSocket.addEventListener('message', (e) => {\r\n            dispatch(setMessages(JSON.parse(e.data)))\r\n        })\r\n\r\n    }, [dispatch])\r\n\r\n    const sendMessageHandler = (message: string) => webSocket.send(message)\r\n\r\n    return <Dialogs messages={messages}\r\n                    sendMessage={sendMessageHandler}/>\r\n})\r\n\r\nexport default compose<ComponentType>(withAuthRedirect)(DialogsContainer)"],"sourceRoot":""}